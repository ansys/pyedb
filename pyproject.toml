[build-system]
requires = ["flit_core >=3.2,<3.13"] # THIS SHOULD BE REVERTED TO '["flit_core >=3.2,<4"]'
build-backend = "flit_core.buildapi"


[project]
name = "pyedb"
dynamic = ["version"]
description = "Higher-Level Pythonic Ansys Electronics Data Base"
readme = "README.md"
requires-python = ">=3.8,<4"
license = {file = "LICENSE"}
authors = [{name = "ANSYS, Inc.", email = "pyansys.core@ansys.com"}]
maintainers = [{name = "PyEDB developers", email = "simon.vandenbrouck@ansys.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "cffi>=1.16.0,<2.1; platform_system=='Linux'",
    "pywin32 >= 303;platform_system=='Windows'",
    "ansys-pythonnet >= 3.1.0rc4",
    "dotnetcore2 ==3.1.23;platform_system=='Linux'",
    "numpy>=1.20.0,<3",
    "pandas>=1.1.0,<2.4",
    "pydantic>=2.6.4,<2.12",
    "Rtree >= 1.2.0",
    "toml == 0.10.2",
    "shapely",
    "scikit-rf",
    "ansys-edb-core>=0.2.0",
    "psutil",
]

[project.optional-dependencies]
tests = [
    "matplotlib>=3.5.0,<3.11",
    "mock>=5.1.0,<5.3",
    "pytest>=7.4.0,<8.5",
    "pytest-cov>=4.0.0,<7.1",
    "pytest-xdist>=3.5.0,<3.7",
    "scikit-rf",
    "shapely"
]
doc = [
    "ansys-sphinx-theme>=1.0.0,<1.5",
    "imageio>=2.30.0,<2.38",
    "ipython>=8.13.0,<8.32",
    "jupyterlab>=4.0.0,<4.5",
    "jupytext>=1.16.0,<1.18",
    "matplotlib>=3.5.0,<3.11",
    "nbsphinx>=0.9.0,<0.10",
    "nbconvert < 7.17",
    "numpydoc>=1.5.0,<1.9",
    "pypandoc>=1.10.0,<1.16",
    # NOTE: Remove recommonmark once examples are reworked.
    "recommonmark",
    "Sphinx>=7.1.0,<8.2",
    "sphinx-autobuild==2021.3.14; python_version == '3.8'",
    "sphinx-autobuild==2024.10.3; python_version > '3.8'",
    "sphinx-copybutton>=0.5.0,<0.6",
    "sphinx-gallery>=0.14.0,<0.20",
    "sphinx_design>=0.4.0,<0.7",
    "shapely",

]
full = [
    "matplotlib>=3.5.0,<3.11",
    "shapely",
]


[tool.flit.module]
name = "pyedb"

[project.urls]
Bugs = "https://github.com/ansys/pyedb/issues"
Documentation = "https://edb.docs.pyansys.com"
Source = "https://github.com/ansys/pyedb"
Discussions = "https://github.com/ansys/pyedb/discussions"
 Releases = "https://github.com/ansys/pyedb/releases"

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "D",   # pydocstyle, see https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "E",   # pycodestyle, see https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "F",   # pyflakes, see https://docs.astral.sh/ruff/rules/#pyflakes-f
    "I",   # isort, see https://docs.astral.sh/ruff/rules/#isort-i
    "N",   # pep8-naming, see https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PTH", # flake8-use-pathlib, https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "TD",  # flake8-todos, https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "W",   # pycodestyle, see https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
]
ignore = [
    # "D" - pydocstyle, see https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D100", # undocumented-public-module
    "D101", # undocumented-public-class
    "D102", # undocumented-public-method
    "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    "D105", # undocumented-magic-method
    "D106", # undocumented-public-nested-class
    "D200", # unnecessary-multiline-docstring
    "D202", # blank-line-after-function
    "D205", # missing-blank-line-after-summary
    "D208", # over-indentation
    "D209", # new-line-after-last-paragraph
    "D210", # surrounding-whitespace
    "D214", # overindented-section
    "D215", # overindented-section-underline
    "D301", # escape-sequence-in-docstring
    "D400", # missing-trailing-period
    "D401", # non-imperative-mood
    "D403", # first-word-uncapitalized
    "D404", # docstring-starts-with-this
    "D405", # non-capitalized-section-name
    "D406", # missing-new-line-after-section-name
    "D407", # missing-dashed-underline-after-section
    "D409", # mismatched-section-underline-length
    "D410", # no-blank-line-after-section
    "D411", # no-blank-line-before-section
    "D412", # blank-lines-between-header-and-content
    "D414", # empty-docstring-section
    "D419", # empty-docstring

    # "E" - pycodestyle, see https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E402", # module-import-not-at-top-of-file
    "E711", # none-comparison
    "E712", # true-false-comparison
    "E713", # not-in-test
    "E721", # type-comparison
    "E722", # bare-except
    "E731", # lambda-assignment
    "E741", # ambiguous-variable-name
    "E743", # ambiguous-function-name

    # "F" - pyflakes, see https://docs.astral.sh/ruff/rules/#pyflakes-f
    "F401", # unused-import
    "F523", # string-dot-format-extra-positional-arguments
    "F541", # f-string-missing-placeholders
    "F811", # redefined-while-unused
    "F821", # undefined-name
    "F841", # unused-variable

    # "N" - pep8-naming, see https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "N801", # invalid-class-name
    "N802", # invalid-function-name
    "N803", # invalid-argument-name
    "N806", # non-lowercase-variable-in-function
    "N812", # lowercase-imported-as-non-lowercase
    "N813", # camelcase-imported-as-lowercase
    "N815", # mixed-case-variable-in-class-scope
    "N816", # mixed-case-variable-in-global-scope
    "N817", # camelcase-imported-as-acronym
    "N818", # error-suffix-on-exception-name
    "N999", # invalid-module-name

    # "PTH" - flake8-use-pathlib, https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "PTH100", # os-path-abspath
    "PTH101", # os-chmod
    "PTH102", # os-mkdir
    "PTH103", # os-makedirs
    "PTH104", # os-rename
    "PTH107", # os-remove
    "PTH108", # os-unlink
    "PTH110", # os-path-exists
    "PTH111", # os-path-expanduser
    "PTH112", # os-path-isdir
    "PTH113", # os-path-isfile
    "PTH116", # os-stat
    "PTH118", # os-path-join
    "PTH119", # os-path-basename
    "PTH120", # os-path-dirname
    "PTH122", # os-path-splitext
    "PTH123", # builtin-open
    "PTH202", # os-path-getsize

    # "TD" - flake8-todos, https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "TD001", # invalid-todo-tag
    "TD002", # missing-todo-author
    "TD003", # missing-todo-link
    "TD004", # missing-todo-colon
    "TD005", # missing-todo-description
    "TD006", # invalid-todo-capitalization

    # "W" - pycodestyle, see https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "W605" # invalid-escape-sequence
]

[tool.ruff.lint.pydocstyle]
# Use Numpy-style docstrings.
convention = "numpy"

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["doc", "src", "tests"]
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.codespell]
skip = '*.pyc,*.txt,*.gif,*.png,*.jpg,*.js,*.html,*.doctree,*.ttf,*.woff,*.woff2,*.eot,*.mp4,*.inv,*.pickle,*.ipynb,*.a3dcomp,flycheck*,./.git/*,./.hypothesis/*,*.yml,./doc/build/*,./doc/images/*,./dist/*,*~,.hypothesis*,./doc/source/examples/*,*cover,*.dat,*.mac,*.cdb,*.CDB,build,./factory/*,PKG-INFO,*.mypy_cache/*,./_unused/*,pyproject.toml'
ignore-words = "doc/styles/config/vocabularies/ANSYS/accept.txt"
ignore-words-list = "renabled, sie, mot"
enable-colors = true

[tool.coverage.run]
relative_files = true
source = ["pyedb"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "7.1"
xfail_strict = false
filterwarnings = [
    "ignore::DeprecationWarning",
]
markers = [
    "legacy: mark test as related to the legacy API.",
    "grpc: mark test as related to the gRPC API.",
    "unit: mark test as an unit test.",
    "integration: mark test as an integration test.",
    "system: mark test as a system test.",
    "slow: mark test as slow.",
    "no_licence: mark test that do not need a licence.",
]
testpaths = "tests"
#addopts = "-ra --cov=src/pyedb --cov-report html:.cov/html --cov-report xml:.cov/xml --cov-report term -vv"

[tool.numpydoc_validation]
checks = [
    "GL06",  # Found unknown section
    "GL07",  # Sections are in the wrong order.
    "GL08",  # The object does not have a docstring
    "GL09",  # Deprecation warning should precede extended summary
    "GL10",  # reST directives {directives} must be followed by two colons
    # Return
    "RT04", # Return value description should start with a capital letter"
    "RT05", # Return value description should finish with "."
    # Summary
    "SS01",  # No summary found
    "SS02",  # Summary does not start with a capital letter
    "SS03",  # Summary does not end with a period
    "SS04",  # Summary contains heading whitespaces
    "SS05",  # Summary must start with infinitive verb, not third person
    # Parameters
    "PR10",  # Parameter "{param_name}" requires a space before the colon
    # separating the parameter name and type",
]
