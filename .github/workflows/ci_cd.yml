name: GitHub CI
on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  PYEDB_USE_DOTNET: '1'
  PYEDB_CI_NO_DISPLAY: '1'
  MAIN_PYTHON_VERSION: '3.10'
  PACKAGE_NAME: 'pyedb'
  DOCUMENTATION_CNAME: 'edb.docs.pyansys.com'
  MEILISEARCH_API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
  MEILISEARCH_HOST_URL: ${{ vars.MEILISEARCH_HOST_URL }}
  MEILISEARCH_PUBLIC_API_KEY: ${{ secrets.MEILISEARCH_PUBLIC_API_KEY }}
  ON_CI: True


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  pr-title:
    if: github.event_name == 'pull_request'
    name: Check the title of the pull request
    runs-on: ubuntu-latest
    steps:
      - name: Check the title of the pull request
        uses: ansys/actions/check-pr-title@v8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          use-upper-case: true

  doc-style:
    name: Documentation style check
    runs-on: ubuntu-latest
    steps:
      - name: Check documentation style
        uses: ansys/actions/doc-style@v8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: Build and Smoke tests (${{ matrix.os }} | Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v5
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

      - name: Import python package
        run: |
          python -c "import pyedb; from pyedb import __version__"


# =================================================================================================
# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv    RUNNING ON SELF-HOSTED RUNNER    vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# =================================================================================================

  test-pyaedt-main-windows:
    name: Testing PyAEDT main branch (Windows)
    needs: [smoke-tests]
    runs-on: [ self-hosted, Windows, pyaedt ]
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create Python venv
        run: |
          python -m venv .venv
          . .venv\Scripts\Activate.ps1

      - name: Update pip
        run: |
          . .venv\Scripts\Activate.ps1
          python -m pip install -U pip

      - name: Clone PyAEDT on main branch
        uses: actions/checkout@v4
        with:
          repository: ansys/pyaedt
          path: "external/pyaedt"
          ref: "main"

      - name: Install PyAEDT main branch version with its test dependencies
        run: |
          . .venv\Scripts\Activate.ps1
          pip install --no-cache-dir external/pyaedt[tests]

      - name: Install PyEDB
        run: |
          . .venv\Scripts\Activate.ps1
          python -m pip install .

      - name: Install CI dependencies (e.g. vtk-osmesa)
        run: |
          .venv\Scripts\Activate.ps1
          # Uninstall conflicting dependencies
          pip uninstall --yes vtk
          pip install --extra-index-url https://wheels.vtk.org vtk-osmesa

      - name: Run PyAEDT tests
        uses: nick-fields/retry@v3
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 40
          command: |
            .venv\Scripts\Activate.ps1
            pytest -n auto --dist loadfile --durations=50 -v external/pyaedt/tests/system/general/

      - name: Run PyAEDT solvers tests
        uses: nick-fields/retry@v3
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 40
          command: |
            .venv\Scripts\Activate.ps1
            pytest --durations=50 -v external/pyaedt/tests/system/solvers/test_45_workflows.py
            pytest --durations=50 -v external/pyaedt/tests/system/solvers --deselect=tests/system/solvers/test_45_workflows.py

# =================================================================================================
# vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv    RUNNING ON SELF-HOSTED RUNNER    vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# =================================================================================================

  test-pyaedt-main-linux:
    name: Testing PyAEDT main branch (Linux)
    needs: [smoke-tests]
    runs-on: [ self-hosted, Linux, pyaedt ]
    env:
      ANSYSEM_ROOT251: '/opt/AnsysEM/v251/AnsysEM'
      ANS_NODEPCHECK: '1'
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@v4

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt-get install tk -y

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create Python venv
        run: |
          python -m venv .venv

      - name: Update pip
        run: |
          . .venv/bin/activate
          python -m pip install -U pip

      - name: Clone PyAEDT on main branch
        uses: actions/checkout@v4
        with:
          repository: ansys/pyaedt
          path: "external/pyaedt"
          ref: "main"

      - name: Install PyAEDT main branch version with its test dependencies
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          . .venv/bin/activate
          pip install --no-cache-dir external/pyaedt[tests]

      - name: Install PyEDB
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          . .venv/bin/activate
          python -m pip install .

      - name: Install CI dependencies (e.g. vtk-osmesa)
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          . .venv/bin/activate
          # Uninstall conflicting dependencies
          pip uninstall --yes vtk
          pip install --extra-index-url https://wheels.vtk.org vtk-osmesa

      - name: Run PyAEDT tests
        uses: nick-fields/retry@v3
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 50
          command: |
            export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
            . .venv/bin/activate
            pytest -n auto --dist loadfile --durations=50 -v external/pyaedt/tests/system/general/

      # FIXME: The need to run test_45_workflows first should be removed
      # This is due to a strange behavior when using numpy2 and AEDT, see #987 and #989 for more information
      - name: Run PyAEDT solvers tests
        uses: nick-fields/retry@v3
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 50
          command: |
            export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
            . .venv/bin/activate
            pytest --durations=50 -v external/pyaedt/tests/system/solvers/test_45_workflows.py
            pytest --durations=50 -v external/pyaedt/tests/system/solvers --deselect=tests/system/solvers/test_45_workflows.py

