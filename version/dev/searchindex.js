Search.setIndex({"alltitles": {"3D component in HFSS": [[745, "3D-component-in-HFSS"]], "AEDT integration": [[752, "aedt-integration"]], "API reference": [[741, "api-reference"]], "About PyEDB": [[766, "about-pyedb"]], "Add HFSS simulation setup": [[746, "Add-HFSS-simulation-setup"]], "Add a layer in a layout stackup": [[791, "add-a-layer-in-a-layout-stackup"]], "Add connector ground": [[744, "Add-connector-ground"]], "Add connector pin": [[744, "Add-connector-pin"]], "Add design parameters": [[749, "Add-design-parameters"]], "Add excitation port": [[744, "Add-excitation-port"]], "Add ground": [[744, "Add-ground"]], "Add stackup layers": [[744, "Add-stackup-layers"], [753, "Add-stackup-layers"]], "Adhere to code style": [[742, "adhere-to-code-style"], [767, "adhere-to-code-style"]], "Analyze": [[747, "Analyze"], [765, "Analyze"]], "Analyze in HFSS 3D Layout": [[765, "Analyze-in-HFSS-3D-Layout"]], "Assign S-parameter model to capactitors.": [[765, "Assign-S-parameter-model-to-capactitors."]], "Build a signal integrity project": [[774, "build-a-signal-integrity-project"]], "Build simulation projects": [[776, "build-simulation-projects"]], "Check component definition": [[747, "Check-component-definition"]], "Clean up temporary directory": [[753, "Clean-up-temporary-directory"]], "Clean up the temporary directory": [[745, "Clean-up-the-temporary-directory"], [749, "Clean-up-the-temporary-directory"], [755, "Clean-up-the-temporary-directory"]], "Clean up the temporary folder.": [[748, "Clean-up-the-temporary-folder."]], "Cleanup": [[765, "Cleanup"]], "Clip a design": [[775, "clip-a-design"]], "Clone the repository": [[742, "clone-the-repository"], [767, "clone-the-repository"]], "Close AEDT": [[744, "Close-AEDT"], [745, "Close-AEDT"]], "Close EDB": [[755, "Close-EDB"], [760, "Close-EDB"]], "Components": [[0, "components"], [63, "components"]], "Configure EDB": [[751, "Configure-EDB"]], "Configure the simulation setup": [[747, "Configure-the-simulation-setup"]], "Connect to EDB from a Python IDE": [[770, "connect-to-edb-from-a-python-ide"]], "Contribute": [[742, "contribute"], [767, "contribute"]], "Control file": [[760, "Control-file"]], "Create Stackup": [[748, "Create-Stackup"]], "Create a circuit port": [[784, "create-a-circuit-port"]], "Create a coaxial port": [[785, "create-a-coaxial-port"]], "Create a configuration file": [[765, "Create-a-configuration-file"]], "Create a cutout and plot it.": [[755, "Create-a-cutout-and-plot-it."]], "Create a ground via padstack and place ground stitching vias": [[759, "Create-a-ground-via-padstack-and-place-ground-stitching-vias"]], "Create a padstack instance": [[796, "create-a-padstack-instance"]], "Create a parameterized PCB": [[748, "Create-a-parameterized-PCB"]], "Create a resistor boundary on pins": [[777, "create-a-resistor-boundary-on-pins"]], "Create a trace to plane clearance": [[759, "Create-a-trace-to-plane-clearance"]], "Create an RLC boundary on pins": [[778, "create-an-rlc-boundary-on-pins"]], "Create an RLC component between pins": [[779, "create-an-rlc-component-between-pins"]], "Create an edge port": [[787, "create-an-edge-port"]], "Create an instance of a pyedb.Edb object.": [[750, "Create-an-instance-of-a-pyedb.Edb-object."]], "Create an instance of the Electronics Database using the pyedb.Edb class.": [[757, "Create-an-instance-of-the-Electronics-Database-using-the-pyedb.Edb-class."]], "Create current and voltage sources": [[786, "create-current-and-voltage-sources"]], "Create cutout": [[761, "Create-cutout"]], "Create data classes": [[745, "Create-data-classes"]], "Create linear array": [[744, "Create-linear-array"]], "Create port between a pin and layer": [[788, "create-port-between-a-pin-and-layer"]], "Create ports": [[751, "Create-ports"]], "Create s symmetric stackup": [[759, "Create-s-symmetric-stackup"]], "Create setup": [[759, "Create-setup"]], "Create setup and sweeps": [[744, "Create-setup-and-sweeps"]], "Create signal net": [[748, "Create-signal-net"]], "Create signal net and ground planes": [[753, "Create-signal-net-and-ground-planes"]], "Create sources": [[789, "create-sources"]], "Create stackup": [[758, "Create-stackup"]], "Create the EDB": [[758, "Create-the-EDB"]], "Create the connector component": [[749, "Create-the-connector-component"]], "Create vias with parametric positions": [[753, "Create-vias-with-parametric-positions"]], "Create wave ports": [[759, "Create-wave-ports"]], "Creating coaxial port on component U1 and all ddr4_dqs nets": [[756, "Creating-coaxial-port-on-component-U1-and-all-ddr4_dqs-nets"]], "Cutout": [[751, "Cutout"]], "Define Cutout": [[765, "Define-Cutout"]], "Define SIwave SYZ analysis setup": [[765, "Define-SIwave-SYZ-analysis-setup"]], "Define an HFSS extent": [[800, "define-an-hfss-extent"]], "Define boundary settings": [[760, "Define-boundary-settings"]], "Define design variables": [[803, "define-design-variables"]], "Define padstacks": [[758, "Define-padstacks"]], "Define parameters": [[758, "Define-parameters"], [759, "Define-parameters"]], "Define pins": [[749, "Define-pins"]], "Define ports": [[765, "Define-ports"]], "Display the cutout": [[747, "Display-the-cutout"]], "Download ANSYS EDB": [[756, "Download-ANSYS-EDB"]], "Download file": [[751, "Download-file"]], "Download the AEDB file and copy it in the temporary folder.": [[755, "Download-the-AEDB-file-and-copy-it-in-the-temporary-folder."]], "Download the EDB and copy it into the temporary folder.": [[757, "Download-the-EDB-and-copy-it-into-the-temporary-folder."]], "Draw a trace": [[759, "Draw-a-trace"]], "Draw parametrized traces": [[746, "Draw-parametrized-traces"]], "Draw planes": [[759, "Draw-planes"]], "EDB manager": [[1, "edb-manager"]], "EDB modules": [[1, "edb-modules"]], "EDB: 5G linear array antenna": [[744, "EDB:-5G-linear-array-antenna"]], "EDB: Edit Control File and import gds": [[760, "EDB:-Edit-Control-File-and-import-gds"]], "EDB: IPC2581 export": [[755, "EDB:-IPC2581-export"]], "EDB: Layout Components": [[745, "EDB:-Layout-Components"]], "EDB: Layout Creation and Setup": [[749, "EDB:-Layout-Creation-and-Setup"]], "EDB: Network Analysis in SIwave": [[751, "EDB:-Network-Analysis-in-SIwave"]], "EDB: Pin to Pin project": [[747, "EDB:-Pin-to-Pin-project"]], "EDB: Rename nets and ports": [[756, "EDB:-Rename-nets-and-ports"]], "EDB: SIwave DC-IR Analysis": [[754, "EDB:-SIwave-DC-IR-Analysis"]], "EDB: fully parametrized CPWG design": [[759, "EDB:-fully-parametrized-CPWG-design"]], "EDB: fully parametrized design": [[746, "EDB:-fully-parametrized-design"]], "EDB: geometry creation": [[748, "EDB:-geometry-creation"], [753, "EDB:-geometry-creation"]], "EDB: parameterized design": [[750, "EDB:-parameterized-design"]], "EDB: parametric via creation": [[758, "EDB:-parametric-via-creation"]], "EDB: plot nets with Matplotlib": [[757, "EDB:-plot-nets-with-Matplotlib"]], "EDB: post-layout parameterization": [[761, "EDB:-post-layout-parameterization"]], "EDBArcs": [[334, "edbarcs"]], "EDBComponent": [[11, "edbcomponent"]], "EDBDifferentialPairData": [[126, "edbdifferentialpairdata"]], "EDBExtendedNetData": [[139, "edbextendednetdata"]], "EDBNetClassData": [[153, "edbnetclassdata"]], "EDBNetsData": [[161, "edbnetsdata"]], "EDBPadProperties": [[177, "edbpadproperties"]], "EDBPadstack": [[189, "edbpadstack"]], "EDBPadstackInstance": [[212, "edbpadstackinstance"]], "EDBPrimitives": [[347, "edbprimitives"]], "EdbHfss": [[513, "edbhfss"]], "EdbLayout": [[544, "edblayout"]], "EdbNets": [[598, "edbnets"]], "EdbPadstacks": [[619, "edbpadstacks"]], "EdbSiwave": [[651, "edbsiwave"]], "EdbValue": [[111, "edbvalue"]], "Edit a layer stackup in a layout stackup": [[793, "edit-a-layer-stackup-in-a-layout-stackup"]], "Edit a padstack definition": [[798, "edit-a-padstack-definition"]], "Edit airbox extents": [[759, "Edit-airbox-extents"]], "Error installing PyEDB using pip": [[771, "error-installing-pyedb-using-pip"]], "Error installing Python or Conda": [[771, "error-installing-python-or-conda"]], "Examples": [[743, "examples"]], "Explicit PyEDB declaration and error management": [[770, "explicit-pyedb-declaration-and-error-management"]], "Export results": [[754, "Export-results"]], "Export the EDB to an IPC2581 file.": [[755, "Export-the-EDB-to-an-IPC2581-file."]], "Expose the component parameters": [[745, "Expose-the-component-parameters"]], "Fetch Example Data": [[760, "Fetch-Example-Data"]], "GapPort": [[260, "gapport"]], "Generate extended nets": [[751, "Generate-extended-nets"]], "Generate geometry plot": [[753, "Generate-geometry-plot"]], "Generate stackup plot": [[753, "Generate-stackup-plot"]], "Get all components and then pins from components connected to a net": [[781, "get-all-components-and-then-pins-from-components-connected-to-a-net"]], "Get layout size": [[782, "get-layout-size"]], "Get layout statistics": [[781, "get-layout-statistics"]], "Get nets and plot them in Matplotlib": [[781, "get-nets-and-plot-them-in-matplotlib"]], "Get statistics": [[781, "get-statistics"]], "Getting started": [[768, "getting-started"]], "Hard-coded values": [[742, "hard-coded-values"], [767, "hard-coded-values"]], "ICs": [[64, "ics"]], "IOs": [[65, "ios"]], "Identify connected nets": [[754, "Identify-connected-nets"]], "Identify nets and components": [[754, "Identify-nets-and-components"]], "Identify pin positions": [[754, "Identify-pin-positions"]], "Implement the setup": [[747, "Implement-the-setup"]], "Import BOM": [[747, "Import-BOM"]], "Import EDB layout object": [[753, "Import-EDB-layout-object"]], "Import Stackup": [[763, "Import-Stackup"]], "Import definitions": [[747, "Import-definitions"]], "Import dependencies.": [[750, "Import-dependencies."]], "Import the EDB as a 3D component": [[745, "Import-the-EDB-as-a-3D-component"]], "Import the required packages": [[763, "Import-the-required-packages"]], "Indices and tables": [[773, "indices-and-tables"]], "Install from a Python file": [[769, "install-from-a-python-file"]], "Install offline from a wheelhouse": [[769, "install-offline-from-a-wheelhouse"]], "Install on CPython from PyPI": [[769, "install-on-cpython-from-pypi"]], "Installation": [[769, "installation"]], "Installation troubleshooting": [[771, "installation-troubleshooting"]], "Instances and definitions": [[0, "instances-and-definitions"], [4, "instances-and-definitions"]], "Issues and discussions": [[771, "issues-and-discussions"]], "Launch Ansys Electronics Database (EDB)": [[754, "Launch-Ansys-Electronics-Database-(EDB)"]], "Launch EDB": [[745, "Launch-EDB"], [747, "Launch-EDB"], [755, "Launch-EDB"], [759, "Launch-EDB"]], "Launch EDB.": [[746, "Launch-EDB."]], "Launch HFSS 3D Layout and open EDB": [[744, "Launch-HFSS-3D-Layout-and-open-EDB"]], "Launch Hfss3dLayout": [[751, "Launch-Hfss3dLayout"]], "LayerEdbClass": [[116, "layeredbclass"]], "LayoutValidation": [[574, "layoutvalidation"]], "Legacy interface": [[772, "legacy-interface"]], "Linux support": [[769, "linux-support"]], "Load a layout": [[781, "load-a-layout"], [795, "load-a-layout"]], "Load a layout file": [[794, "load-a-layout-file"]], "Load an AEDB file into memory": [[770, "load-an-aedb-file-into-memory"]], "Load configuration into EDB": [[765, "Load-configuration-into-EDB"]], "Load edb into HFSS 3D Layout.": [[765, "Load-edb-into-HFSS-3D-Layout."]], "Load example layout.": [[763, "Load-example-layout."]], "Load stackup from json configuration file": [[763, "Load-stackup-from-json-configuration-file"]], "Log errors": [[742, "log-errors"], [767, "log-errors"]], "Materials": [[580, "materials"]], "Maximum line length": [[742, "maximum-line-length"], [767, "maximum-line-length"]], "Modeler & primitives": [[6, "modeler-primitives"]], "Modify stackup": [[763, "Modify-stackup"]], "Net properties": [[3, "net-properties"]], "Nets": [[3, "nets"]], "Open EDB": [[760, "Open-EDB"]], "Open EDB in AEDT": [[759, "Open-EDB-in-AEDT"]], "Open Electronics Desktop": [[747, "Open-Electronics-Desktop"]], "Open project in AEDT": [[750, "Open-project-in-AEDT"]], "Others": [[66, "others"]], "Parameterize": [[750, "Parameterize"]], "Parametrize the width of a trace.": [[755, "Parametrize-the-width-of-a-trace."]], "Patch linear array": [[744, "Patch-linear-array"]], "Perform required imports": [[744, "Perform-required-imports"], [745, "Perform-required-imports"], [747, "Perform-required-imports"], [751, "Perform-required-imports"], [756, "Perform-required-imports"], [757, "Perform-required-imports"], [759, "Perform-required-imports"]], "Place signal vias": [[748, "Place-signal-vias"]], "Plot E Field on nets and layers": [[745, "Plot-E-Field-on-nets-and-layers"]], "Plot far fields in AEDT": [[745, "Plot-far-fields-in-AEDT"], [745, "id1"]], "Plot far fields outside AEDT": [[745, "Plot-far-fields-outside-AEDT"]], "Plot geometry": [[744, "Plot-geometry"], [744, "id1"]], "Plot impedance": [[765, "Plot-impedance"]], "Plot layout": [[759, "Plot-layout"]], "Plot results": [[747, "Plot-results"]], "Plot results outside AEDT": [[744, "Plot-results-outside-AEDT"], [745, "Plot-results-outside-AEDT"]], "Plot stackup": [[760, "Plot-stackup"]], "Ports": [[5, "ports"]], "Post issues": [[742, "post-issues"], [767, "post-issues"]], "Power Tree": [[754, "Power-Tree"]], "Preparation": [[765, "Preparation"]], "Prepare the layout for the simulation": [[750, "Prepare-the-layout-for-the-simulation"]], "Primitives properties": [[6, "primitives-properties"]], "Provide additional stackup settings": [[760, "Provide-additional-stackup-settings"]], "PyEDB documentation 0.19.dev0": [[773, "pyedb-documentation-version"]], "Quick code": [[770, "quick-code"]], "Radiation Boundary Assignment": [[745, "Radiation-Boundary-Assignment"]], "Release AEDT": [[759, "Release-AEDT"]], "Release the application from the Python kernel": [[749, "Release-the-application-from-the-Python-kernel"], [750, "Release-the-application-from-the-Python-kernel"]], "Remove unused components": [[754, "Remove-unused-components"]], "Renaming all ports": [[756, "Renaming-all-ports"]], "Renaming all signal nets": [[756, "Renaming-all-signal-nets"]], "Requirements": [[769, "requirements"]], "Review original stackup definition": [[763, "Review-original-stackup-definition"]], "Run PyEDB with gRPC": [[771, "run-pyedb-with-grpc"]], "Run layout queries": [[783, "run-layout-queries"]], "Run simulation": [[748, "Run-simulation"]], "Save AEDT": [[759, "Save-AEDT"]], "Save and close AEDT": [[747, "Save-and-close-AEDT"]], "Save and close EDB": [[747, "Save-and-close-EDB"], [753, "Save-and-close-EDB"], [759, "Save-and-close-EDB"]], "Save and close Edb instance prior to opening it in Electronics Desktop.": [[744, "Save-and-close-Edb-instance-prior-to-opening-it-in-Electronics-Desktop."]], "Save and close the project.": [[748, "Save-and-close-the-project."]], "Save the configuration as a JSON file": [[765, "Save-the-configuration-as-a-JSON-file"]], "Saving and closing EDB": [[756, "Saving-and-closing-EDB"]], "See the finished project": [[748, "See-the-finished-project"]], "Set non-graphical mode": [[744, "Set-non-graphical-mode"], [745, "Set-non-graphical-mode"], [746, "Set-non-graphical-mode"], [759, "Set-non-graphical-mode"]], "Set up EDB for Power Integrity Analysis": [[765, "Set-up-EDB-for-Power-Integrity-Analysis"]], "Set up HFSS simulation": [[748, "Set-up-HFSS-simulation"]], "Set up a SIwave analysis": [[799, "set-up-a-siwave-analysis"]], "Set up an HFSS simulation": [[801, "set-up-an-hfss-simulation"]], "Set up analysis": [[745, "Set-up-analysis"]], "Set up for SIwave DCIR analysis": [[754, "Set-up-for-SIwave-DCIR-analysis"]], "Set up simulation": [[760, "Set-up-simulation"]], "Set up simulations": [[802, "set-up-simulations"]], "Shut Down Electronics Desktop": [[765, "Shut-Down-Electronics-Desktop"]], "Simulation configuration": [[8, "simulation-configuration"]], "SimulationConfiguration": [[379, "simulationconfiguration"]], "SimulationConfigurationAc": [[394, "simulationconfigurationac"]], "SimulationConfigurationBatch": [[438, "simulationconfigurationbatch"]], "SimulationConfigurationDc": [[474, "simulationconfigurationdc"]], "Siwave": [[719, "siwave"]], "Siwave manager": [[7, "siwave-manager"]], "Solve": [[754, "Solve"]], "Solve setup and create report": [[744, "Solve-setup-and-create-report"]], "Solve the active design": [[759, "Solve-the-active-design"]], "Sources and excitations": [[9, "sources-and-excitations"]], "Stackup": [[683, "stackup"]], "Stackup & layers": [[2, "stackup-layers"]], "Standalone": [[762, "standalone"]], "Troubleshooting": [[771, "troubleshooting"]], "Update PyEDB to the latest version": [[769, "update-pyedb-to-the-latest-version"]], "Use configuration": [[764, "use-configuration"]], "User guide": [[790, "user-guide"]], "Variable": [[505, "variable"]], "Variables": [[770, "variables"]], "Verify a Component": [[747, "Verify-a-Component"]], "Versions and interfaces": [[772, "versions-and-interfaces"]], "View Layout in SIwave": [[754, "View-Layout-in-SIwave"]], "View PCB trace model": [[749, "View-PCB-trace-model"]], "View PyEDB documentation": [[742, "view-pyedb-documentation"], [767, "view-pyedb-documentation"]], "View results": [[747, "View-results"]], "Visualize the return loss.": [[748, "Visualize-the-return-loss."]], "WavePort": [[296, "waveport"]], "What is EDB?": [[766, "what-is-edb"]], "Why use PyEDB?": [[766, "why-use-pyedb"]], "Work with a layer stackup": [[792, "work-with-a-layer-stackup"]], "Work with a padstack": [[797, "work-with-a-padstack"]], "Working with a component": [[780, "working-with-a-component"]], "Write XML file": [[760, "Write-XML-file"]], "ac_settings": [[380, "ac-settings"]], "adaptive_high_freq": [[395, "adaptive-high-freq"]], "adaptive_low_freq": [[396, "adaptive-low-freq"]], "adaptive_type": [[397, "adaptive-type"]], "add_conductor_material": [[581, "add-conductor-material"]], "add_current_source": [[381, "add-current-source"]], "add_dc_ground_source_term": [[382, "add-dc-ground-source-term"]], "add_debye_material": [[582, "add-debye-material"]], "add_dielectric_material": [[583, "add-dielectric-material"]], "add_djordjevicsarkar_dielectric": [[584, "add-djordjevicsarkar-dielectric"]], "add_document_layer": [[684, "add-document-layer"]], "add_frequency_sweep": [[439, "add-frequency-sweep"]], "add_layer": [[685, "add-layer"]], "add_layer_above": [[686, "add-layer-above"]], "add_layer_below": [[687, "add-layer-below"]], "add_layer_bottom": [[688, "add-layer-bottom"]], "add_layer_top": [[689, "add-layer-top"]], "add_material": [[585, "add-material"]], "add_multipole_debye_material": [[586, "add-multipole-debye-material"]], "add_net": [[127, "add-net"], [140, "add-net"], [154, "add-net"]], "add_outline_layer": [[690, "add-outline-layer"]], "add_port_on_rlc_component": [[67, "add-port-on-rlc-component"]], "add_rlc": [[383, "add-rlc"]], "add_rlc_boundary": [[68, "add-rlc-boundary"]], "add_siwave_dc_analysis": [[652, "add-siwave-dc-analysis"]], "add_siwave_syz_analysis": [[653, "add-siwave-syz-analysis"]], "add_source": [[440, "add-source"]], "add_void": [[545, "add-void"]], "add_voltage_source": [[384, "add-voltage-source"]], "adjust_solder_dielectrics": [[691, "adjust-solder-dielectrics"]], "aedt_name": [[213, "aedt-name"]], "airbox_horizontal_extent": [[441, "airbox-horizontal-extent"]], "airbox_negative_vertical_extent": [[442, "airbox-negative-vertical-extent"]], "airbox_positive_vertical_extent": [[443, "airbox-positive-vertical-extent"]], "all_layers": [[692, "all-layers"]], "api_class": [[128, "api-class"], [141, "api-class"], [162, "api-class"]], "api_create": [[129, "api-create"], [142, "api-create"], [155, "api-create"]], "api_negative_net": [[130, "api-negative-net"]], "api_nets": [[131, "api-nets"], [143, "api-nets"], [156, "api-nets"]], "api_object": [[163, "api-object"]], "api_positive_net": [[132, "api-positive-net"]], "arc_angle": [[398, "arc-angle"]], "arc_to_chord_error": [[399, "arc-to-chord-error"]], "arcs": [[348, "arcs"]], "area": [[349, "area"]], "assign_rlc_model": [[12, "assign-rlc-model"]], "assign_s_param_model": [[13, "assign-s-param-model"]], "assign_spice_model": [[14, "assign-spice-model"]], "backdrill_bottom": [[214, "backdrill-bottom"]], "backdrill_top": [[215, "backdrill-top"]], "basis_order": [[400, "basis-order"]], "batch_solve_settings": [[385, "batch-solve-settings"]], "bbox": [[350, "bbox"]], "boundary_type": [[261, "boundary-type"], [297, "boundary-type"]], "bounding_box": [[15, "bounding-box"], [216, "bounding-box"], [262, "bounding-box"], [298, "bounding-box"], [351, "bounding-box"]], "build_simulation_project": [[386, "build-simulation-project"]], "cap_value": [[16, "cap-value"]], "capacitors": [[69, "capacitors"]], "center": [[17, "center"], [335, "center"], [352, "center"]], "check_and_fix_via_plating": [[620, "check-and-fix-via-plating"]], "circles": [[546, "circles"]], "classify_nets": [[599, "classify-nets"]], "close_project": [[720, "close-project"]], "coax_solder_ball_diameter": [[444, "coax-solder-ball-diameter"]], "color": [[117, "color"]], "component": [[18, "component"], [217, "component"], [263, "component"], [299, "component"], [353, "component"]], "component_def": [[19, "component-def"]], "component_instance": [[20, "component-instance"]], "component_pin": [[218, "component-pin"]], "component_property": [[21, "component-property"]], "components": [[144, "components"], [164, "components"], [445, "components"]], "components_by_nets": [[600, "components-by-nets"]], "components_by_partname": [[70, "components-by-partname"]], "configure_hfss_analysis_setup": [[514, "configure-hfss-analysis-setup"]], "configure_hfss_extents": [[515, "configure-hfss-extents"]], "configure_siw_analysis_setup": [[654, "configure-siw-analysis-setup"]], "convert_to_3d_microvias": [[190, "convert-to-3d-microvias"]], "convert_to_polygon": [[354, "convert-to-polygon"]], "coplanar_instances": [[446, "coplanar-instances"]], "couple_ports": [[264, "couple-ports"], [300, "couple-ports"]], "create": [[71, "create"], [165, "create"], [621, "create"]], "create_bundle_wave_port": [[516, "create-bundle-wave-port"]], "create_circle": [[547, "create-circle"]], "create_circuit_port_on_net": [[517, "create-circuit-port-on-net"], [655, "create-circuit-port-on-net"]], "create_circuit_port_on_pin": [[518, "create-circuit-port-on-pin"], [656, "create-circuit-port-on-pin"]], "create_circuit_port_on_pin_group": [[657, "create-circuit-port-on-pin-group"]], "create_circular_padstack": [[622, "create-circular-padstack"]], "create_clearance_on_component": [[22, "create-clearance-on-component"]], "create_coax_port": [[219, "create-coax-port"], [623, "create-coax-port"]], "create_coax_port_on_component": [[519, "create-coax-port-on-component"]], "create_current_source_on_net": [[520, "create-current-source-on-net"], [658, "create-current-source-on-net"]], "create_current_source_on_pin": [[521, "create-current-source-on-pin"], [659, "create-current-source-on-pin"]], "create_current_source_on_pin_group": [[660, "create-current-source-on-pin-group"]], "create_dc_terminal": [[661, "create-dc-terminal"]], "create_differential_wave_port": [[522, "create-differential-wave-port"]], "create_edge_port_horizontal": [[523, "create-edge-port-horizontal"]], "create_edge_port_on_polygon": [[524, "create-edge-port-on-polygon"]], "create_edge_port_vertical": [[525, "create-edge-port-vertical"]], "create_exec_file": [[662, "create-exec-file"]], "create_hfss_ports_on_padstack": [[526, "create-hfss-ports-on-padstack"]], "create_impedance_crosstalk_scan": [[663, "create-impedance-crosstalk-scan"]], "create_lumped_port_on_net": [[527, "create-lumped-port-on-net"]], "create_package_def": [[23, "create-package-def"]], "create_pin_group": [[664, "create-pin-group"]], "create_pin_group_on_net": [[665, "create-pin-group-on-net"]], "create_pin_group_terminal": [[666, "create-pin-group-terminal"]], "create_pingroup_from_pins": [[72, "create-pingroup-from-pins"]], "create_polygon": [[548, "create-polygon"]], "create_port": [[220, "create-port"]], "create_port_between_pin_and_layer": [[667, "create-port-between-pin-and-layer"]], "create_port_on_component": [[73, "create-port-on-component"]], "create_port_on_pins": [[74, "create-port-on-pins"]], "create_rectangle": [[549, "create-rectangle"]], "create_rectangle_in_pad": [[221, "create-rectangle-in-pad"]], "create_resistor_on_pin": [[528, "create-resistor-on-pin"], [668, "create-resistor-on-pin"]], "create_rlc_boundary_on_pins": [[529, "create-rlc-boundary-on-pins"]], "create_rlc_component": [[75, "create-rlc-component"], [669, "create-rlc-component"]], "create_source_on_component": [[76, "create-source-on-component"]], "create_symmetric_stackup": [[693, "create-symmetric-stackup"]], "create_terminal": [[222, "create-terminal"]], "create_trace": [[550, "create-trace"]], "create_vertical_circuit_port_on_clipped_traces": [[530, "create-vertical-circuit-port-on-clipped-traces"]], "create_voltage_probe_on_pin_group": [[670, "create-voltage-probe-on-pin-group"]], "create_voltage_source_on_net": [[531, "create-voltage-source-on-net"], [671, "create-voltage-source-on-net"]], "create_voltage_source_on_pin": [[532, "create-voltage-source-on-pin"], [672, "create-voltage-source-on-pin"]], "create_voltage_source_on_pin_group": [[673, "create-voltage-source-on-pin-group"]], "create_vrm_module": [[674, "create-vrm-module"]], "create_wave_port": [[533, "create-wave-port"]], "current_version": [[721, "current-version"]], "cutout_subdesign_expansion": [[447, "cutout-subdesign-expansion"]], "cutout_subdesign_round_corner": [[448, "cutout-subdesign-round-corner"]], "cutout_subdesign_type": [[449, "cutout-subdesign-type"]], "db": [[551, "db"], [601, "db"], [624, "db"]], "dc_compute_inductance": [[475, "dc-compute-inductance"]], "dc_contact_radius": [[476, "dc-contact-radius"]], "dc_error_energy": [[477, "dc-error-energy"]], "dc_export_thermal_data": [[478, "dc-export-thermal-data"]], "dc_full_report_path": [[479, "dc-full-report-path"]], "dc_icepak_temp_file": [[480, "dc-icepak-temp-file"]], "dc_import_thermal_data": [[481, "dc-import-thermal-data"]], "dc_max_init_mesh_edge_length": [[482, "dc-max-init-mesh-edge-length"]], "dc_max_num_pass": [[483, "dc-max-num-pass"]], "dc_mesh_bondwires": [[484, "dc-mesh-bondwires"]], "dc_mesh_vias": [[485, "dc-mesh-vias"]], "dc_min_num_pass": [[486, "dc-min-num-pass"]], "dc_min_plane_area_to_mesh": [[487, "dc-min-plane-area-to-mesh"]], "dc_min_void_area_to_mesh": [[488, "dc-min-void-area-to-mesh"]], "dc_num_bondwire_sides": [[489, "dc-num-bondwire-sides"]], "dc_num_via_sides": [[490, "dc-num-via-sides"]], "dc_per_pin_res_path": [[491, "dc-per-pin-res-path"]], "dc_per_pin_use_pin_format": [[492, "dc-per-pin-use-pin-format"]], "dc_percent_local_refinement": [[493, "dc-percent-local-refinement"]], "dc_perform_adaptive_refinement": [[494, "dc-perform-adaptive-refinement"]], "dc_plot_jv": [[495, "dc-plot-jv"]], "dc_refine_bondwires": [[496, "dc-refine-bondwires"]], "dc_refine_vias": [[497, "dc-refine-vias"]], "dc_report_config_file": [[498, "dc-report-config-file"]], "dc_report_show_Active_devices": [[499, "dc-report-show-active-devices"]], "dc_settings": [[387, "dc-settings"]], "dc_shorts": [[575, "dc-shorts"]], "dc_slide_position": [[500, "dc-slide-position"]], "dc_source_terms_to_ground": [[501, "dc-source-terms-to-ground"]], "dc_use_dc_custom_settings": [[502, "dc-use-dc-custom-settings"]], "dc_use_loop_res_for_per_pin": [[503, "dc-use-loop-res-for-per-pin"]], "dc_via_report_path": [[504, "dc-via-report-path"]], "dcir_equipotential_region": [[223, "dcir-equipotential-region"]], "deactivate_rlc_component": [[77, "deactivate-rlc-component"]], "decade_count": [[401, "decade-count"]], "deembed": [[265, "deembed"], [301, "deembed"]], "deembed_length": [[302, "deembed-length"]], "defeature_abs_length": [[402, "defeature-abs-length"]], "defeature_layout": [[403, "defeature-layout"]], "defeature_polygon": [[552, "defeature-polygon"]], "definitions": [[78, "definitions"], [625, "definitions"]], "delete": [[24, "delete"], [79, "delete"], [133, "delete"], [145, "delete"], [157, "delete"], [166, "delete"], [224, "delete"], [266, "delete"], [303, "delete"], [355, "delete"], [506, "delete"], [602, "delete"]], "delete_material": [[587, "delete-material"]], "delete_padstack_instances": [[626, "delete-padstack-instances"]], "delete_primitives": [[553, "delete-primitives"]], "delete_single_pin_rlc": [[80, "delete-single-pin-rlc"]], "description": [[507, "description"]], "dielectric_extent": [[450, "dielectric-extent"]], "dielectric_layers": [[694, "dielectric-layers"]], "disable_rlc_component": [[81, "disable-rlc-component"]], "disjoint_nets": [[576, "disjoint-nets"]], "do_cutout_subdesign": [[451, "do-cutout-subdesign"]], "do_lambda_refinement": [[404, "do-lambda-refinement"]], "do_pingroup": [[452, "do-pingroup"]], "do_renormalize": [[267, "do-renormalize"], [304, "do-renormalize"]], "duplicate": [[588, "duplicate"], [627, "duplicate"]], "eligible_power_nets": [[603, "eligible-power-nets"]], "enabled": [[25, "enabled"]], "end": [[336, "end"]], "enforce_causality": [[405, "enforce-causality"]], "enforce_passivity": [[406, "enforce-passivity"]], "etching_factor_instances": [[453, "etching-factor-instances"]], "excitations": [[534, "excitations"], [675, "excitations"]], "export": [[695, "export"]], "export_bom": [[82, "export-bom"]], "export_dc_simulation_report": [[722, "export-dc-simulation-report"]], "export_definition": [[83, "export-definition"]], "export_element_data": [[723, "export-element-data"]], "export_icepak_project": [[724, "export-icepak-project"]], "export_json": [[388, "export-json"]], "export_siwave_report": [[725, "export-siwave-report"]], "extended_net": [[167, "extended-net"]], "filename": [[389, "filename"]], "fill_material": [[118, "fill-material"]], "find_by_name": [[134, "find-by-name"], [146, "find-by-name"], [168, "find-by-name"]], "find_by_reference_designator": [[84, "find-by-reference-designator"]], "find_dc_short": [[169, "find-dc-short"]], "find_instance_by_id": [[628, "find-instance-by-id"]], "find_or_create_net": [[604, "find-or-create-net"]], "fix_circle_void_for_clipping": [[554, "fix-circle-void-for-clipping"]], "fix_self_intersections": [[577, "fix-self-intersections"]], "flip_design": [[696, "flip-design"]], "gRPC compatibility:": [[771, "id1"]], "gRPC interface": [[772, "grpc-interface"]], "generate_excitations": [[454, "generate-excitations"]], "generate_extended_nets": [[605, "generate-extended-nets"]], "generate_solder_balls": [[455, "generate-solder-balls"]], "geometry_type": [[178, "geometry-type"]], "get_aedt_pin_name": [[85, "get-aedt-pin-name"]], "get_closest_arc_midpoint": [[356, "get-closest-arc-midpoint"]], "get_closest_point": [[357, "get-closest-point"]], "get_component_by_name": [[86, "get-component-by-name"]], "get_component_net_connection_info": [[87, "get-component-net-connection-info"]], "get_component_placement_vector": [[88, "get-component-placement-vector"]], "get_components_from_nets": [[89, "get-components-from-nets"]], "get_connected_object_id_set": [[225, "get-connected-object-id-set"], [358, "get-connected-object-id-set"]], "get_connected_objects": [[226, "get-connected-objects"], [359, "get-connected-objects"]], "get_dcconnected_net_list": [[606, "get-dcconnected-net-list"]], "get_edge_terminal_reference_primitive": [[268, "get-edge-terminal-reference-primitive"], [305, "get-edge-terminal-reference-primitive"]], "get_instances": [[629, "get-instances"]], "get_layout_bounding_box": [[535, "get-layout-bounding-box"]], "get_layout_statistics": [[555, "get-layout-statistics"]], "get_layout_thickness": [[697, "get-layout-thickness"]], "get_net_by_name": [[607, "get-net-by-name"]], "get_nets_from_pin_list": [[90, "get-nets-from-pin-list"]], "get_pad_edge_terminal_reference_pin": [[269, "get-pad-edge-terminal-reference-pin"], [306, "get-pad-edge-terminal-reference-pin"]], "get_pad_parameters": [[630, "get-pad-parameters"]], "get_padstack_instance_by_net_name": [[631, "get-padstack-instance-by-net-name"]], "get_padstack_instances_intersecting_bounding_box": [[632, "get-padstack-instances-intersecting-bounding-box"]], "get_padstack_instances_rtree_index": [[633, "get-padstack-instances-rtree-index"]], "get_padstack_terminal_reference_pin": [[270, "get-padstack-terminal-reference-pin"], [307, "get-padstack-terminal-reference-pin"]], "get_pin_from_component": [[91, "get-pin-from-component"]], "get_pin_group_terminal_reference_pin": [[271, "get-pin-group-terminal-reference-pin"], [308, "get-pin-group-terminal-reference-pin"]], "get_pin_position": [[92, "get-pin-position"]], "get_pinlist_from_component_and_net": [[634, "get-pinlist-from-component-and-net"]], "get_pins": [[93, "get-pins"]], "get_pins_name_from_net": [[94, "get-pins-name-from-net"]], "get_plot_data": [[608, "get-plot-data"]], "get_point_terminal_reference_primitive": [[272, "get-point-terminal-reference-primitive"], [309, "get-point-terminal-reference-primitive"]], "get_polygon_bounding_box": [[556, "get-polygon-bounding-box"]], "get_polygon_points": [[557, "get-polygon-points"]], "get_polygons_by_layer": [[558, "get-polygons-by-layer"]], "get_ports_number": [[536, "get-ports-number"]], "get_powertree": [[609, "get-powertree"]], "get_primitive": [[559, "get-primitive"]], "get_primitive_by_layer_and_point": [[560, "get-primitive-by-layer-and-point"]], "get_primitives": [[561, "get-primitives"]], "get_rats": [[95, "get-rats"]], "get_reference_pins": [[227, "get-reference-pins"], [635, "get-reference-pins"]], "get_smallest_trace_width": [[170, "get-smallest-trace-width"]], "get_solder_ball_height": [[96, "get-solder-ball-height"]], "get_terminal": [[228, "get-terminal"]], "get_through_resistor_list": [[97, "get-through-resistor-list"]], "get_trace_width_for_traces_with_ports": [[537, "get-trace-width-for-traces-with-ports"]], "get_via_instance_from_net": [[636, "get-via-instance-from-net"]], "height": [[337, "height"]], "hfss_extent_info": [[538, "hfss-extent-info"]], "hfss_type": [[273, "hfss-type"], [310, "hfss-type"]], "hole_diameter": [[191, "hole-diameter"]], "hole_diameter_string": [[192, "hole-diameter-string"]], "hole_finished_size": [[193, "hole-finished-size"]], "hole_offset_x": [[194, "hole-offset-x"]], "hole_offset_y": [[195, "hole-offset-y"]], "hole_parameters": [[196, "hole-parameters"]], "hole_params": [[197, "hole-params"]], "hole_plating_ratio": [[198, "hole-plating-ratio"]], "hole_plating_thickness": [[199, "hole-plating-thickness"]], "hole_properties": [[200, "hole-properties"]], "hole_range": [[201, "hole-range"]], "hole_rotation": [[202, "hole-rotation"]], "hole_type": [[203, "hole-type"]], "honor_user_dielectric": [[456, "honor-user-dielectric"]], "horizontal_extent_factor": [[311, "horizontal-extent-factor"]], "icepak": [[726, "icepak"]], "icepak_component_file": [[676, "icepak-component-file"]], "icepak_use_minimal_comp_defaults": [[677, "icepak-use-minimal-comp-defaults"]], "id": [[26, "id"], [119, "id"], [229, "id"], [274, "id"], [312, "id"], [360, "id"]], "ignore_non_functional_pads": [[407, "ignore-non-functional-pads"]], "illegal_net_names": [[578, "illegal-net-names"]], "illegal_rlc_values": [[579, "illegal-rlc-values"]], "impedance": [[275, "impedance"], [313, "impedance"]], "import_bom": [[98, "import-bom"]], "import_definition": [[99, "import-definition"]], "import_json": [[390, "import-json"]], "in_polygon": [[230, "in-polygon"]], "in_voids": [[231, "in-voids"]], "include_inter_plane_coupling": [[408, "include-inter-plane-coupling"]], "include_only_selected_nets": [[457, "include-only-selected-nets"]], "ind_value": [[27, "ind-value"]], "inductors": [[100, "inductors"]], "instances": [[101, "instances"], [204, "instances"], [637, "instances"]], "instances_by_name": [[638, "instances-by-name"]], "int_to_geometry_type": [[179, "int-to-geometry-type"], [639, "int-to-geometry-type"]], "int_to_pad_type": [[180, "int-to-pad-type"], [640, "int-to-pad-type"]], "intersect": [[361, "intersect"]], "intersection_type": [[362, "intersection-type"]], "is_arc": [[363, "is-arc"]], "is_ccw": [[338, "is-ccw"]], "is_circuit_port": [[276, "is-circuit-port"], [314, "is-circuit-port"]], "is_current_source": [[277, "is-current-source"], [315, "is-current-source"]], "is_enabled": [[28, "is-enabled"]], "is_intersecting": [[364, "is-intersecting"]], "is_negative": [[365, "is-negative"]], "is_net_in_component": [[610, "is-net-in-component"]], "is_null": [[29, "is-null"], [135, "is-null"], [147, "is-null"], [158, "is-null"], [171, "is-null"], [232, "is-null"], [278, "is-null"], [316, "is-null"], [366, "is-null"]], "is_parallel_rlc": [[30, "is-parallel-rlc"]], "is_parameter": [[508, "is-parameter"]], "is_pin": [[233, "is-pin"]], "is_point": [[339, "is-point"]], "is_port": [[279, "is-port"], [317, "is-port"]], "is_power_gound_net": [[611, "is-power-gound-net"]], "is_power_ground": [[172, "is-power-ground"]], "is_reference_terminal": [[280, "is-reference-terminal"], [318, "is-reference-terminal"]], "is_segment": [[340, "is-segment"]], "is_stackup_layer": [[120, "is-stackup-layer"]], "is_top_mounted": [[31, "is-top-mounted"]], "is_via_layer": [[121, "is-via-layer"]], "is_void": [[234, "is-void"], [367, "is-void"]], "is_voltage_source": [[281, "is-voltage-source"], [319, "is-voltage-source"]], "iterate_materials_in_amat": [[589, "iterate-materials-in-amat"]], "layer": [[235, "layer"], [282, "layer"], [320, "layer"], [368, "layer"]], "layer_name": [[236, "layer-name"], [369, "layer-name"]], "layer_range_names": [[237, "layer-range-names"]], "layer_types": [[698, "layer-types"]], "layers": [[562, "layers"], [699, "layers"]], "layers_by_id": [[700, "layers-by-id"]], "layout_defeaturing": [[539, "layout-defeaturing"]], "layout_instance": [[32, "layout-instance"]], "length": [[341, "length"]], "limits": [[701, "limits"]], "load": [[702, "load"]], "load_amat": [[590, "load-amat"]], "load_material": [[591, "load-material"]], "location": [[33, "location"], [283, "location"], [321, "location"]], "lock_file": [[727, "lock-file"]], "longest_arc": [[370, "longest-arc"]], "lower_elevation": [[34, "lower-elevation"], [238, "lower-elevation"]], "magnitude": [[284, "magnitude"], [322, "magnitude"]], "material": [[205, "material"]], "material_property_to_id": [[592, "material-property-to-id"]], "materials": [[593, "materials"]], "max_arc_points": [[409, "max-arc-points"]], "max_mag_delta_s": [[410, "max-mag-delta-s"]], "max_num_passes": [[411, "max-num-passes"]], "max_suf_dev": [[412, "max-suf-dev"]], "merge_nets_polygons": [[612, "merge-nets-polygons"]], "merge_via_along_lines": [[641, "merge-via-along-lines"]], "mesh_freq": [[413, "mesh-freq"]], "mesh_sizefactor": [[414, "mesh-sizefactor"]], "metal_volume": [[239, "metal-volume"]], "mid_point": [[342, "mid-point"]], "min_num_passes": [[415, "min-num-passes"]], "min_pad_area_to_mesh": [[416, "min-pad-area-to-mesh"]], "min_plane_area_to_mesh": [[417, "min-plane-area-to-mesh"]], "min_void_area": [[418, "min-void-area"]], "minimum_void_surface": [[419, "minimum-void-surface"]], "mode": [[703, "mode"]], "model": [[35, "model"]], "model_type": [[36, "model-type"]], "name": [[37, "name"], [112, "name"], [122, "name"], [136, "name"], [148, "name"], [159, "name"], [173, "name"], [206, "name"], [240, "name"], [285, "name"], [323, "name"], [371, "name"], [509, "name"]], "negative_net": [[137, "negative-net"]], "net": [[38, "net"], [241, "net"], [286, "net"], [324, "net"], [372, "net"]], "net_name": [[242, "net-name"], [287, "net-name"], [325, "net-name"], [373, "net-name"]], "netlist": [[613, "netlist"]], "netlist_model": [[39, "netlist-model"]], "nets": [[40, "nets"], [149, "nets"], [160, "nets"], [614, "nets"]], "nets_by_components": [[615, "nets-by-components"]], "non_stackup_layers": [[704, "non-stackup-layers"]], "nport_comp_definition": [[102, "nport-comp-definition"]], "num_layers": [[705, "num-layers"]], "numpins": [[41, "numpins"]], "object_instance": [[243, "object-instance"]], "offset_x": [[181, "offset-x"]], "offset_y": [[182, "offset-y"]], "open_edb_after_build": [[391, "open-edb-after-build"]], "open_project": [[728, "open-project"]], "opening EDB": [[756, "opening-EDB"]], "oproject": [[729, "oproject"]], "output_aedb": [[458, "output-aedb"]], "package_def": [[42, "package-def"]], "pad_type": [[642, "pad-type"]], "padstack_definition": [[244, "padstack-definition"]], "padstack_instances": [[174, "padstack-instances"], [207, "padstack-instances"]], "parameters": [[183, "parameters"]], "parameters_values": [[184, "parameters-values"]], "parameters_values_string": [[185, "parameters-values-string"]], "parametrize_polygon": [[563, "parametrize-polygon"]], "parametrize_position": [[245, "parametrize-position"]], "parametrize_trace_width": [[564, "parametrize-trace-width"]], "part_name": [[43, "part-name"]], "partname": [[44, "partname"]], "passivity_tolerance": [[420, "passivity-tolerance"]], "paths": [[565, "paths"]], "pec_launch_width": [[326, "pec-launch-width"]], "percentage_error_z0": [[421, "percentage-error-z0"]], "phase": [[288, "phase"], [327, "phase"]], "pin": [[246, "pin"]], "pin_groups": [[678, "pin-groups"]], "pin_number": [[247, "pin-number"]], "pingroups": [[248, "pingroups"], [643, "pingroups"]], "pinlist": [[45, "pinlist"]], "pins": [[46, "pins"], [644, "pins"]], "place": [[645, "place"]], "place_a3dcomp_3d_placement": [[706, "place-a3dcomp-3d-placement"]], "place_in_layout": [[707, "place-in-layout"]], "place_in_layout_3d_placement": [[708, "place-in-layout-3d-placement"]], "place_instance": [[709, "place-instance"]], "place_voltage_probe": [[679, "place-voltage-probe"]], "placement_layer": [[47, "placement-layer"], [249, "placement-layer"]], "plot": [[175, "plot"], [616, "plot"], [710, "plot"]], "points": [[343, "points"]], "points_raw": [[344, "points-raw"]], "polygon_data": [[186, "polygon-data"]], "polygons": [[566, "polygons"]], "polygons_by_layer": [[567, "polygons-by-layer"]], "position": [[250, "position"]], "positive_net": [[138, "positive-net"]], "power": [[617, "power"]], "power_nets": [[459, "power-nets"]], "primitives": [[176, "primitives"], [568, "primitives"]], "primitives_by_layer": [[569, "primitives-by-layer"]], "primitives_by_net": [[570, "primitives-by-net"]], "probes": [[540, "probes"], [680, "probes"]], "process_padstack_definitions": [[422, "process-padstack-definitions"]], "project_file": [[730, "project-file"]], "project_name": [[731, "project-name"]], "project_path": [[732, "project-path"]], "pyaedt_dir": [[733, "pyaedt-dir"]], "pyedb.dotnet.edb": [[10, "module-pyedb.dotnet.edb"]], "quit_application": [[734, "quit-application"]], "radiation_box": [[423, "radiation-box"]], "radius": [[345, "radius"]], "read_materials": [[594, "read-materials"]], "read_syslib_material": [[595, "read-syslib-material"]], "rectangles": [[571, "rectangles"]], "ref_terminal": [[289, "ref-terminal"], [328, "ref-terminal"]], "refdes": [[48, "refdes"]], "reference_net_name": [[290, "reference-net-name"], [329, "reference-net-name"]], "reference_object": [[291, "reference-object"], [330, "reference-object"]], "refresh_components": [[103, "refresh-components"]], "refresh_layer_collection": [[711, "refresh-layer-collection"]], "relative_error": [[424, "relative-error"]], "remove_layer": [[712, "remove-layer"]], "remove_pads_from_padstack": [[646, "remove-pads-from-padstack"]], "renormalize": [[292, "renormalize"]], "renormalize_z0": [[293, "renormalize-z0"]], "replace_rlc_by_gap_boundaries": [[104, "replace-rlc-by-gap-boundaries"]], "res_value": [[49, "res-value"]], "residual_copper_area_per_layer": [[713, "residual-copper-area-per-layer"]], "resistors": [[105, "resistors"]], "results_directory": [[735, "results-directory"]], "return_current_distribution": [[425, "return-current-distribution"]], "rlc": [[150, "rlc"]], "rlc_values": [[50, "rlc-values"]], "rotation": [[51, "rotation"], [187, "rotation"], [251, "rotation"]], "run_dc_simulation": [[736, "run-dc-simulation"]], "run_icepak_simulation": [[737, "run-icepak-simulation"]], "s_param_model": [[52, "s-param-model"]], "save_project": [[738, "save-project"]], "serial_rlc": [[151, "serial-rlc"]], "set_all_antipad_value": [[647, "set-all-antipad-value"]], "set_backdrill_bottom": [[252, "set-backdrill-bottom"]], "set_backdrill_top": [[253, "set-backdrill-top"]], "set_coax_port_attributes": [[541, "set-coax-port-attributes"]], "set_component_model": [[106, "set-component-model"]], "set_component_rlc": [[107, "set-component-rlc"]], "set_layer_clone": [[714, "set-layer-clone"]], "set_pad_property": [[648, "set-pad-property"]], "set_solder_ball": [[108, "set-solder-ball"]], "set_solderball": [[649, "set-solderball"]], "setup_name": [[392, "setup-name"]], "shape": [[188, "shape"]], "shape_to_polygon_data": [[572, "shape-to-polygon-data"]], "short_component_pins": [[109, "short-component-pins"]], "shortest_arc": [[374, "shortest-arc"]], "shunt_rlc": [[152, "shunt-rlc"]], "signal": [[618, "signal"]], "signal_layer_etching_instances": [[460, "signal-layer-etching-instances"]], "signal_layers": [[715, "signal-layers"]], "signal_layers_properties": [[461, "signal-layers-properties"]], "signal_nets": [[462, "signal-nets"]], "snap_length_threshold": [[426, "snap-length-threshold"]], "solder_ball_diameter": [[53, "solder-ball-diameter"]], "solder_ball_height": [[54, "solder-ball-height"]], "solder_ball_placement": [[55, "solder-ball-placement"]], "solder_ball_shape": [[56, "solder-ball-shape"]], "solver_type": [[393, "solver-type"]], "sources": [[463, "sources"], [542, "sources"], [681, "sources"]], "spice_model": [[57, "spice-model"]], "split_to_microvias": [[208, "split-to-microvias"]], "src_dir": [[739, "src-dir"]], "stackup_layers": [[716, "stackup-layers"]], "start": [[346, "start"]], "start_azimuth": [[427, "start-azimuth"]], "start_freq": [[428, "start-freq"]], "start_layer": [[254, "start-layer"]], "step_freq": [[429, "step-freq"]], "stop_freq": [[430, "stop-freq"]], "stop_layer": [[255, "stop-layer"]], "subtract": [[375, "subtract"]], "sweep_interpolating": [[431, "sweep-interpolating"]], "sweep_name": [[432, "sweep-name"]], "sweep_type": [[433, "sweep-type"]], "syslib": [[596, "syslib"]], "terminal": [[256, "terminal"]], "terminal_type": [[294, "terminal-type"], [331, "terminal-type"]], "thickness": [[717, "thickness"]], "tofloat": [[113, "tofloat"]], "top_bottom_association": [[58, "top-bottom-association"], [257, "top-bottom-association"]], "tostring": [[114, "tostring"]], "transparency": [[123, "transparency"]], "trim_component_reference_size": [[543, "trim-component-reference-size"]], "trim_reference_size": [[464, "trim-reference-size"]], "truncate_airbox_at_ground": [[465, "truncate-airbox-at-ground"]], "type": [[59, "type"], [124, "type"], [258, "type"], [295, "type"], [332, "type"], [376, "type"]], "unite": [[377, "unite"]], "unite_polygons_on_layer": [[573, "unite-polygons-on-layer"]], "update": [[125, "update"]], "update_layout": [[718, "update-layout"]], "update_material": [[597, "update-material"]], "update_rlc_from_bom": [[110, "update-rlc-from-bom"]], "upper_elevation": [[60, "upper-elevation"], [259, "upper-elevation"]], "use_airbox_horizontal_extent_multiple": [[466, "use-airbox-horizontal-extent-multiple"]], "use_airbox_negative_vertical_extent_multiple": [[467, "use-airbox-negative-vertical-extent-multiple"]], "use_airbox_positive_vertical_extent_multiple": [[468, "use-airbox-positive-vertical-extent-multiple"]], "use_arc_to_chord_error": [[434, "use-arc-to-chord-error"]], "use_default_coax_port_radial_extension": [[469, "use-default-coax-port-radial-extension"]], "use_default_cutout": [[470, "use-default-cutout"]], "use_dielectric_extent_multiple": [[471, "use-dielectric-extent-multiple"]], "use_error_z0": [[435, "use-error-z0"]], "use_pyaedt_cutout": [[472, "use-pyaedt-cutout"]], "use_q3d_for_dc": [[436, "use-q3d-for-dc"]], "use_radiation_boundary": [[473, "use-radiation-boundary"]], "use_s_parameter_model": [[61, "use-s-parameter-model"]], "value": [[62, "value"], [115, "value"], [510, "value"]], "value_object": [[511, "value-object"]], "value_string": [[512, "value-string"]], "version_keys": [[740, "version-keys"]], "vertical_extent_factor": [[333, "vertical-extent-factor"]], "via_layers": [[209, "via-layers"]], "via_start_layer": [[210, "via-start-layer"]], "via_stop_layer": [[211, "via-stop-layer"]], "vias": [[650, "vias"]], "vias and padstacks": [[4, "vias-and-padstacks"]], "voids": [[378, "voids"]], "voltage_regulator_modules": [[682, "voltage-regulator-modules"]], "xtalk_threshold": [[437, "xtalk-threshold"]]}, "docnames": ["api/ComponentsEdb", "api/CoreEdb", "api/LayerData", "api/NetsEdb", "api/PadstackEdb", "api/PortsEdb", "api/PrimitivesEdb", "api/SiWave", "api/SimulationConfigurationEdb", "api/SourcesEdb", "api/_autosummary/pyedb.dotnet.edb", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", "api/_autosummary/pyedb.dotnet.edb_core.components.Components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.add_void", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.circles", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_circle", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_trace", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.db", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.layers", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.paths", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rectangles", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout", "api/_autosummary/pyedb.siwave.Siwave", "api/_autosummary/pyedb.siwave.Siwave.close_project", "api/_autosummary/pyedb.siwave.Siwave.current_version", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report", "api/_autosummary/pyedb.siwave.Siwave.export_element_data", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report", "api/_autosummary/pyedb.siwave.Siwave.icepak", "api/_autosummary/pyedb.siwave.Siwave.lock_file", "api/_autosummary/pyedb.siwave.Siwave.open_project", "api/_autosummary/pyedb.siwave.Siwave.oproject", "api/_autosummary/pyedb.siwave.Siwave.project_file", "api/_autosummary/pyedb.siwave.Siwave.project_name", "api/_autosummary/pyedb.siwave.Siwave.project_path", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir", "api/_autosummary/pyedb.siwave.Siwave.quit_application", "api/_autosummary/pyedb.siwave.Siwave.results_directory", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation", "api/_autosummary/pyedb.siwave.Siwave.save_project", "api/_autosummary/pyedb.siwave.Siwave.src_dir", "api/_autosummary/pyedb.siwave.Siwave.version_keys", "api/index", "contributing", "examples/index", "examples/legacy_pyaedt_integration/03_5G_antenna_example", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics", "examples/legacy_pyaedt_integration/04_edb_parametrized_design", "examples/legacy_pyaedt_integration/09_Configuration", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board", "examples/legacy_pyaedt_integration/13_edb_create_component", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design", "examples/legacy_pyaedt_integration/15_ac_analysis", "examples/legacy_pyaedt_integration/index", "examples/legacy_standalone/00_EDB_Create_VIA", "examples/legacy_standalone/01_edb_example", "examples/legacy_standalone/02_edb_to_ipc2581", "examples/legacy_standalone/03_rename_nets_and_ports", "examples/legacy_standalone/05_Plot_nets", "examples/legacy_standalone/06_Advanced_EDB", "examples/legacy_standalone/08_CPWG", "examples/legacy_standalone/10_GDS_workflow", "examples/legacy_standalone/11_post_layout_parameterization", "examples/legacy_standalone/index", "examples/use_configuration/import_stackup", "examples/use_configuration/index", "examples/use_configuration/set_up_edb_for_signal_integrity_analysis", "getting_started/about", "getting_started/contributing", "getting_started/index", "getting_started/installation", "getting_started/quickcode", "getting_started/troubleshooting", "getting_started/versioning", "index", "user_guide/build_simulation_project/build_signal_integrity_project", "user_guide/build_simulation_project/cutout", "user_guide/build_simulation_project/index", "user_guide/components/create_resistor_on_pin", "user_guide/components/create_rlc_boundary_on_pins", "user_guide/components/create_rlc_component", "user_guide/components/index", "user_guide/edb_information_queries/edb_queries", "user_guide/edb_information_queries/get_layout_bounding_box", "user_guide/edb_information_queries/index", "user_guide/excitations/create_circuit_ports_on_component", "user_guide/excitations/create_coax_port_on_component", "user_guide/excitations/create_current_source", "user_guide/excitations/create_edge_port_on_polygon", "user_guide/excitations/create_port_between_pin_and_layer", "user_guide/excitations/index", "user_guide/index", "user_guide/layer_stackup/define_layer_stackup", "user_guide/layer_stackup/index", "user_guide/layer_stackup/layer_stackup", "user_guide/load_export_edb/index", "user_guide/load_export_edb/loading_layout", "user_guide/padstacks/create_padsatck_instance", "user_guide/padstacks/index", "user_guide/padstacks/set_all_antipads_value", "user_guide/simulation_setup/add_siwave_analysis", "user_guide/simulation_setup/define_hfss_extent", "user_guide/simulation_setup/define_hfss_simulation_setup", "user_guide/simulation_setup/index", "user_guide/use_design_variables"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api/ComponentsEdb.rst", "api/CoreEdb.rst", "api/LayerData.rst", "api/NetsEdb.rst", "api/PadstackEdb.rst", "api/PortsEdb.rst", "api/PrimitivesEdb.rst", "api/SiWave.rst", "api/SimulationConfigurationEdb.rst", "api/SourcesEdb.rst", "api/_autosummary/pyedb.dotnet.edb.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.add_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.circles.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_circle.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_trace.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.paths.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rectangles.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout.rst", "api/_autosummary/pyedb.siwave.Siwave.rst", "api/_autosummary/pyedb.siwave.Siwave.close_project.rst", "api/_autosummary/pyedb.siwave.Siwave.current_version.rst", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report.rst", "api/_autosummary/pyedb.siwave.Siwave.export_element_data.rst", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project.rst", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report.rst", "api/_autosummary/pyedb.siwave.Siwave.icepak.rst", "api/_autosummary/pyedb.siwave.Siwave.lock_file.rst", "api/_autosummary/pyedb.siwave.Siwave.open_project.rst", "api/_autosummary/pyedb.siwave.Siwave.oproject.rst", "api/_autosummary/pyedb.siwave.Siwave.project_file.rst", "api/_autosummary/pyedb.siwave.Siwave.project_name.rst", "api/_autosummary/pyedb.siwave.Siwave.project_path.rst", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.quit_application.rst", "api/_autosummary/pyedb.siwave.Siwave.results_directory.rst", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.save_project.rst", "api/_autosummary/pyedb.siwave.Siwave.src_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.version_keys.rst", "api/index.rst", "contributing.rst", "examples/index.rst", "examples/legacy_pyaedt_integration/03_5G_antenna_example.py", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics.py", "examples/legacy_pyaedt_integration/04_edb_parametrized_design.py", "examples/legacy_pyaedt_integration/09_Configuration.py", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board.py", "examples/legacy_pyaedt_integration/13_edb_create_component.py", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design.py", "examples/legacy_pyaedt_integration/15_ac_analysis.py", "examples/legacy_pyaedt_integration/index.rst", "examples/legacy_standalone/00_EDB_Create_VIA.py", "examples/legacy_standalone/01_edb_example.py", "examples/legacy_standalone/02_edb_to_ipc2581.py", "examples/legacy_standalone/03_rename_nets_and_ports.py", "examples/legacy_standalone/05_Plot_nets.py", "examples/legacy_standalone/06_Advanced_EDB.py", "examples/legacy_standalone/08_CPWG.py", "examples/legacy_standalone/10_GDS_workflow.py", "examples/legacy_standalone/11_post_layout_parameterization.py", "examples/legacy_standalone/index.rst", "examples/use_configuration/import_stackup.py", "examples/use_configuration/index.rst", "examples/use_configuration/set_up_edb_for_signal_integrity_analysis.py", "getting_started/about.rst", "getting_started/contributing.rst", "getting_started/index.rst", "getting_started/installation.rst", "getting_started/quickcode.rst", "getting_started/troubleshooting.rst", "getting_started/versioning.rst", "index.rst", "user_guide/build_simulation_project/build_signal_integrity_project.rst", "user_guide/build_simulation_project/cutout.rst", "user_guide/build_simulation_project/index.rst", "user_guide/components/create_resistor_on_pin.rst", "user_guide/components/create_rlc_boundary_on_pins.rst", "user_guide/components/create_rlc_component.rst", "user_guide/components/index.rst", "user_guide/edb_information_queries/edb_queries.rst", "user_guide/edb_information_queries/get_layout_bounding_box.rst", "user_guide/edb_information_queries/index.rst", "user_guide/excitations/create_circuit_ports_on_component.rst", "user_guide/excitations/create_coax_port_on_component.rst", "user_guide/excitations/create_current_source.rst", "user_guide/excitations/create_edge_port_on_polygon.rst", "user_guide/excitations/create_port_between_pin_and_layer.rst", "user_guide/excitations/index.rst", "user_guide/index.rst", "user_guide/layer_stackup/define_layer_stackup.rst", "user_guide/layer_stackup/index.rst", "user_guide/layer_stackup/layer_stackup.rst", "user_guide/load_export_edb/index.rst", "user_guide/load_export_edb/loading_layout.rst", "user_guide/padstacks/create_padsatck_instance.rst", "user_guide/padstacks/index.rst", "user_guide/padstacks/set_all_antipads_value.rst", "user_guide/simulation_setup/add_siwave_analysis.rst", "user_guide/simulation_setup/define_hfss_extent.rst", "user_guide/simulation_setup/define_hfss_simulation_setup.rst", "user_guide/simulation_setup/index.rst", "user_guide/use_design_variables.rst"], "indexentries": {"ac_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[380, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", false]], "adaptive_high_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[395, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", false]], "adaptive_low_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[396, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", false]], "adaptive_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[397, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", false]], "add_conductor_material() (pyedb.dotnet.edb_core.materials.materials method)": [[581, "pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", false]], "add_current_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[381, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", false]], "add_dc_ground_source_term() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[382, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", false]], "add_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[582, "pyedb.dotnet.edb_core.materials.Materials.add_debye_material", false]], "add_dielectric_material() (pyedb.dotnet.edb_core.materials.materials method)": [[583, "pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", false]], "add_djordjevicsarkar_dielectric() (pyedb.dotnet.edb_core.materials.materials method)": [[584, "pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", false]], "add_document_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[684, "pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", false]], "add_frequency_sweep (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[439, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", false]], "add_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[685, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer", false]], "add_layer_above() (pyedb.dotnet.edb_core.stackup.stackup method)": [[686, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", false]], "add_layer_below() (pyedb.dotnet.edb_core.stackup.stackup method)": [[687, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", false]], "add_layer_bottom() (pyedb.dotnet.edb_core.stackup.stackup method)": [[688, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", false]], "add_layer_top() (pyedb.dotnet.edb_core.stackup.stackup method)": [[689, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", false]], "add_material() (pyedb.dotnet.edb_core.materials.materials method)": [[585, "pyedb.dotnet.edb_core.materials.Materials.add_material", false]], "add_multipole_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[586, "pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[127, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[140, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[154, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", false]], "add_outline_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[690, "pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", false]], "add_port_on_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[67, "pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", false]], "add_rlc() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[383, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", false]], "add_rlc_boundary() (pyedb.dotnet.edb_core.components.components method)": [[68, "pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", false]], "add_siwave_dc_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[652, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", false]], "add_siwave_syz_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[653, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", false]], "add_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch method)": [[440, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", false]], "add_void() (pyedb.dotnet.edb_core.layout.edblayout method)": [[545, "pyedb.dotnet.edb_core.layout.EdbLayout.add_void", false]], "add_voltage_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[384, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", false]], "adjust_solder_dielectrics() (pyedb.dotnet.edb_core.stackup.stackup method)": [[691, "pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", false]], "aedt_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[213, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", false]], "airbox_horizontal_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[441, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", false]], "airbox_negative_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[442, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", false]], "airbox_positive_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[443, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", false]], "all_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[692, "pyedb.dotnet.edb_core.stackup.Stackup.all_layers", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[128, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[141, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[162, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[129, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[142, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[155, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", false]], "api_negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[130, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[131, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[143, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[156, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", false]], "api_object (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[163, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", false]], "api_positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[132, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", false]], "arc_angle (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[398, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", false]], "arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[399, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", false]], "arcs (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[348, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", false]], "area() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[349, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", false]], "assign_rlc_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[12, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", false]], "assign_s_param_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[13, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", false]], "assign_spice_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[14, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", false]], "backdrill_bottom (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[214, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", false]], "backdrill_top (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[215, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", false]], "basis_order (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[400, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", false]], "batch_solve_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[385, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", false]], "bbox (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[350, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[261, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[297, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", false]], "bounding_box (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[15, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[216, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[262, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[298, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[351, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", false]], "build_simulation_project() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[386, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", false]], "cap_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[16, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", false]], "capacitors (pyedb.dotnet.edb_core.components.components property)": [[69, "pyedb.dotnet.edb_core.components.Components.capacitors", false]], "center (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[17, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[335, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[352, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", false]], "check_and_fix_via_plating() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[620, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", false]], "circles (pyedb.dotnet.edb_core.layout.edblayout property)": [[546, "pyedb.dotnet.edb_core.layout.EdbLayout.circles", false]], "classify_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[599, "pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", false]], "close_project() (pyedb.siwave.siwave method)": [[720, "pyedb.siwave.Siwave.close_project", false]], "coax_solder_ball_diameter (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[444, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", false]], "color (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[117, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", false]], "component (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[18, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", false]], "component (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[217, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[263, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[299, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[353, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", false]], "component_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[19, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", false]], "component_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[20, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", false]], "component_pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[218, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin", false]], "component_property (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[21, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", false]], "components (class in pyedb.dotnet.edb_core.components)": [[63, "pyedb.dotnet.edb_core.components.Components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[144, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[164, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[445, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", false]], "components_by_nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[600, "pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", false]], "components_by_partname (pyedb.dotnet.edb_core.components.components property)": [[70, "pyedb.dotnet.edb_core.components.Components.components_by_partname", false]], "configure_hfss_analysis_setup() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[514, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", false]], "configure_hfss_extents() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[515, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", false]], "configure_siw_analysis_setup() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[654, "pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", false]], "convert_to_3d_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[190, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", false]], "convert_to_polygon() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[354, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", false]], "coplanar_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[446, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[264, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[300, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", false]], "create() (pyedb.dotnet.edb_core.components.components method)": [[71, "pyedb.dotnet.edb_core.components.Components.create", false]], "create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[165, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", false]], "create() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[621, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", false]], "create_bundle_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[516, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", false]], "create_circle() (pyedb.dotnet.edb_core.layout.edblayout method)": [[547, "pyedb.dotnet.edb_core.layout.EdbLayout.create_circle", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[517, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[655, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[518, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[656, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[657, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", false]], "create_circular_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[622, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", false]], "create_clearance_on_component() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[22, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", false]], "create_coax_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[219, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", false]], "create_coax_port() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[623, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", false]], "create_coax_port_on_component() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[519, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[520, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[658, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[521, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[659, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", false]], "create_current_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[660, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", false]], "create_dc_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[661, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", false]], "create_differential_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[522, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", false]], "create_edge_port_horizontal() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[523, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", false]], "create_edge_port_on_polygon() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[524, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", false]], "create_edge_port_vertical() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[525, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", false]], "create_exec_file() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[662, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", false]], "create_hfss_ports_on_padstack() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[526, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", false]], "create_impedance_crosstalk_scan() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[663, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", false]], "create_lumped_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[527, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", false]], "create_package_def() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[23, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", false]], "create_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[664, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", false]], "create_pin_group_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[665, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", false]], "create_pin_group_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[666, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", false]], "create_pingroup_from_pins() (pyedb.dotnet.edb_core.components.components method)": [[72, "pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", false]], "create_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[548, "pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon", false]], "create_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[220, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", false]], "create_port_between_pin_and_layer() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[667, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", false]], "create_port_on_component() (pyedb.dotnet.edb_core.components.components method)": [[73, "pyedb.dotnet.edb_core.components.Components.create_port_on_component", false]], "create_port_on_pins() (pyedb.dotnet.edb_core.components.components method)": [[74, "pyedb.dotnet.edb_core.components.Components.create_port_on_pins", false]], "create_rectangle() (pyedb.dotnet.edb_core.layout.edblayout method)": [[549, "pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle", false]], "create_rectangle_in_pad() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[221, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[528, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[668, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", false]], "create_rlc_boundary_on_pins() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[529, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", false]], "create_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[75, "pyedb.dotnet.edb_core.components.Components.create_rlc_component", false]], "create_rlc_component() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[669, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", false]], "create_source_on_component() (pyedb.dotnet.edb_core.components.components method)": [[76, "pyedb.dotnet.edb_core.components.Components.create_source_on_component", false]], "create_symmetric_stackup() (pyedb.dotnet.edb_core.stackup.stackup method)": [[693, "pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", false]], "create_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[222, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", false]], "create_trace() (pyedb.dotnet.edb_core.layout.edblayout method)": [[550, "pyedb.dotnet.edb_core.layout.EdbLayout.create_trace", false]], "create_vertical_circuit_port_on_clipped_traces() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[530, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", false]], "create_voltage_probe_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[670, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[531, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[671, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[532, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[672, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[673, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", false]], "create_vrm_module() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[674, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", false]], "create_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[533, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", false]], "current_version (pyedb.siwave.siwave property)": [[721, "pyedb.siwave.Siwave.current_version", false]], "cutout_subdesign_expansion (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[447, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", false]], "cutout_subdesign_round_corner (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[448, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", false]], "cutout_subdesign_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[449, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", false]], "db (pyedb.dotnet.edb_core.layout.edblayout property)": [[551, "pyedb.dotnet.edb_core.layout.EdbLayout.db", false]], "db (pyedb.dotnet.edb_core.nets.edbnets property)": [[601, "pyedb.dotnet.edb_core.nets.EdbNets.db", false]], "db (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[624, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", false]], "dc_compute_inductance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[475, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", false]], "dc_contact_radius (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[476, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", false]], "dc_error_energy (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[477, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", false]], "dc_export_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[478, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", false]], "dc_full_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[479, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", false]], "dc_icepak_temp_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[480, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", false]], "dc_import_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[481, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", false]], "dc_max_init_mesh_edge_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[482, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", false]], "dc_max_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[483, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", false]], "dc_mesh_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[484, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", false]], "dc_mesh_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[485, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", false]], "dc_min_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[486, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", false]], "dc_min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[487, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", false]], "dc_min_void_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[488, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", false]], "dc_num_bondwire_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[489, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", false]], "dc_num_via_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[490, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", false]], "dc_per_pin_res_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[491, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", false]], "dc_per_pin_use_pin_format (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[492, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", false]], "dc_percent_local_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[493, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", false]], "dc_perform_adaptive_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[494, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", false]], "dc_plot_jv (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[495, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", false]], "dc_refine_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[496, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", false]], "dc_refine_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[497, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", false]], "dc_report_config_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[498, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", false]], "dc_report_show_active_devices (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[499, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", false]], "dc_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[387, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", false]], "dc_shorts() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[575, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", false]], "dc_slide_position (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[500, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", false]], "dc_source_terms_to_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[501, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", false]], "dc_use_dc_custom_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[502, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", false]], "dc_use_loop_res_for_per_pin (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[503, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", false]], "dc_via_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[504, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", false]], "dcir_equipotential_region (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[223, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", false]], "deactivate_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[77, "pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", false]], "decade_count (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[401, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[265, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[301, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", false]], "deembed_length (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[302, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", false]], "defeature_abs_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[402, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", false]], "defeature_layout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[403, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", false]], "defeature_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[552, "pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon", false]], "definitions (pyedb.dotnet.edb_core.components.components property)": [[78, "pyedb.dotnet.edb_core.components.Components.definitions", false]], "definitions (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[625, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", false]], "delete() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[24, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", false]], "delete() (pyedb.dotnet.edb_core.components.components method)": [[79, "pyedb.dotnet.edb_core.components.Components.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[133, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[145, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[157, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[166, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[224, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[266, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[303, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[355, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.variables.variable method)": [[506, "pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", false]], "delete() (pyedb.dotnet.edb_core.nets.edbnets method)": [[602, "pyedb.dotnet.edb_core.nets.EdbNets.delete", false]], "delete_material() (pyedb.dotnet.edb_core.materials.materials method)": [[587, "pyedb.dotnet.edb_core.materials.Materials.delete_material", false]], "delete_padstack_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[626, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", false]], "delete_primitives() (pyedb.dotnet.edb_core.layout.edblayout method)": [[553, "pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives", false]], "delete_single_pin_rlc() (pyedb.dotnet.edb_core.components.components method)": [[80, "pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", false]], "description (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[507, "pyedb.dotnet.edb_core.edb_data.variables.Variable.description", false]], "dielectric_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[450, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", false]], "dielectric_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[694, "pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", false]], "disable_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[81, "pyedb.dotnet.edb_core.components.Components.disable_rlc_component", false]], "disjoint_nets() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[576, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", false]], "do_cutout_subdesign (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[451, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", false]], "do_lambda_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[404, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", false]], "do_pingroup (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[452, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[267, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[304, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", false]], "duplicate() (pyedb.dotnet.edb_core.materials.materials method)": [[588, "pyedb.dotnet.edb_core.materials.Materials.duplicate", false]], "duplicate() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[627, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", false]], "edbarcs (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[334, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", false]], "edbcomponent (class in pyedb.dotnet.edb_core.cell.hierarchy.component)": [[11, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", false]], "edbdifferentialpairdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[126, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", false]], "edbextendednetdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[139, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", false]], "edbhfss (class in pyedb.dotnet.edb_core.hfss)": [[513, "pyedb.dotnet.edb_core.hfss.EdbHfss", false]], "edblayout (class in pyedb.dotnet.edb_core.layout)": [[544, "pyedb.dotnet.edb_core.layout.EdbLayout", false]], "edbnetclassdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[153, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", false]], "edbnets (class in pyedb.dotnet.edb_core.nets)": [[598, "pyedb.dotnet.edb_core.nets.EdbNets", false]], "edbnetsdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[161, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", false]], "edbpadproperties (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[177, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", false]], "edbpadstack (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[189, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", false]], "edbpadstackinstance (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[212, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", false]], "edbpadstacks (class in pyedb.dotnet.edb_core.padstack)": [[619, "pyedb.dotnet.edb_core.padstack.EdbPadstacks", false]], "edbprimitives (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[347, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", false]], "edbsiwave (class in pyedb.dotnet.edb_core.siwave)": [[651, "pyedb.dotnet.edb_core.siwave.EdbSiwave", false]], "edbvalue (class in pyedb.dotnet.edb_core.edb_data.edbvalue)": [[111, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", false]], "eligible_power_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[603, "pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", false]], "enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[25, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", false]], "end (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[336, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", false]], "enforce_causality (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[405, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", false]], "enforce_passivity (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[406, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", false]], "etching_factor_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[453, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", false]], "excitations (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[534, "pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", false]], "excitations (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[675, "pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", false]], "export() (pyedb.dotnet.edb_core.stackup.stackup method)": [[695, "pyedb.dotnet.edb_core.stackup.Stackup.export", false]], "export_bom() (pyedb.dotnet.edb_core.components.components method)": [[82, "pyedb.dotnet.edb_core.components.Components.export_bom", false]], "export_dc_simulation_report() (pyedb.siwave.siwave method)": [[722, "pyedb.siwave.Siwave.export_dc_simulation_report", false]], "export_definition() (pyedb.dotnet.edb_core.components.components method)": [[83, "pyedb.dotnet.edb_core.components.Components.export_definition", false]], "export_element_data() (pyedb.siwave.siwave method)": [[723, "pyedb.siwave.Siwave.export_element_data", false]], "export_icepak_project() (pyedb.siwave.siwave method)": [[724, "pyedb.siwave.Siwave.export_icepak_project", false]], "export_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[388, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", false]], "export_siwave_report() (pyedb.siwave.siwave method)": [[725, "pyedb.siwave.Siwave.export_siwave_report", false]], "extended_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[167, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", false]], "filename (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[389, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", false]], "fill_material (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[118, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[134, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[146, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[168, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", false]], "find_by_reference_designator() (pyedb.dotnet.edb_core.components.components method)": [[84, "pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", false]], "find_dc_short() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[169, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", false]], "find_instance_by_id() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[628, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id", false]], "find_or_create_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[604, "pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", false]], "fix_circle_void_for_clipping() (pyedb.dotnet.edb_core.layout.edblayout method)": [[554, "pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping", false]], "fix_self_intersections() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[577, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", false]], "flip_design() (pyedb.dotnet.edb_core.stackup.stackup method)": [[696, "pyedb.dotnet.edb_core.stackup.Stackup.flip_design", false]], "gapport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[260, "pyedb.dotnet.edb_core.edb_data.ports.GapPort", false]], "generate_excitations (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[454, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", false]], "generate_extended_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[605, "pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", false]], "generate_solder_balls (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[455, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", false]], "geometry_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[178, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", false]], "get_aedt_pin_name() (pyedb.dotnet.edb_core.components.components method)": [[85, "pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", false]], "get_closest_arc_midpoint() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[356, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", false]], "get_closest_point() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[357, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", false]], "get_component_by_name() (pyedb.dotnet.edb_core.components.components method)": [[86, "pyedb.dotnet.edb_core.components.Components.get_component_by_name", false]], "get_component_net_connection_info() (pyedb.dotnet.edb_core.components.components method)": [[87, "pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", false]], "get_component_placement_vector() (pyedb.dotnet.edb_core.components.components method)": [[88, "pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", false]], "get_components_from_nets() (pyedb.dotnet.edb_core.components.components method)": [[89, "pyedb.dotnet.edb_core.components.Components.get_components_from_nets", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[225, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[358, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[226, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[359, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", false]], "get_dcconnected_net_list() (pyedb.dotnet.edb_core.nets.edbnets method)": [[606, "pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[268, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[305, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", false]], "get_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[629, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", false]], "get_layout_bounding_box() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[535, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", false]], "get_layout_statistics() (pyedb.dotnet.edb_core.layout.edblayout method)": [[555, "pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics", false]], "get_layout_thickness() (pyedb.dotnet.edb_core.stackup.stackup method)": [[697, "pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", false]], "get_net_by_name() (pyedb.dotnet.edb_core.nets.edbnets method)": [[607, "pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", false]], "get_nets_from_pin_list() (pyedb.dotnet.edb_core.components.components method)": [[90, "pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[269, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[306, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", false]], "get_pad_parameters() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[630, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", false]], "get_padstack_instance_by_net_name() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[631, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", false]], "get_padstack_instances_intersecting_bounding_box() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[632, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", false]], "get_padstack_instances_rtree_index() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[633, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[270, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[307, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", false]], "get_pin_from_component() (pyedb.dotnet.edb_core.components.components method)": [[91, "pyedb.dotnet.edb_core.components.Components.get_pin_from_component", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[271, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[308, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", false]], "get_pin_position() (pyedb.dotnet.edb_core.components.components method)": [[92, "pyedb.dotnet.edb_core.components.Components.get_pin_position", false]], "get_pinlist_from_component_and_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[634, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", false]], "get_pins() (pyedb.dotnet.edb_core.components.components method)": [[93, "pyedb.dotnet.edb_core.components.Components.get_pins", false]], "get_pins_name_from_net() (pyedb.dotnet.edb_core.components.components method)": [[94, "pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", false]], "get_plot_data() (pyedb.dotnet.edb_core.nets.edbnets method)": [[608, "pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[272, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[309, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", false]], "get_polygon_bounding_box() (pyedb.dotnet.edb_core.layout.edblayout method)": [[556, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box", false]], "get_polygon_points() (pyedb.dotnet.edb_core.layout.edblayout method)": [[557, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points", false]], "get_polygons_by_layer() (pyedb.dotnet.edb_core.layout.edblayout method)": [[558, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer", false]], "get_ports_number() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[536, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", false]], "get_powertree() (pyedb.dotnet.edb_core.nets.edbnets method)": [[609, "pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", false]], "get_primitive() (pyedb.dotnet.edb_core.layout.edblayout method)": [[559, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive", false]], "get_primitive_by_layer_and_point() (pyedb.dotnet.edb_core.layout.edblayout method)": [[560, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point", false]], "get_primitives() (pyedb.dotnet.edb_core.layout.edblayout method)": [[561, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives", false]], "get_rats() (pyedb.dotnet.edb_core.components.components method)": [[95, "pyedb.dotnet.edb_core.components.Components.get_rats", false]], "get_reference_pins() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[227, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", false]], "get_reference_pins() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[635, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", false]], "get_smallest_trace_width() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[170, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", false]], "get_solder_ball_height() (pyedb.dotnet.edb_core.components.components method)": [[96, "pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", false]], "get_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[228, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", false]], "get_through_resistor_list() (pyedb.dotnet.edb_core.components.components method)": [[97, "pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", false]], "get_trace_width_for_traces_with_ports() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[537, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", false]], "get_via_instance_from_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[636, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", false]], "height (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[337, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", false]], "hfss_extent_info (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[538, "pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[273, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[310, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", false]], "hole_diameter (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[191, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", false]], "hole_diameter_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[192, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", false]], "hole_finished_size (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[193, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", false]], "hole_offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[194, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", false]], "hole_offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[195, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", false]], "hole_parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[196, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", false]], "hole_params (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[197, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", false]], "hole_plating_ratio (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[198, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", false]], "hole_plating_thickness (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[199, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", false]], "hole_properties (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[200, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", false]], "hole_range (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[201, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", false]], "hole_rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[202, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", false]], "hole_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[203, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", false]], "honor_user_dielectric (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[456, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", false]], "horizontal_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[311, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", false]], "icepak (pyedb.siwave.siwave property)": [[726, "pyedb.siwave.Siwave.icepak", false]], "icepak_component_file (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[676, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", false]], "icepak_use_minimal_comp_defaults (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[677, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", false]], "ics (pyedb.dotnet.edb_core.components.components property)": [[64, "pyedb.dotnet.edb_core.components.Components.ICs", false]], "id (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[26, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", false]], "id (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[119, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", false]], "id (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[229, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[274, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[312, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[360, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", false]], "ignore_non_functional_pads (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[407, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", false]], "illegal_net_names() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[578, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", false]], "illegal_rlc_values() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[579, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[275, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[313, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", false]], "import_bom() (pyedb.dotnet.edb_core.components.components method)": [[98, "pyedb.dotnet.edb_core.components.Components.import_bom", false]], "import_definition() (pyedb.dotnet.edb_core.components.components method)": [[99, "pyedb.dotnet.edb_core.components.Components.import_definition", false]], "import_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[390, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", false]], "in_polygon() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[230, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", false]], "in_voids() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[231, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", false]], "include_inter_plane_coupling (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[408, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", false]], "include_only_selected_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[457, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", false]], "ind_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[27, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", false]], "inductors (pyedb.dotnet.edb_core.components.components property)": [[100, "pyedb.dotnet.edb_core.components.Components.inductors", false]], "instances (pyedb.dotnet.edb_core.components.components property)": [[101, "pyedb.dotnet.edb_core.components.Components.instances", false]], "instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[204, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", false]], "instances (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[637, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", false]], "instances_by_name (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[638, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[179, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[639, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[180, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[640, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", false]], "intersect() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[361, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", false]], "intersection_type() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[362, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", false]], "ios (pyedb.dotnet.edb_core.components.components property)": [[65, "pyedb.dotnet.edb_core.components.Components.IOs", false]], "is_arc() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[363, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", false]], "is_ccw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[338, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[276, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[314, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", false]], "is_current_source (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[277, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source", false]], "is_current_source (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[315, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source", false]], "is_enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[28, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", false]], "is_intersecting() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[364, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", false]], "is_negative (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[365, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", false]], "is_net_in_component() (pyedb.dotnet.edb_core.nets.edbnets method)": [[610, "pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", false]], "is_null (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[29, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[135, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[147, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[158, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[171, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[232, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[278, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[316, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[366, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", false]], "is_parallel_rlc (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[30, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", false]], "is_parameter (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[508, "pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", false]], "is_pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[233, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", false]], "is_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[339, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", false]], "is_port (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[279, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port", false]], "is_port (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[317, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port", false]], "is_power_gound_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[611, "pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", false]], "is_power_ground (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[172, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[280, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[318, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", false]], "is_segment (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[340, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", false]], "is_stackup_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[120, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", false]], "is_top_mounted (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[31, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", false]], "is_via_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[121, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", false]], "is_void (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[234, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", false]], "is_void (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[367, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", false]], "is_voltage_source (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[281, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source", false]], "is_voltage_source (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[319, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source", false]], "iterate_materials_in_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[589, "pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", false]], "layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[235, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[282, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[320, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[368, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[236, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[369, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", false]], "layer_range_names (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[237, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", false]], "layer_types (pyedb.dotnet.edb_core.stackup.stackup property)": [[698, "pyedb.dotnet.edb_core.stackup.Stackup.layer_types", false]], "layeredbclass (class in pyedb.dotnet.edb_core.edb_data.layer_data)": [[116, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", false]], "layers (pyedb.dotnet.edb_core.layout.edblayout property)": [[562, "pyedb.dotnet.edb_core.layout.EdbLayout.layers", false]], "layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[699, "pyedb.dotnet.edb_core.stackup.Stackup.layers", false]], "layers_by_id (pyedb.dotnet.edb_core.stackup.stackup property)": [[700, "pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", false]], "layout_defeaturing() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[539, "pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", false]], "layout_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[32, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", false]], "layoutvalidation (class in pyedb.dotnet.edb_core.layout_validation)": [[574, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation", false]], "length (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[341, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", false]], "limits() (pyedb.dotnet.edb_core.stackup.stackup method)": [[701, "pyedb.dotnet.edb_core.stackup.Stackup.limits", false]], "load() (pyedb.dotnet.edb_core.stackup.stackup method)": [[702, "pyedb.dotnet.edb_core.stackup.Stackup.load", false]], "load_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[590, "pyedb.dotnet.edb_core.materials.Materials.load_amat", false]], "load_material() (pyedb.dotnet.edb_core.materials.materials method)": [[591, "pyedb.dotnet.edb_core.materials.Materials.load_material", false]], "location (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[33, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[283, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[321, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", false]], "lock_file (pyedb.siwave.siwave property)": [[727, "pyedb.siwave.Siwave.lock_file", false]], "longest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[370, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", false]], "lower_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[34, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", false]], "lower_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[238, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", false]], "magnitude (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[284, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", false]], "magnitude (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[322, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude", false]], "material (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[205, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", false]], "material_property_to_id() (pyedb.dotnet.edb_core.materials.materials method)": [[592, "pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", false]], "materials (class in pyedb.dotnet.edb_core.materials)": [[580, "pyedb.dotnet.edb_core.materials.Materials", false]], "materials (pyedb.dotnet.edb_core.materials.materials property)": [[593, "pyedb.dotnet.edb_core.materials.Materials.materials", false]], "max_arc_points (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[409, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", false]], "max_mag_delta_s (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[410, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", false]], "max_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[411, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", false]], "max_suf_dev (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[412, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", false]], "merge_nets_polygons() (pyedb.dotnet.edb_core.nets.edbnets method)": [[612, "pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", false]], "merge_via_along_lines() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[641, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", false]], "mesh_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[413, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", false]], "mesh_sizefactor (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[414, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", false]], "metal_volume (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[239, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", false]], "mid_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[342, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", false]], "min_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[415, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", false]], "min_pad_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[416, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", false]], "min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[417, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", false]], "min_void_area (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[418, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", false]], "minimum_void_surface (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[419, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", false]], "mode (pyedb.dotnet.edb_core.stackup.stackup property)": [[703, "pyedb.dotnet.edb_core.stackup.Stackup.mode", false]], "model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[35, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", false]], "model_type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[36, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", false]], "module": [[10, "module-pyedb.dotnet.edb", false]], "name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[37, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", false]], "name (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[112, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", false]], "name (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[122, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[136, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[148, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[159, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[173, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[206, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[240, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[285, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[323, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[371, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", false]], "name (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[509, "pyedb.dotnet.edb_core.edb_data.variables.Variable.name", false]], "negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[137, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", false]], "net (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[38, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", false]], "net (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[241, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[286, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[324, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[372, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", false]], "net_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[242, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[287, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[325, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[373, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", false]], "netlist (pyedb.dotnet.edb_core.nets.edbnets property)": [[613, "pyedb.dotnet.edb_core.nets.EdbNets.netlist", false]], "netlist_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[39, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", false]], "nets (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[40, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[149, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[160, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", false]], "nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[614, "pyedb.dotnet.edb_core.nets.EdbNets.nets", false]], "nets_by_components (pyedb.dotnet.edb_core.nets.edbnets property)": [[615, "pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", false]], "non_stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[704, "pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", false]], "nport_comp_definition (pyedb.dotnet.edb_core.components.components property)": [[102, "pyedb.dotnet.edb_core.components.Components.nport_comp_definition", false]], "num_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[705, "pyedb.dotnet.edb_core.stackup.Stackup.num_layers", false]], "numpins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[41, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", false]], "object_instance (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[243, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", false]], "offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[181, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", false]], "offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[182, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", false]], "open_edb_after_build (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[391, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", false]], "open_project() (pyedb.siwave.siwave method)": [[728, "pyedb.siwave.Siwave.open_project", false]], "oproject (pyedb.siwave.siwave property)": [[729, "pyedb.siwave.Siwave.oproject", false]], "others (pyedb.dotnet.edb_core.components.components property)": [[66, "pyedb.dotnet.edb_core.components.Components.Others", false]], "output_aedb (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[458, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", false]], "package_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[42, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", false]], "pad_type (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[642, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", false]], "padstack_definition (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[244, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[174, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[207, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", false]], "parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[183, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", false]], "parameters_values (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[184, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", false]], "parameters_values_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[185, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", false]], "parametrize_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[563, "pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon", false]], "parametrize_position() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[245, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", false]], "parametrize_trace_width() (pyedb.dotnet.edb_core.layout.edblayout method)": [[564, "pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width", false]], "part_name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[43, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", false]], "partname (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[44, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", false]], "passivity_tolerance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[420, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", false]], "paths (pyedb.dotnet.edb_core.layout.edblayout property)": [[565, "pyedb.dotnet.edb_core.layout.EdbLayout.paths", false]], "pec_launch_width (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[326, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", false]], "percentage_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[421, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", false]], "phase (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[288, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", false]], "phase (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[327, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase", false]], "pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[246, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", false]], "pin_groups (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[678, "pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", false]], "pin_number (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[247, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", false]], "pingroups (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[248, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", false]], "pingroups (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[643, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", false]], "pinlist (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[45, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", false]], "pins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[46, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", false]], "pins (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[644, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", false]], "place() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[645, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", false]], "place_a3dcomp_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[706, "pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", false]], "place_in_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[707, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", false]], "place_in_layout_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[708, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", false]], "place_instance() (pyedb.dotnet.edb_core.stackup.stackup method)": [[709, "pyedb.dotnet.edb_core.stackup.Stackup.place_instance", false]], "place_voltage_probe() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[679, "pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", false]], "placement_layer (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[47, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", false]], "placement_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[249, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", false]], "plot() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[175, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", false]], "plot() (pyedb.dotnet.edb_core.nets.edbnets method)": [[616, "pyedb.dotnet.edb_core.nets.EdbNets.plot", false]], "plot() (pyedb.dotnet.edb_core.stackup.stackup method)": [[710, "pyedb.dotnet.edb_core.stackup.Stackup.plot", false]], "points (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[343, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", false]], "points_raw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[344, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", false]], "polygon_data (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[186, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", false]], "polygons (pyedb.dotnet.edb_core.layout.edblayout property)": [[566, "pyedb.dotnet.edb_core.layout.EdbLayout.polygons", false]], "polygons_by_layer (pyedb.dotnet.edb_core.layout.edblayout property)": [[567, "pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer", false]], "position (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[250, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", false]], "positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[138, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", false]], "power (pyedb.dotnet.edb_core.nets.edbnets property)": [[617, "pyedb.dotnet.edb_core.nets.EdbNets.power", false]], "power_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[459, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", false]], "primitives (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[176, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", false]], "primitives (pyedb.dotnet.edb_core.layout.edblayout property)": [[568, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives", false]], "primitives_by_layer (pyedb.dotnet.edb_core.layout.edblayout property)": [[569, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer", false]], "primitives_by_net (pyedb.dotnet.edb_core.layout.edblayout property)": [[570, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net", false]], "probes (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[540, "pyedb.dotnet.edb_core.hfss.EdbHfss.probes", false]], "probes (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[680, "pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", false]], "process_padstack_definitions (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[422, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", false]], "project_file (pyedb.siwave.siwave property)": [[730, "pyedb.siwave.Siwave.project_file", false]], "project_name (pyedb.siwave.siwave property)": [[731, "pyedb.siwave.Siwave.project_name", false]], "project_path (pyedb.siwave.siwave property)": [[732, "pyedb.siwave.Siwave.project_path", false]], "pyaedt_dir (pyedb.siwave.siwave property)": [[733, "pyedb.siwave.Siwave.pyaedt_dir", false]], "pyedb.dotnet.edb": [[10, "module-pyedb.dotnet.edb", false]], "quit_application() (pyedb.siwave.siwave method)": [[734, "pyedb.siwave.Siwave.quit_application", false]], "radiation_box (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[423, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", false]], "radius (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[345, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", false]], "read_materials() (pyedb.dotnet.edb_core.materials.materials method)": [[594, "pyedb.dotnet.edb_core.materials.Materials.read_materials", false]], "read_syslib_material() (pyedb.dotnet.edb_core.materials.materials method)": [[595, "pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", false]], "rectangles (pyedb.dotnet.edb_core.layout.edblayout property)": [[571, "pyedb.dotnet.edb_core.layout.EdbLayout.rectangles", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[289, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[328, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", false]], "refdes (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[48, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[290, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[329, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[291, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[330, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", false]], "refresh_components() (pyedb.dotnet.edb_core.components.components method)": [[103, "pyedb.dotnet.edb_core.components.Components.refresh_components", false]], "refresh_layer_collection() (pyedb.dotnet.edb_core.stackup.stackup method)": [[711, "pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", false]], "relative_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[424, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", false]], "remove_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[712, "pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", false]], "remove_pads_from_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[646, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", false]], "renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[292, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", false]], "renormalize_z0 (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[293, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", false]], "replace_rlc_by_gap_boundaries() (pyedb.dotnet.edb_core.components.components method)": [[104, "pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", false]], "res_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[49, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", false]], "residual_copper_area_per_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[713, "pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", false]], "resistors (pyedb.dotnet.edb_core.components.components property)": [[105, "pyedb.dotnet.edb_core.components.Components.resistors", false]], "results_directory (pyedb.siwave.siwave property)": [[735, "pyedb.siwave.Siwave.results_directory", false]], "return_current_distribution (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[425, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", false]], "rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[150, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", false]], "rlc_values (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[50, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", false]], "rotation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[51, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[187, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[251, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", false]], "run_dc_simulation() (pyedb.siwave.siwave method)": [[736, "pyedb.siwave.Siwave.run_dc_simulation", false]], "run_icepak_simulation() (pyedb.siwave.siwave method)": [[737, "pyedb.siwave.Siwave.run_icepak_simulation", false]], "s_param_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[52, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", false]], "save_project() (pyedb.siwave.siwave method)": [[738, "pyedb.siwave.Siwave.save_project", false]], "serial_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[151, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", false]], "set_all_antipad_value() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[647, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", false]], "set_backdrill_bottom() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[252, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", false]], "set_backdrill_top() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[253, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", false]], "set_coax_port_attributes() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[541, "pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", false]], "set_component_model() (pyedb.dotnet.edb_core.components.components method)": [[106, "pyedb.dotnet.edb_core.components.Components.set_component_model", false]], "set_component_rlc() (pyedb.dotnet.edb_core.components.components method)": [[107, "pyedb.dotnet.edb_core.components.Components.set_component_rlc", false]], "set_layer_clone() (pyedb.dotnet.edb_core.stackup.stackup method)": [[714, "pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", false]], "set_pad_property() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[648, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", false]], "set_solder_ball() (pyedb.dotnet.edb_core.components.components method)": [[108, "pyedb.dotnet.edb_core.components.Components.set_solder_ball", false]], "set_solderball() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[649, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", false]], "setup_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[392, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", false]], "shape (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[188, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", false]], "shape_to_polygon_data() (pyedb.dotnet.edb_core.layout.edblayout method)": [[572, "pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data", false]], "short_component_pins() (pyedb.dotnet.edb_core.components.components method)": [[109, "pyedb.dotnet.edb_core.components.Components.short_component_pins", false]], "shortest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[374, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", false]], "shunt_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[152, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", false]], "signal (pyedb.dotnet.edb_core.nets.edbnets property)": [[618, "pyedb.dotnet.edb_core.nets.EdbNets.signal", false]], "signal_layer_etching_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[460, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", false]], "signal_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[715, "pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", false]], "signal_layers_properties (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[461, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", false]], "signal_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[462, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", false]], "simulationconfiguration (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[379, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", false]], "simulationconfigurationac (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[394, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", false]], "simulationconfigurationbatch (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[438, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", false]], "simulationconfigurationdc (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[474, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", false]], "siwave (class in pyedb.siwave)": [[719, "pyedb.siwave.Siwave", false]], "snap_length_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[426, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", false]], "solder_ball_diameter (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[53, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", false]], "solder_ball_height (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[54, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", false]], "solder_ball_placement (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[55, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", false]], "solder_ball_shape (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[56, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", false]], "solver_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[393, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", false]], "sources (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[463, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", false]], "sources (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[542, "pyedb.dotnet.edb_core.hfss.EdbHfss.sources", false]], "sources (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[681, "pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", false]], "spice_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[57, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", false]], "split_to_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[208, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", false]], "src_dir (pyedb.siwave.siwave property)": [[739, "pyedb.siwave.Siwave.src_dir", false]], "stackup (class in pyedb.dotnet.edb_core.stackup)": [[683, "pyedb.dotnet.edb_core.stackup.Stackup", false]], "stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[716, "pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", false]], "start (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[346, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", false]], "start_azimuth (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[427, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", false]], "start_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[428, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", false]], "start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[254, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", false]], "step_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[429, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", false]], "stop_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[430, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", false]], "stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[255, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", false]], "subtract() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[375, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", false]], "sweep_interpolating (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[431, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", false]], "sweep_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[432, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", false]], "sweep_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[433, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", false]], "syslib (pyedb.dotnet.edb_core.materials.materials property)": [[596, "pyedb.dotnet.edb_core.materials.Materials.syslib", false]], "terminal (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[256, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[294, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[331, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", false]], "thickness (pyedb.dotnet.edb_core.stackup.stackup property)": [[717, "pyedb.dotnet.edb_core.stackup.Stackup.thickness", false]], "tofloat (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[113, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", false]], "top_bottom_association (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[58, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", false]], "top_bottom_association (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[257, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", false]], "tostring (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[114, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", false]], "transparency (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[123, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", false]], "trim_component_reference_size() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[543, "pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", false]], "trim_reference_size (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[464, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", false]], "truncate_airbox_at_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[465, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", false]], "type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[59, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", false]], "type (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[124, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", false]], "type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[258, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[295, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[332, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[376, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", false]], "unite() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[377, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", false]], "unite_polygons_on_layer() (pyedb.dotnet.edb_core.layout.edblayout method)": [[573, "pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer", false]], "update() (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass method)": [[125, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", false]], "update_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[718, "pyedb.dotnet.edb_core.stackup.Stackup.update_layout", false]], "update_material() (pyedb.dotnet.edb_core.materials.materials method)": [[597, "pyedb.dotnet.edb_core.materials.Materials.update_material", false]], "update_rlc_from_bom() (pyedb.dotnet.edb_core.components.components method)": [[110, "pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", false]], "upper_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[60, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", false]], "upper_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[259, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", false]], "use_airbox_horizontal_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[466, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", false]], "use_airbox_negative_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[467, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", false]], "use_airbox_positive_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[468, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", false]], "use_arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[434, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", false]], "use_default_coax_port_radial_extension (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[469, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", false]], "use_default_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[470, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", false]], "use_dielectric_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[471, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", false]], "use_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[435, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", false]], "use_pyaedt_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[472, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", false]], "use_q3d_for_dc (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[436, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", false]], "use_radiation_boundary (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[473, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", false]], "use_s_parameter_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[61, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", false]], "value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[62, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", false]], "value (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[115, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", false]], "value (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[510, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value", false]], "value_object (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[511, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", false]], "value_string (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[512, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", false]], "variable (class in pyedb.dotnet.edb_core.edb_data.variables)": [[505, "pyedb.dotnet.edb_core.edb_data.variables.Variable", false]], "version_keys (pyedb.siwave.siwave property)": [[740, "pyedb.siwave.Siwave.version_keys", false]], "vertical_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[333, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", false]], "via_layers (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[209, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", false]], "via_start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[210, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", false]], "via_stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[211, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", false]], "vias (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[650, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", false]], "voids (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[378, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", false]], "voltage_regulator_modules (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[682, "pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", false]], "waveport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[296, "pyedb.dotnet.edb_core.edb_data.ports.WavePort", false]], "xtalk_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[437, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", false]]}, "objects": {"pyedb.dotnet": [[10, 0, 0, "-", "edb"]], "pyedb.dotnet.edb_core.cell.hierarchy.component": [[11, 1, 1, "", "EDBComponent"]], "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent": [[12, 2, 1, "", "assign_rlc_model"], [13, 2, 1, "", "assign_s_param_model"], [14, 2, 1, "", "assign_spice_model"], [15, 3, 1, "", "bounding_box"], [16, 3, 1, "", "cap_value"], [17, 3, 1, "", "center"], [18, 3, 1, "", "component"], [19, 3, 1, "", "component_def"], [20, 3, 1, "", "component_instance"], [21, 3, 1, "", "component_property"], [22, 2, 1, "", "create_clearance_on_component"], [23, 2, 1, "", "create_package_def"], [24, 2, 1, "", "delete"], [25, 3, 1, "", "enabled"], [26, 3, 1, "", "id"], [27, 3, 1, "", "ind_value"], [28, 3, 1, "", "is_enabled"], [29, 3, 1, "", "is_null"], [30, 3, 1, "", "is_parallel_rlc"], [31, 3, 1, "", "is_top_mounted"], [32, 3, 1, "", "layout_instance"], [33, 3, 1, "", "location"], [34, 3, 1, "", "lower_elevation"], [35, 3, 1, "", "model"], [36, 3, 1, "", "model_type"], [37, 3, 1, "", "name"], [38, 3, 1, "", "net"], [39, 3, 1, "", "netlist_model"], [40, 3, 1, "", "nets"], [41, 3, 1, "", "numpins"], [42, 3, 1, "", "package_def"], [43, 3, 1, "", "part_name"], [44, 3, 1, "", "partname"], [45, 3, 1, "", "pinlist"], [46, 3, 1, "", "pins"], [47, 3, 1, "", "placement_layer"], [48, 3, 1, "", "refdes"], [49, 3, 1, "", "res_value"], [50, 3, 1, "", "rlc_values"], [51, 3, 1, "", "rotation"], [52, 3, 1, "", "s_param_model"], [53, 3, 1, "", "solder_ball_diameter"], [54, 3, 1, "", "solder_ball_height"], [55, 3, 1, "", "solder_ball_placement"], [56, 3, 1, "", "solder_ball_shape"], [57, 3, 1, "", "spice_model"], [58, 3, 1, "", "top_bottom_association"], [59, 3, 1, "", "type"], [60, 3, 1, "", "upper_elevation"], [61, 2, 1, "", "use_s_parameter_model"], [62, 3, 1, "", "value"]], "pyedb.dotnet.edb_core.components": [[63, 1, 1, "", "Components"]], "pyedb.dotnet.edb_core.components.Components": [[64, 3, 1, "", "ICs"], [65, 3, 1, "", "IOs"], [66, 3, 1, "", "Others"], [67, 2, 1, "", "add_port_on_rlc_component"], [68, 2, 1, "", "add_rlc_boundary"], [69, 3, 1, "", "capacitors"], [70, 3, 1, "", "components_by_partname"], [71, 2, 1, "", "create"], [72, 2, 1, "", "create_pingroup_from_pins"], [73, 2, 1, "", "create_port_on_component"], [74, 2, 1, "", "create_port_on_pins"], [75, 2, 1, "", "create_rlc_component"], [76, 2, 1, "", "create_source_on_component"], [77, 2, 1, "", "deactivate_rlc_component"], [78, 3, 1, "", "definitions"], [79, 2, 1, "", "delete"], [80, 2, 1, "", "delete_single_pin_rlc"], [81, 2, 1, "", "disable_rlc_component"], [82, 2, 1, "", "export_bom"], [83, 2, 1, "", "export_definition"], [84, 2, 1, "", "find_by_reference_designator"], [85, 2, 1, "", "get_aedt_pin_name"], [86, 2, 1, "", "get_component_by_name"], [87, 2, 1, "", "get_component_net_connection_info"], [88, 2, 1, "", "get_component_placement_vector"], [89, 2, 1, "", "get_components_from_nets"], [90, 2, 1, "", "get_nets_from_pin_list"], [91, 2, 1, "", "get_pin_from_component"], [92, 2, 1, "", "get_pin_position"], [93, 2, 1, "", "get_pins"], [94, 2, 1, "", "get_pins_name_from_net"], [95, 2, 1, "", "get_rats"], [96, 2, 1, "", "get_solder_ball_height"], [97, 2, 1, "", "get_through_resistor_list"], [98, 2, 1, "", "import_bom"], [99, 2, 1, "", "import_definition"], [100, 3, 1, "", "inductors"], [101, 3, 1, "", "instances"], [102, 3, 1, "", "nport_comp_definition"], [103, 2, 1, "", "refresh_components"], [104, 2, 1, "", "replace_rlc_by_gap_boundaries"], [105, 3, 1, "", "resistors"], [106, 2, 1, "", "set_component_model"], [107, 2, 1, "", "set_component_rlc"], [108, 2, 1, "", "set_solder_ball"], [109, 2, 1, "", "short_component_pins"], [110, 2, 1, "", "update_rlc_from_bom"]], "pyedb.dotnet.edb_core.edb_data.edbvalue": [[111, 1, 1, "", "EdbValue"]], "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue": [[112, 3, 1, "", "name"], [113, 3, 1, "", "tofloat"], [114, 3, 1, "", "tostring"], [115, 3, 1, "", "value"]], "pyedb.dotnet.edb_core.edb_data.layer_data": [[116, 1, 1, "", "LayerEdbClass"]], "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass": [[117, 3, 1, "", "color"], [118, 3, 1, "", "fill_material"], [119, 3, 1, "", "id"], [120, 3, 1, "", "is_stackup_layer"], [121, 3, 1, "", "is_via_layer"], [122, 3, 1, "", "name"], [123, 3, 1, "", "transparency"], [124, 3, 1, "", "type"], [125, 2, 1, "", "update"]], "pyedb.dotnet.edb_core.edb_data.nets_data": [[126, 1, 1, "", "EDBDifferentialPairData"], [139, 1, 1, "", "EDBExtendedNetData"], [153, 1, 1, "", "EDBNetClassData"], [161, 1, 1, "", "EDBNetsData"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData": [[127, 2, 1, "", "add_net"], [128, 3, 1, "", "api_class"], [129, 2, 1, "", "api_create"], [130, 3, 1, "", "api_negative_net"], [131, 3, 1, "", "api_nets"], [132, 3, 1, "", "api_positive_net"], [133, 2, 1, "", "delete"], [134, 2, 1, "", "find_by_name"], [135, 3, 1, "", "is_null"], [136, 3, 1, "", "name"], [137, 3, 1, "", "negative_net"], [138, 3, 1, "", "positive_net"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData": [[140, 2, 1, "", "add_net"], [141, 3, 1, "", "api_class"], [142, 2, 1, "", "api_create"], [143, 3, 1, "", "api_nets"], [144, 3, 1, "", "components"], [145, 2, 1, "", "delete"], [146, 2, 1, "", "find_by_name"], [147, 3, 1, "", "is_null"], [148, 3, 1, "", "name"], [149, 3, 1, "", "nets"], [150, 3, 1, "", "rlc"], [151, 3, 1, "", "serial_rlc"], [152, 3, 1, "", "shunt_rlc"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData": [[154, 2, 1, "", "add_net"], [155, 2, 1, "", "api_create"], [156, 3, 1, "", "api_nets"], [157, 2, 1, "", "delete"], [158, 3, 1, "", "is_null"], [159, 3, 1, "", "name"], [160, 3, 1, "", "nets"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData": [[162, 3, 1, "", "api_class"], [163, 3, 1, "", "api_object"], [164, 3, 1, "", "components"], [165, 2, 1, "", "create"], [166, 2, 1, "", "delete"], [167, 3, 1, "", "extended_net"], [168, 2, 1, "", "find_by_name"], [169, 2, 1, "", "find_dc_short"], [170, 2, 1, "", "get_smallest_trace_width"], [171, 3, 1, "", "is_null"], [172, 3, 1, "", "is_power_ground"], [173, 3, 1, "", "name"], [174, 3, 1, "", "padstack_instances"], [175, 2, 1, "", "plot"], [176, 3, 1, "", "primitives"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data": [[177, 1, 1, "", "EDBPadProperties"], [189, 1, 1, "", "EDBPadstack"], [212, 1, 1, "", "EDBPadstackInstance"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties": [[178, 3, 1, "", "geometry_type"], [179, 2, 1, "", "int_to_geometry_type"], [180, 2, 1, "", "int_to_pad_type"], [181, 3, 1, "", "offset_x"], [182, 3, 1, "", "offset_y"], [183, 3, 1, "", "parameters"], [184, 3, 1, "", "parameters_values"], [185, 3, 1, "", "parameters_values_string"], [186, 3, 1, "", "polygon_data"], [187, 3, 1, "", "rotation"], [188, 3, 1, "", "shape"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack": [[190, 2, 1, "", "convert_to_3d_microvias"], [191, 3, 1, "", "hole_diameter"], [192, 3, 1, "", "hole_diameter_string"], [193, 3, 1, "", "hole_finished_size"], [194, 3, 1, "", "hole_offset_x"], [195, 3, 1, "", "hole_offset_y"], [196, 3, 1, "", "hole_parameters"], [197, 3, 1, "", "hole_params"], [198, 3, 1, "", "hole_plating_ratio"], [199, 3, 1, "", "hole_plating_thickness"], [200, 3, 1, "", "hole_properties"], [201, 3, 1, "", "hole_range"], [202, 3, 1, "", "hole_rotation"], [203, 3, 1, "", "hole_type"], [204, 3, 1, "", "instances"], [205, 3, 1, "", "material"], [206, 3, 1, "", "name"], [207, 3, 1, "", "padstack_instances"], [208, 2, 1, "", "split_to_microvias"], [209, 3, 1, "", "via_layers"], [210, 3, 1, "", "via_start_layer"], [211, 3, 1, "", "via_stop_layer"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance": [[213, 3, 1, "", "aedt_name"], [214, 3, 1, "", "backdrill_bottom"], [215, 3, 1, "", "backdrill_top"], [216, 3, 1, "", "bounding_box"], [217, 3, 1, "", "component"], [218, 3, 1, "", "component_pin"], [219, 2, 1, "", "create_coax_port"], [220, 2, 1, "", "create_port"], [221, 2, 1, "", "create_rectangle_in_pad"], [222, 2, 1, "", "create_terminal"], [223, 3, 1, "", "dcir_equipotential_region"], [224, 2, 1, "", "delete"], [225, 2, 1, "", "get_connected_object_id_set"], [226, 2, 1, "", "get_connected_objects"], [227, 2, 1, "", "get_reference_pins"], [228, 2, 1, "", "get_terminal"], [229, 3, 1, "", "id"], [230, 2, 1, "", "in_polygon"], [231, 2, 1, "", "in_voids"], [232, 3, 1, "", "is_null"], [233, 3, 1, "", "is_pin"], [234, 3, 1, "", "is_void"], [235, 3, 1, "", "layer"], [236, 3, 1, "", "layer_name"], [237, 3, 1, "", "layer_range_names"], [238, 3, 1, "", "lower_elevation"], [239, 3, 1, "", "metal_volume"], [240, 3, 1, "", "name"], [241, 3, 1, "", "net"], [242, 3, 1, "", "net_name"], [243, 3, 1, "", "object_instance"], [244, 3, 1, "", "padstack_definition"], [245, 2, 1, "", "parametrize_position"], [246, 3, 1, "", "pin"], [247, 3, 1, "", "pin_number"], [248, 3, 1, "", "pingroups"], [249, 3, 1, "", "placement_layer"], [250, 3, 1, "", "position"], [251, 3, 1, "", "rotation"], [252, 2, 1, "", "set_backdrill_bottom"], [253, 2, 1, "", "set_backdrill_top"], [254, 3, 1, "", "start_layer"], [255, 3, 1, "", "stop_layer"], [256, 3, 1, "", "terminal"], [257, 3, 1, "", "top_bottom_association"], [258, 3, 1, "", "type"], [259, 3, 1, "", "upper_elevation"]], "pyedb.dotnet.edb_core.edb_data.ports": [[260, 1, 1, "", "GapPort"], [296, 1, 1, "", "WavePort"]], "pyedb.dotnet.edb_core.edb_data.ports.GapPort": [[261, 3, 1, "", "boundary_type"], [262, 3, 1, "", "bounding_box"], [263, 3, 1, "", "component"], [264, 2, 1, "", "couple_ports"], [265, 3, 1, "", "deembed"], [266, 2, 1, "", "delete"], [267, 3, 1, "", "do_renormalize"], [268, 2, 1, "", "get_edge_terminal_reference_primitive"], [269, 2, 1, "", "get_pad_edge_terminal_reference_pin"], [270, 2, 1, "", "get_padstack_terminal_reference_pin"], [271, 2, 1, "", "get_pin_group_terminal_reference_pin"], [272, 2, 1, "", "get_point_terminal_reference_primitive"], [273, 3, 1, "", "hfss_type"], [274, 3, 1, "", "id"], [275, 3, 1, "", "impedance"], [276, 3, 1, "", "is_circuit_port"], [277, 3, 1, "", "is_current_source"], [278, 3, 1, "", "is_null"], [279, 3, 1, "", "is_port"], [280, 3, 1, "", "is_reference_terminal"], [281, 3, 1, "", "is_voltage_source"], [282, 3, 1, "", "layer"], [283, 3, 1, "", "location"], [284, 3, 1, "", "magnitude"], [285, 3, 1, "", "name"], [286, 3, 1, "", "net"], [287, 3, 1, "", "net_name"], [288, 3, 1, "", "phase"], [289, 3, 1, "", "ref_terminal"], [290, 3, 1, "", "reference_net_name"], [291, 3, 1, "", "reference_object"], [292, 3, 1, "", "renormalize"], [293, 3, 1, "", "renormalize_z0"], [294, 3, 1, "", "terminal_type"], [295, 3, 1, "", "type"]], "pyedb.dotnet.edb_core.edb_data.ports.WavePort": [[297, 3, 1, "", "boundary_type"], [298, 3, 1, "", "bounding_box"], [299, 3, 1, "", "component"], [300, 2, 1, "", "couple_ports"], [301, 3, 1, "", "deembed"], [302, 3, 1, "", "deembed_length"], [303, 2, 1, "", "delete"], [304, 3, 1, "", "do_renormalize"], [305, 2, 1, "", "get_edge_terminal_reference_primitive"], [306, 2, 1, "", "get_pad_edge_terminal_reference_pin"], [307, 2, 1, "", "get_padstack_terminal_reference_pin"], [308, 2, 1, "", "get_pin_group_terminal_reference_pin"], [309, 2, 1, "", "get_point_terminal_reference_primitive"], [310, 3, 1, "", "hfss_type"], [311, 3, 1, "", "horizontal_extent_factor"], [312, 3, 1, "", "id"], [313, 3, 1, "", "impedance"], [314, 3, 1, "", "is_circuit_port"], [315, 3, 1, "", "is_current_source"], [316, 3, 1, "", "is_null"], [317, 3, 1, "", "is_port"], [318, 3, 1, "", "is_reference_terminal"], [319, 3, 1, "", "is_voltage_source"], [320, 3, 1, "", "layer"], [321, 3, 1, "", "location"], [322, 3, 1, "", "magnitude"], [323, 3, 1, "", "name"], [324, 3, 1, "", "net"], [325, 3, 1, "", "net_name"], [326, 3, 1, "", "pec_launch_width"], [327, 3, 1, "", "phase"], [328, 3, 1, "", "ref_terminal"], [329, 3, 1, "", "reference_net_name"], [330, 3, 1, "", "reference_object"], [331, 3, 1, "", "terminal_type"], [332, 3, 1, "", "type"], [333, 3, 1, "", "vertical_extent_factor"]], "pyedb.dotnet.edb_core.edb_data.primitives_data": [[334, 1, 1, "", "EDBArcs"], [347, 1, 1, "", "EDBPrimitives"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs": [[335, 3, 1, "", "center"], [336, 3, 1, "", "end"], [337, 3, 1, "", "height"], [338, 3, 1, "", "is_ccw"], [339, 3, 1, "", "is_point"], [340, 3, 1, "", "is_segment"], [341, 3, 1, "", "length"], [342, 3, 1, "", "mid_point"], [343, 3, 1, "", "points"], [344, 3, 1, "", "points_raw"], [345, 3, 1, "", "radius"], [346, 3, 1, "", "start"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives": [[348, 3, 1, "", "arcs"], [349, 2, 1, "", "area"], [350, 3, 1, "", "bbox"], [351, 3, 1, "", "bounding_box"], [352, 3, 1, "", "center"], [353, 3, 1, "", "component"], [354, 2, 1, "", "convert_to_polygon"], [355, 2, 1, "", "delete"], [356, 2, 1, "", "get_closest_arc_midpoint"], [357, 2, 1, "", "get_closest_point"], [358, 2, 1, "", "get_connected_object_id_set"], [359, 2, 1, "", "get_connected_objects"], [360, 3, 1, "", "id"], [361, 2, 1, "", "intersect"], [362, 2, 1, "", "intersection_type"], [363, 2, 1, "", "is_arc"], [364, 2, 1, "", "is_intersecting"], [365, 3, 1, "", "is_negative"], [366, 3, 1, "", "is_null"], [367, 3, 1, "", "is_void"], [368, 3, 1, "", "layer"], [369, 3, 1, "", "layer_name"], [370, 3, 1, "", "longest_arc"], [371, 3, 1, "", "name"], [372, 3, 1, "", "net"], [373, 3, 1, "", "net_name"], [374, 3, 1, "", "shortest_arc"], [375, 2, 1, "", "subtract"], [376, 3, 1, "", "type"], [377, 2, 1, "", "unite"], [378, 3, 1, "", "voids"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration": [[379, 1, 1, "", "SimulationConfiguration"], [394, 1, 1, "", "SimulationConfigurationAc"], [438, 1, 1, "", "SimulationConfigurationBatch"], [474, 1, 1, "", "SimulationConfigurationDc"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration": [[380, 3, 1, "", "ac_settings"], [381, 2, 1, "", "add_current_source"], [382, 2, 1, "", "add_dc_ground_source_term"], [383, 2, 1, "", "add_rlc"], [384, 2, 1, "", "add_voltage_source"], [385, 3, 1, "", "batch_solve_settings"], [386, 2, 1, "", "build_simulation_project"], [387, 3, 1, "", "dc_settings"], [388, 2, 1, "", "export_json"], [389, 3, 1, "", "filename"], [390, 2, 1, "", "import_json"], [391, 3, 1, "", "open_edb_after_build"], [392, 3, 1, "", "setup_name"], [393, 3, 1, "", "solver_type"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc": [[395, 3, 1, "", "adaptive_high_freq"], [396, 3, 1, "", "adaptive_low_freq"], [397, 3, 1, "", "adaptive_type"], [398, 3, 1, "", "arc_angle"], [399, 3, 1, "", "arc_to_chord_error"], [400, 3, 1, "", "basis_order"], [401, 3, 1, "", "decade_count"], [402, 3, 1, "", "defeature_abs_length"], [403, 3, 1, "", "defeature_layout"], [404, 3, 1, "", "do_lambda_refinement"], [405, 3, 1, "", "enforce_causality"], [406, 3, 1, "", "enforce_passivity"], [407, 3, 1, "", "ignore_non_functional_pads"], [408, 3, 1, "", "include_inter_plane_coupling"], [409, 3, 1, "", "max_arc_points"], [410, 3, 1, "", "max_mag_delta_s"], [411, 3, 1, "", "max_num_passes"], [412, 3, 1, "", "max_suf_dev"], [413, 3, 1, "", "mesh_freq"], [414, 3, 1, "", "mesh_sizefactor"], [415, 3, 1, "", "min_num_passes"], [416, 3, 1, "", "min_pad_area_to_mesh"], [417, 3, 1, "", "min_plane_area_to_mesh"], [418, 3, 1, "", "min_void_area"], [419, 3, 1, "", "minimum_void_surface"], [420, 3, 1, "", "passivity_tolerance"], [421, 3, 1, "", "percentage_error_z0"], [422, 3, 1, "", "process_padstack_definitions"], [423, 3, 1, "", "radiation_box"], [424, 3, 1, "", "relative_error"], [425, 3, 1, "", "return_current_distribution"], [426, 3, 1, "", "snap_length_threshold"], [427, 3, 1, "", "start_azimuth"], [428, 3, 1, "", "start_freq"], [429, 3, 1, "", "step_freq"], [430, 3, 1, "", "stop_freq"], [431, 3, 1, "", "sweep_interpolating"], [432, 3, 1, "", "sweep_name"], [433, 3, 1, "", "sweep_type"], [434, 3, 1, "", "use_arc_to_chord_error"], [435, 3, 1, "", "use_error_z0"], [436, 3, 1, "", "use_q3d_for_dc"], [437, 3, 1, "", "xtalk_threshold"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch": [[439, 3, 1, "", "add_frequency_sweep"], [440, 2, 1, "", "add_source"], [441, 3, 1, "", "airbox_horizontal_extent"], [442, 3, 1, "", "airbox_negative_vertical_extent"], [443, 3, 1, "", "airbox_positive_vertical_extent"], [444, 3, 1, "", "coax_solder_ball_diameter"], [445, 3, 1, "", "components"], [446, 3, 1, "", "coplanar_instances"], [447, 3, 1, "", "cutout_subdesign_expansion"], [448, 3, 1, "", "cutout_subdesign_round_corner"], [449, 3, 1, "", "cutout_subdesign_type"], [450, 3, 1, "", "dielectric_extent"], [451, 3, 1, "", "do_cutout_subdesign"], [452, 3, 1, "", "do_pingroup"], [453, 3, 1, "", "etching_factor_instances"], [454, 3, 1, "", "generate_excitations"], [455, 3, 1, "", "generate_solder_balls"], [456, 3, 1, "", "honor_user_dielectric"], [457, 3, 1, "", "include_only_selected_nets"], [458, 3, 1, "", "output_aedb"], [459, 3, 1, "", "power_nets"], [460, 3, 1, "", "signal_layer_etching_instances"], [461, 3, 1, "", "signal_layers_properties"], [462, 3, 1, "", "signal_nets"], [463, 3, 1, "", "sources"], [464, 3, 1, "", "trim_reference_size"], [465, 3, 1, "", "truncate_airbox_at_ground"], [466, 3, 1, "", "use_airbox_horizontal_extent_multiple"], [467, 3, 1, "", "use_airbox_negative_vertical_extent_multiple"], [468, 3, 1, "", "use_airbox_positive_vertical_extent_multiple"], [469, 3, 1, "", "use_default_coax_port_radial_extension"], [470, 3, 1, "", "use_default_cutout"], [471, 3, 1, "", "use_dielectric_extent_multiple"], [472, 3, 1, "", "use_pyaedt_cutout"], [473, 3, 1, "", "use_radiation_boundary"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc": [[475, 3, 1, "", "dc_compute_inductance"], [476, 3, 1, "", "dc_contact_radius"], [477, 3, 1, "", "dc_error_energy"], [478, 3, 1, "", "dc_export_thermal_data"], [479, 3, 1, "", "dc_full_report_path"], [480, 3, 1, "", "dc_icepak_temp_file"], [481, 3, 1, "", "dc_import_thermal_data"], [482, 3, 1, "", "dc_max_init_mesh_edge_length"], [483, 3, 1, "", "dc_max_num_pass"], [484, 3, 1, "", "dc_mesh_bondwires"], [485, 3, 1, "", "dc_mesh_vias"], [486, 3, 1, "", "dc_min_num_pass"], [487, 3, 1, "", "dc_min_plane_area_to_mesh"], [488, 3, 1, "", "dc_min_void_area_to_mesh"], [489, 3, 1, "", "dc_num_bondwire_sides"], [490, 3, 1, "", "dc_num_via_sides"], [491, 3, 1, "", "dc_per_pin_res_path"], [492, 3, 1, "", "dc_per_pin_use_pin_format"], [493, 3, 1, "", "dc_percent_local_refinement"], [494, 3, 1, "", "dc_perform_adaptive_refinement"], [495, 3, 1, "", "dc_plot_jv"], [496, 3, 1, "", "dc_refine_bondwires"], [497, 3, 1, "", "dc_refine_vias"], [498, 3, 1, "", "dc_report_config_file"], [499, 3, 1, "", "dc_report_show_Active_devices"], [500, 3, 1, "", "dc_slide_position"], [501, 3, 1, "", "dc_source_terms_to_ground"], [502, 3, 1, "", "dc_use_dc_custom_settings"], [503, 3, 1, "", "dc_use_loop_res_for_per_pin"], [504, 3, 1, "", "dc_via_report_path"]], "pyedb.dotnet.edb_core.edb_data.variables": [[505, 1, 1, "", "Variable"]], "pyedb.dotnet.edb_core.edb_data.variables.Variable": [[506, 2, 1, "", "delete"], [507, 3, 1, "", "description"], [508, 3, 1, "", "is_parameter"], [509, 3, 1, "", "name"], [510, 3, 1, "", "value"], [511, 3, 1, "", "value_object"], [512, 3, 1, "", "value_string"]], "pyedb.dotnet.edb_core.hfss": [[513, 1, 1, "", "EdbHfss"]], "pyedb.dotnet.edb_core.hfss.EdbHfss": [[514, 2, 1, "", "configure_hfss_analysis_setup"], [515, 2, 1, "", "configure_hfss_extents"], [516, 2, 1, "", "create_bundle_wave_port"], [517, 2, 1, "", "create_circuit_port_on_net"], [518, 2, 1, "", "create_circuit_port_on_pin"], [519, 2, 1, "", "create_coax_port_on_component"], [520, 2, 1, "", "create_current_source_on_net"], [521, 2, 1, "", "create_current_source_on_pin"], [522, 2, 1, "", "create_differential_wave_port"], [523, 2, 1, "", "create_edge_port_horizontal"], [524, 2, 1, "", "create_edge_port_on_polygon"], [525, 2, 1, "", "create_edge_port_vertical"], [526, 2, 1, "", "create_hfss_ports_on_padstack"], [527, 2, 1, "", "create_lumped_port_on_net"], [528, 2, 1, "", "create_resistor_on_pin"], [529, 2, 1, "", "create_rlc_boundary_on_pins"], [530, 2, 1, "", "create_vertical_circuit_port_on_clipped_traces"], [531, 2, 1, "", "create_voltage_source_on_net"], [532, 2, 1, "", "create_voltage_source_on_pin"], [533, 2, 1, "", "create_wave_port"], [534, 3, 1, "", "excitations"], [535, 2, 1, "", "get_layout_bounding_box"], [536, 2, 1, "", "get_ports_number"], [537, 2, 1, "", "get_trace_width_for_traces_with_ports"], [538, 3, 1, "", "hfss_extent_info"], [539, 2, 1, "", "layout_defeaturing"], [540, 3, 1, "", "probes"], [541, 2, 1, "", "set_coax_port_attributes"], [542, 3, 1, "", "sources"], [543, 2, 1, "", "trim_component_reference_size"]], "pyedb.dotnet.edb_core.layout": [[544, 1, 1, "", "EdbLayout"]], "pyedb.dotnet.edb_core.layout.EdbLayout": [[545, 2, 1, "", "add_void"], [546, 3, 1, "", "circles"], [547, 2, 1, "", "create_circle"], [548, 2, 1, "", "create_polygon"], [549, 2, 1, "", "create_rectangle"], [550, 2, 1, "", "create_trace"], [551, 3, 1, "", "db"], [552, 2, 1, "", "defeature_polygon"], [553, 2, 1, "", "delete_primitives"], [554, 2, 1, "", "fix_circle_void_for_clipping"], [555, 2, 1, "", "get_layout_statistics"], [556, 2, 1, "", "get_polygon_bounding_box"], [557, 2, 1, "", "get_polygon_points"], [558, 2, 1, "", "get_polygons_by_layer"], [559, 2, 1, "", "get_primitive"], [560, 2, 1, "", "get_primitive_by_layer_and_point"], [561, 2, 1, "", "get_primitives"], [562, 3, 1, "", "layers"], [563, 2, 1, "", "parametrize_polygon"], [564, 2, 1, "", "parametrize_trace_width"], [565, 3, 1, "", "paths"], [566, 3, 1, "", "polygons"], [567, 3, 1, "", "polygons_by_layer"], [568, 3, 1, "", "primitives"], [569, 3, 1, "", "primitives_by_layer"], [570, 3, 1, "", "primitives_by_net"], [571, 3, 1, "", "rectangles"], [572, 2, 1, "", "shape_to_polygon_data"], [573, 2, 1, "", "unite_polygons_on_layer"]], "pyedb.dotnet.edb_core.layout_validation": [[574, 1, 1, "", "LayoutValidation"]], "pyedb.dotnet.edb_core.layout_validation.LayoutValidation": [[575, 2, 1, "", "dc_shorts"], [576, 2, 1, "", "disjoint_nets"], [577, 2, 1, "", "fix_self_intersections"], [578, 2, 1, "", "illegal_net_names"], [579, 2, 1, "", "illegal_rlc_values"]], "pyedb.dotnet.edb_core.materials": [[580, 1, 1, "", "Materials"]], "pyedb.dotnet.edb_core.materials.Materials": [[581, 2, 1, "", "add_conductor_material"], [582, 2, 1, "", "add_debye_material"], [583, 2, 1, "", "add_dielectric_material"], [584, 2, 1, "", "add_djordjevicsarkar_dielectric"], [585, 2, 1, "", "add_material"], [586, 2, 1, "", "add_multipole_debye_material"], [587, 2, 1, "", "delete_material"], [588, 2, 1, "", "duplicate"], [589, 2, 1, "", "iterate_materials_in_amat"], [590, 2, 1, "", "load_amat"], [591, 2, 1, "", "load_material"], [592, 2, 1, "", "material_property_to_id"], [593, 3, 1, "", "materials"], [594, 2, 1, "", "read_materials"], [595, 2, 1, "", "read_syslib_material"], [596, 3, 1, "", "syslib"], [597, 2, 1, "", "update_material"]], "pyedb.dotnet.edb_core.nets": [[598, 1, 1, "", "EdbNets"]], "pyedb.dotnet.edb_core.nets.EdbNets": [[599, 2, 1, "", "classify_nets"], [600, 3, 1, "", "components_by_nets"], [601, 3, 1, "", "db"], [602, 2, 1, "", "delete"], [603, 2, 1, "", "eligible_power_nets"], [604, 2, 1, "", "find_or_create_net"], [605, 2, 1, "", "generate_extended_nets"], [606, 2, 1, "", "get_dcconnected_net_list"], [607, 2, 1, "", "get_net_by_name"], [608, 2, 1, "", "get_plot_data"], [609, 2, 1, "", "get_powertree"], [610, 2, 1, "", "is_net_in_component"], [611, 2, 1, "", "is_power_gound_net"], [612, 2, 1, "", "merge_nets_polygons"], [613, 3, 1, "", "netlist"], [614, 3, 1, "", "nets"], [615, 3, 1, "", "nets_by_components"], [616, 2, 1, "", "plot"], [617, 3, 1, "", "power"], [618, 3, 1, "", "signal"]], "pyedb.dotnet.edb_core.padstack": [[619, 1, 1, "", "EdbPadstacks"]], "pyedb.dotnet.edb_core.padstack.EdbPadstacks": [[620, 2, 1, "", "check_and_fix_via_plating"], [621, 2, 1, "", "create"], [622, 2, 1, "", "create_circular_padstack"], [623, 2, 1, "", "create_coax_port"], [624, 3, 1, "", "db"], [625, 3, 1, "", "definitions"], [626, 2, 1, "", "delete_padstack_instances"], [627, 2, 1, "", "duplicate"], [628, 2, 1, "", "find_instance_by_id"], [629, 2, 1, "", "get_instances"], [630, 2, 1, "", "get_pad_parameters"], [631, 2, 1, "", "get_padstack_instance_by_net_name"], [632, 2, 1, "", "get_padstack_instances_intersecting_bounding_box"], [633, 2, 1, "", "get_padstack_instances_rtree_index"], [634, 2, 1, "", "get_pinlist_from_component_and_net"], [635, 2, 1, "", "get_reference_pins"], [636, 2, 1, "", "get_via_instance_from_net"], [637, 3, 1, "", "instances"], [638, 3, 1, "", "instances_by_name"], [639, 2, 1, "", "int_to_geometry_type"], [640, 2, 1, "", "int_to_pad_type"], [641, 2, 1, "", "merge_via_along_lines"], [642, 3, 1, "", "pad_type"], [643, 3, 1, "", "pingroups"], [644, 3, 1, "", "pins"], [645, 2, 1, "", "place"], [646, 2, 1, "", "remove_pads_from_padstack"], [647, 2, 1, "", "set_all_antipad_value"], [648, 2, 1, "", "set_pad_property"], [649, 2, 1, "", "set_solderball"], [650, 3, 1, "", "vias"]], "pyedb.dotnet.edb_core.siwave": [[651, 1, 1, "", "EdbSiwave"]], "pyedb.dotnet.edb_core.siwave.EdbSiwave": [[652, 2, 1, "", "add_siwave_dc_analysis"], [653, 2, 1, "", "add_siwave_syz_analysis"], [654, 2, 1, "", "configure_siw_analysis_setup"], [655, 2, 1, "", "create_circuit_port_on_net"], [656, 2, 1, "", "create_circuit_port_on_pin"], [657, 2, 1, "", "create_circuit_port_on_pin_group"], [658, 2, 1, "", "create_current_source_on_net"], [659, 2, 1, "", "create_current_source_on_pin"], [660, 2, 1, "", "create_current_source_on_pin_group"], [661, 2, 1, "", "create_dc_terminal"], [662, 2, 1, "", "create_exec_file"], [663, 2, 1, "", "create_impedance_crosstalk_scan"], [664, 2, 1, "", "create_pin_group"], [665, 2, 1, "", "create_pin_group_on_net"], [666, 2, 1, "", "create_pin_group_terminal"], [667, 2, 1, "", "create_port_between_pin_and_layer"], [668, 2, 1, "", "create_resistor_on_pin"], [669, 2, 1, "", "create_rlc_component"], [670, 2, 1, "", "create_voltage_probe_on_pin_group"], [671, 2, 1, "", "create_voltage_source_on_net"], [672, 2, 1, "", "create_voltage_source_on_pin"], [673, 2, 1, "", "create_voltage_source_on_pin_group"], [674, 2, 1, "", "create_vrm_module"], [675, 3, 1, "", "excitations"], [676, 3, 1, "", "icepak_component_file"], [677, 3, 1, "", "icepak_use_minimal_comp_defaults"], [678, 3, 1, "", "pin_groups"], [679, 2, 1, "", "place_voltage_probe"], [680, 3, 1, "", "probes"], [681, 3, 1, "", "sources"], [682, 3, 1, "", "voltage_regulator_modules"]], "pyedb.dotnet.edb_core.stackup": [[683, 1, 1, "", "Stackup"]], "pyedb.dotnet.edb_core.stackup.Stackup": [[684, 2, 1, "", "add_document_layer"], [685, 2, 1, "", "add_layer"], [686, 2, 1, "", "add_layer_above"], [687, 2, 1, "", "add_layer_below"], [688, 2, 1, "", "add_layer_bottom"], [689, 2, 1, "", "add_layer_top"], [690, 2, 1, "", "add_outline_layer"], [691, 2, 1, "", "adjust_solder_dielectrics"], [692, 3, 1, "", "all_layers"], [693, 2, 1, "", "create_symmetric_stackup"], [694, 3, 1, "", "dielectric_layers"], [695, 2, 1, "", "export"], [696, 2, 1, "", "flip_design"], [697, 2, 1, "", "get_layout_thickness"], [698, 3, 1, "", "layer_types"], [699, 3, 1, "", "layers"], [700, 3, 1, "", "layers_by_id"], [701, 2, 1, "", "limits"], [702, 2, 1, "", "load"], [703, 3, 1, "", "mode"], [704, 3, 1, "", "non_stackup_layers"], [705, 3, 1, "", "num_layers"], [706, 2, 1, "", "place_a3dcomp_3d_placement"], [707, 2, 1, "", "place_in_layout"], [708, 2, 1, "", "place_in_layout_3d_placement"], [709, 2, 1, "", "place_instance"], [710, 2, 1, "", "plot"], [711, 2, 1, "", "refresh_layer_collection"], [712, 2, 1, "", "remove_layer"], [713, 2, 1, "", "residual_copper_area_per_layer"], [714, 2, 1, "", "set_layer_clone"], [715, 3, 1, "", "signal_layers"], [716, 3, 1, "", "stackup_layers"], [717, 3, 1, "", "thickness"], [718, 2, 1, "", "update_layout"]], "pyedb.siwave": [[719, 1, 1, "", "Siwave"]], "pyedb.siwave.Siwave": [[720, 2, 1, "", "close_project"], [721, 3, 1, "", "current_version"], [722, 2, 1, "", "export_dc_simulation_report"], [723, 2, 1, "", "export_element_data"], [724, 2, 1, "", "export_icepak_project"], [725, 2, 1, "", "export_siwave_report"], [726, 3, 1, "", "icepak"], [727, 3, 1, "", "lock_file"], [728, 2, 1, "", "open_project"], [729, 3, 1, "", "oproject"], [730, 3, 1, "", "project_file"], [731, 3, 1, "", "project_name"], [732, 3, 1, "", "project_path"], [733, 3, 1, "", "pyaedt_dir"], [734, 2, 1, "", "quit_application"], [735, 3, 1, "", "results_directory"], [736, 2, 1, "", "run_dc_simulation"], [737, 2, 1, "", "run_icepak_simulation"], [738, 2, 1, "", "save_project"], [739, 3, 1, "", "src_dir"], [740, 3, 1, "", "version_keys"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "terms": {"": [13, 15, 52, 61, 118, 262, 298, 351, 410, 563, 634, 722, 725, 742, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 760, 761, 766, 767], "0": [6, 8, 22, 58, 73, 74, 98, 108, 109, 123, 179, 180, 190, 212, 219, 221, 227, 252, 253, 257, 334, 336, 337, 346, 347, 362, 379, 381, 382, 383, 384, 477, 493, 500, 501, 516, 518, 520, 521, 522, 524, 525, 528, 529, 531, 532, 533, 552, 556, 557, 576, 586, 603, 606, 620, 621, 630, 635, 639, 640, 641, 645, 646, 648, 649, 653, 656, 658, 659, 660, 667, 668, 669, 671, 672, 673, 674, 703, 706, 707, 708, 709, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 772, 774, 775, 778, 779, 786, 787, 793, 796, 798, 800, 801], "00": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "000": 748, "000000": 754, "0000000000000001e": 747, "0000001": 801, "000017": 763, "00002": 763, "000035": 763, "00005": 763, "000088": 763, "0001": [22, 649], "00010": 763, "000100": 763, "0002": 801, "0005": 800, "001": [109, 379, 552, 606, 673, 774, 800], "001000": 763, "0015": 745, "002": 755, "003": 747, "005": [227, 635, 641, 748], "00m": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 757, 758, 759, 760, 761], "01": [8, 379, 749, 775, 801], "015620946884155273": 745, "015628576278686523": 744, "016": [753, 759], "016139999279999998": 751, "017mm": [749, 758], "018999997560000002": 754, "018999997560000006": 754, "01899999756000001": 754, "018999997560000013": 754, "018999997560000016": 754, "01ghz": 760, "01mm": [516, 522, 525, 533], "02": [379, 745, 748, 800], "025": 586, "026": 586, "027": 586, "028": 586, "029": 586, "030": 586, "03125166893005371": 746, "03125596046447754": 748, "03255000329": 751, "032913065429500635": 761, "03304936212434437": 761, "03325121473069015": 761, "03333596078699098": 761, "03335982576863652": 761, "033708330282207793": 761, "034204733727292984": 761, "034713399917353435": 761, "03503044372649857": 761, "03504474631880416": 761, "04": 800, "04183735396100174": 761, "04185485402368393": 761, "046869516372680664": 751, "04692554473876953": 765, "047": 746, "04830834906256023": 761, "048318457999324806": 761, "04833361583642983": 761, "0483566751331029": 761, "04839217710290317": 761, "048427348957554184": 761, "048476096302053164": 761, "04853182672022683": 761, "048586150580908885": 761, "048672445716054995": 761, "04868479628064163": 761, "04883555655902538": 761, "04900629973182032": 761, "04915820200547062": 761, "04935457314629638": 761, "04953634065667003": 761, "05": [763, 778, 800], "050289214965552706": 761, "05046879970844227": 761, "05067176818706848": 761, "050691511158220036": 761, "050769291930717185": 761, "050887072320460844": 761, "05114842692016208": 761, "05120289468443713": 761, "05170565396058174": 761, "051806832872544235": 761, "05419999847": 751, "05e": 778, "05mm": [744, 745, 748, 749, 753, 758], "06": 384, "062": 744, "06250238418579102": 747, "063": 745, "0639458794927306": 761, "0641094442946288": 761, "0643703064923304": 761, "06441781932138024": 761, "06442086996903659": 761, "06478179608814026": 761, "0648000049584815": 761, "06491330967510935": 761, "06505647431452988": 761, "06520837658818007": 761, "06643486577187402": 761, "06654755746655197": 761, "06730942192276895": 761, "06733197520160766": 761, "06738594842571934": 761, "06743856277022901": 761, "06754969080651728": 761, "06762130958381865": 761, "06764934763029656": 761, "06767288408064792": 761, "06767415242192924": 761, "06776080406509359": 761, "06797637324983577": 761, "06820646420842003": 761, "06845950802472248": 761, "06872046150414503": 761, "06875000112": 751, "0690144173068744": 761, "0692563340940017": 761, "06950305012843623": 761, "06974350703807211": 761, "06999824426118566": 761, "07": 747, "07019126140982673": 761, "07036200458262161": 761, "070486667556885": 761, "07061787855828856": 761, "07071397723210866": 761, "0710178513978896": 761, "07107143900497076": 761, "07111573906668872": 761, "07112987171313323": 761, "07113500016000002": 761, "078": 744, "08580812308064588": 761, "08581990776977562": 761, "08602704906993228": 761, "08636336408365564": 761, "08658597244333009": 761, "08667866067063877": 761, "08676294623404525": 761, "08679664168378841": 761, "08720212328418347": 761, "08735511697746182": 761, "0877047359472929": 761, "08788643646933333": 761, "0880208395789273": 761, "0882134021373534": 761, "08878659946264658": 761, "08924732876262124": 761, "08929526565270708": 761, "08937199173688463": 761, "0895555258600598": 761, "08970628997324057": 761, "0897676295798525": 761, "08978637017721422": 761, "08979166909779229": 761, "09": 669, "09016403859300909": 761, "09045063725565565": 761, "09048926753190141": 761, "09048967107082366": 761, "09058683166450263": 761, "09058693395049935": 761, "0_bom": 747, "0deg": [549, 745, 759], "0ghz": 749, "0h": [744, 745, 746, 747, 748, 751, 765], "0m": [744, 745, 746, 747, 748, 750, 751, 755, 759, 761, 765], "0mm": [516, 522, 533, 549, 759, 761, 800], "0sec": [744, 745, 746, 747, 748, 750, 751, 755, 759, 761, 765], "0x000001c7db070500": 749, "0x0000025d9cd53240": 758, "0x16bda3474a0": 759, "0x16bda420640": 759, "0x1758a437430": 748, "0x1758a99e390": 748, "0x1758a9a3c50": 748, "0x1758d9aa540": 748, "0x1758db44c30": 748, "0x1758db489f0": 748, "0x1758f511630": 748, "0x182989c3880": 745, "0x18298d183f0": 745, "0x18298d1b2f0": 745, "0x18298d29130": 745, "0x1829d73f9a0": 745, "0x1829da1bdf0": 745, "0x1b8e23b1c70": 765, "0x1c7db06a700": 749, "0x1e6c47fce50": 763, "0x1e85b5e9540": 751, "0x1e86d3d3eb0": 751, "0x1f60f6f3cc0": 760, "0x2258ee05010": 744, "0x2258ee0d690": 744, "0x2259391a8b0": 744, "0x22593ada1b0": 744, "0x24c238ad100": 753, "0x24c26657570": 753, "0x24c26671930": 753, "0x25d9ca82170": 758, "0x25d9d0d6f20": 758, "0x26071fa03d0": 746, "0x26071fa62d0": 746, "0x26071fa86d0": 746, "0x26071faa210": 746, "0x26072150730": 746, "0x2607670f7e0": 746, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 58, 73, 88, 97, 98, 257, 336, 337, 346, 362, 379, 381, 382, 383, 384, 500, 501, 516, 518, 520, 521, 522, 528, 532, 550, 586, 605, 653, 656, 658, 659, 660, 668, 669, 672, 673, 674, 703, 707, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 770, 772, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 796, 798, 799, 801, 803], "10": [605, 653, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 771, 777, 786, 801], "100": [123, 379, 748, 760], "1000": [175, 616, 753, 754, 755, 757, 758, 760, 761, 801], "1000000": [653, 670], "1000000000": 653, "1001": [744, 746, 759], "100e": 753, "100hz": [8, 747], "100mhz": 748, "100um": [693, 744, 745, 796], "1010": 750, "1071": [753, 758], "1075": [753, 754, 755, 756, 757, 758, 760, 761], "10e": [744, 745, 749, 753, 787, 796], "10e6": 774, "10ghz": [379, 751, 799, 801], "10mhz": [8, 379, 747, 750, 799], "10mm": [748, 759, 787], "10nm": 760, "10sec": 761, "10um": 791, "11": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 779, 801], "110": [753, 754, 755, 756, 757, 758, 760, 761], "111": 213, "11188": 745, "115": [753, 754, 755, 756, 757, 758, 760, 761], "11636": 746, "1189763028": 757, "11nf": 747, "12": [107, 744, 745, 746, 747, 748, 749, 751, 754, 758, 759, 763, 765, 778, 801], "120": [742, 767], "1240618542": 761, "12699999746": 754, "12749999646000001": 754, "12799999800000003": 754, "128": [753, 754, 755, 756, 757, 758, 760, 761], "12849999700000003": 754, "12899999854000002": 754, "12949999754000002": 754, "12999999654000002": 754, "13": [744, 745, 746, 747, 748, 749, 751, 754, 758, 759, 763, 765, 778, 779], "13049999808": 754, "13099999708": 754, "1310": 765, "13149999608000001": 754, "1391": [753, 754, 755, 757, 758, 760, 761], "13e": [524, 787], "13mm": 749, "14": [744, 745, 746, 747, 748, 749, 751, 753, 754, 757, 758, 759, 763, 765], "1408": [753, 754, 758], "141": 757, "1430": 761, "1442418163": 753, "147": [744, 745, 746, 747, 753, 754, 755, 757, 759, 761], "15": [190, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 758, 759, 763, 765], "1500": 710, "1537379181": 757, "156": 747, "15deg": 801, "15e": 753, "15mm": [746, 748, 749, 758], "15um": 796, "16": [221, 744, 745, 746, 747, 748, 749, 750, 751, 754, 757, 758, 759, 763, 765], "1617624986": 753, "1658113231": 761, "16_bottom": [754, 761, 763, 788, 801], "17": [524, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 787], "179": [753, 754, 755, 756, 757, 758, 760, 761], "17um": 693, "18": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "180": [748, 758], "1822": 755, "1839": [754, 755, 761], "1876": 759, "19": [227, 524, 635, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 787], "1907": 751, "1909": [753, 754, 755, 756, 757, 758, 759, 760, 761], "1929": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "196": [753, 754, 755, 756, 757, 758, 759, 760, 761], "1981": 761, "1984": 747, "1989": [755, 761], "1_comp_definit": 747, "1_top": [754, 757, 763, 793, 796, 801], "1a": 674, "1cm": 775, "1e": [107, 379, 384, 669, 744, 745, 751, 753, 779, 793, 800, 801], "1e3": [754, 800], "1e6": [653, 765], "1e7": 793, "1e9": [586, 653, 765], "1ghz": [748, 749, 751, 760, 765, 801], "1khz": [748, 751, 801], "1mhz": 765, "1mm": [379, 706, 708, 709, 746, 748, 749, 753, 758, 759, 763, 770, 787, 796, 803], "1sec": [747, 750, 751, 755, 761, 765], "1um": 801, "1v0": [754, 761, 765, 778, 779, 784], "2": [58, 68, 73, 75, 88, 98, 104, 126, 139, 153, 161, 177, 189, 190, 193, 212, 221, 245, 257, 334, 347, 362, 379, 382, 433, 477, 493, 500, 501, 524, 544, 557, 586, 598, 619, 620, 651, 652, 653, 696, 703, 706, 707, 708, 709, 713, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 779, 787, 801], "20": [493, 744, 745, 746, 747, 748, 750, 754, 759, 763, 765, 801], "200": 801, "2000": [175, 616, 710, 761, 801], "2000x1000": [744, 745, 747], "200um": [744, 745, 749, 791, 793, 796], "2021": [88, 126, 139, 153, 161, 177, 189, 212, 221, 334, 347, 544, 598, 619, 651, 652, 696, 706, 707, 708, 709, 713], "2022": [750, 769, 771], "2023": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 771], "2024": [7, 336, 337, 346, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 770, 771, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "205": [753, 754, 755, 756, 757, 758, 760, 761], "2075340592": 759, "209": [753, 754, 755, 756, 757, 758, 760, 761], "20e9": 774, "20ghz": [744, 745, 750], "20ghz_to_50ghz": 745, "20mm": [748, 759], "20um": [693, 793], "21": [744, 745, 746, 748, 754, 759, 763], "211": 760, "214": 760, "219": 757, "22": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 763, 765, 787], "222": 760, "2228": [755, 761], "223": 760, "2288": [755, 761], "22pf": 110, "23": [744, 745, 746, 754, 763, 787], "2300580511": 757, "2332": [755, 761], "24": [744, 745, 746, 754, 763], "2410814316": 758, "2415": [755, 761], "2436": [755, 761], "2445": [755, 761], "2447": [755, 761], "2448": [755, 761], "2453": [755, 761], "249": 760, "25": [744, 745, 746, 751, 754, 763, 787], "250um": 800, "2517840524": 761, "252": 760, "255": [744, 746, 759], "2581": 755, "25mm": 759, "26": [744, 745, 746, 754], "262": [753, 758], "265": 765, "267": [754, 755, 756, 757, 759, 761], "269": [753, 754, 755, 756, 757, 758, 760, 761], "27": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 765], "275um": 746, "28": [745, 746, 754, 760], "2889": [753, 757, 758, 759, 760, 763], "29": [745, 765], "293": [753, 754, 755, 756, 757, 758, 760, 761], "2951509181": 753, "2999416059": 755, "29e": [744, 745], "29mm": 787, "2d": [175, 608, 616], "2e": [744, 745, 748, 749, 793], "2e9": 586, "2f": [753, 754, 755, 757, 758, 760, 761], "2mm": [516, 522, 706, 708, 709, 746, 748, 749, 758, 801], "2v5": 754, "2v_avddl": 754, "2v_avdll_pll": 754, "2v_dvddl": 754, "3": [73, 98, 109, 227, 362, 423, 516, 522, 524, 525, 531, 532, 533, 586, 603, 635, 641, 663, 671, 672, 710, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 771, 787, 793, 796, 800, 801], "30": [379, 748, 758], "300um": [621, 622], "301": 786, "302": 777, "3075": [753, 754, 755, 756, 757, 758, 760, 761], "30um": [796, 800], "3130": [753, 754, 755, 756, 757, 758, 760, 761], "318": [753, 754, 755, 756, 757, 758, 760, 761], "32": [753, 754, 755, 756, 757, 758, 760, 761], "325": 748, "326": 748, "33": [379, 754, 801], "3334": [753, 754, 755, 756, 757, 758, 760, 761], "34": [747, 748, 753, 754, 755, 756, 757, 758, 759, 760, 761], "346": [753, 754, 755, 756, 757, 758, 760, 761], "348": 754, "35": [748, 754, 793], "350um": 796, "3517": [753, 754, 755, 756, 757, 758, 760, 761], "3577": [753, 754, 755, 756, 757, 758, 760, 761], "3588321624": [754, 755, 757, 760], "359427503": 755, "35e": 753, "35um": [685, 746], "36": 754, "3601094185": 758, "362": [753, 754, 755, 756, 757, 758, 760, 761], "3691860644": 755, "37": 754, "3700": 749, "372": [755, 761], "379806575": 753, "38": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "3814241137": 754, "39": [744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763], "3_10": 771, "3d": [10, 67, 68, 104, 190, 379, 706, 708, 709, 746, 747, 748, 749, 750, 751, 756, 759, 766], "3dlayout": 623, "3e": [744, 745], "3e11": 748, "3e9": 586, "3ghz": 759, "3mm": [746, 748, 749, 756, 758, 759, 803], "3rd": 749, "3sec": 755, "3v": 674, "3v_avddh": 754, "4": [58, 73, 257, 362, 400, 586, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 793], "40": [741, 777], "400um": [621, 622, 796], "40e": 793, "40ghz": 379, "40um": 793, "424968329": [644, 650], "425": 755, "4279114658": 761, "4321mm": 755, "437": [753, 754, 755, 756, 757, 758, 760, 761], "438": 751, "442901903": 758, "444": 747, "446": 750, "449": [753, 754, 755, 756, 757, 758, 760, 761], "453": 761, "4544": 744, "45e": 753, "460": 745, "464": 755, "470": 747, "472": 750, "474": 761, "49246": 744, "4960": 751, "49722": 745, "4e": [744, 745], "4mm": [379, 746, 759, 800], "4sec": [747, 750, 751, 755, 761, 765], "5": [73, 516, 522, 525, 533, 586, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 801], "50": [74, 107, 517, 518, 521, 523, 524, 525, 528, 532, 533, 541, 655, 656, 657, 659, 667, 668, 672, 744, 745, 784], "50000000": 381, "500um": 796, "50206": 746, "50764": 747, "50893": 748, "509": 754, "50ghz": 745, "50mm": [516, 522, 533], "50um": 693, "51302": 749, "51432": 750, "51563": 751, "52111": 759, "52413": 765, "5260": 765, "534": [753, 754, 755, 756, 757, 758, 760, 761], "54": 755, "545": [753, 754, 755, 756, 757, 758, 760, 761], "549": [753, 754, 755, 756, 757, 758, 760, 761], "55": [744, 745, 746, 747, 748, 751, 765], "558": [754, 755, 756, 757, 760, 761], "55m": 747, "55mm": 787, "56": 755, "568": [754, 755, 756, 757, 760, 761], "571": [754, 755, 756, 757, 760, 761], "57m": [745, 755], "58": 755, "5e": [227, 635, 641, 744, 745, 753, 763], "5e7": 379, "5e9": [586, 748], "5ghz": [748, 749, 760, 801], "5mm": [379, 641, 744, 745, 746, 748, 749, 758, 759, 761], "5sec": 761, "5um": 801, "5v": 754, "6": [3, 343, 379, 527, 535, 586, 641, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 793, 801], "600um": [621, 622], "603": [753, 754, 755, 756, 757, 758, 759, 760, 761], "60db": 437, "60m": 747, "61": [755, 757], "61m": 753, "621440271": 754, "6240": 748, "62m": 759, "63": 755, "63e": [524, 787], "63m": 750, "64": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "65": 755, "65e": [524, 787], "65mm": 796, "65um": 760, "665mm": 796, "67": [755, 779], "680x175": 754, "69": 755, "6e9": 586, "6ghz": [8, 747], "6mm": 746, "7": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "700um": 796, "702": 765, "706": 760, "708": 760, "726": [753, 754, 755, 756, 757, 758, 760, 761], "732": [753, 754, 755, 756, 757, 758, 760, 761], "733": [753, 754, 755, 756, 757, 758, 760, 761], "7332": 750, "734": [753, 754, 755, 756, 757, 758, 760, 761], "739": [753, 754, 755, 756, 757, 758, 760, 761], "74": [753, 754, 755, 756, 757, 758, 760, 761], "741": 755, "744": 755, "749": 755, "75": [190, 754], "750": 755, "762": [753, 754, 755, 757, 761], "766": 754, "778": [753, 754, 755, 756, 757, 758, 760, 761], "781": 755, "78e": 778, "7d4cc5a": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "7e": 787, "7mm": [746, 749, 758], "8": [379, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 763, 765, 769, 787, 793, 801], "80": [753, 754, 755, 756, 757, 758, 759, 760, 761], "800um": 796, "81": 760, "824": 761, "829": [753, 754, 755, 756, 757, 758, 760, 761], "84": 760, "841830643": 760, "8424": 747, "849": [753, 754, 755, 757, 761], "858674284": 756, "859": 761, "86": [753, 754, 755, 756, 757, 758, 759, 760, 761], "863075063": 757, "899852019": 754, "8_n": 754, "8mm": 745, "8sec": 755, "8v_dvddh": 754, "9": [107, 109, 744, 745, 746, 747, 748, 749, 750, 751, 754, 757, 758, 759, 760, 761, 763, 765, 769], "90": 746, "928": 755, "968": 751, "978": 747, "9e": [744, 745], "9sec": [747, 750, 751, 765], "A": [744, 745, 753, 756, 760, 769], "AND": [744, 756], "AS": [744, 756], "At": 775, "BE": [744, 756], "BUT": [744, 756], "FOR": [744, 756], "For": [74, 110, 379, 524, 557, 742, 748, 750, 765, 766, 767, 769, 771], "IN": [744, 756], "IT": 771, "If": [67, 73, 74, 77, 109, 169, 175, 190, 221, 240, 252, 253, 379, 557, 564, 575, 576, 577, 608, 616, 623, 632, 633, 636, 641, 646, 648, 652, 677, 695, 702, 706, 707, 708, 709, 710, 741, 743, 745, 749, 750, 753, 758, 763, 765, 771], "In": [252, 253, 379, 608, 742, 746, 747, 749, 751, 752, 757, 760, 765, 767, 769, 771], "It": [1, 7, 75, 109, 126, 139, 153, 161, 221, 291, 330, 334, 347, 379, 457, 517, 603, 655, 710, 742, 745, 749, 750, 760, 766, 767, 771], "Its": 766, "NO": [744, 756], "NOT": [744, 756, 765], "No": [58, 257, 649, 747], "Not": 604, "OF": [744, 756], "OR": [744, 756], "On": [756, 769, 771], "One": [602, 745], "Or": 74, "THE": [744, 756], "TO": [744, 756], "The": [0, 3, 4, 12, 67, 68, 72, 73, 74, 77, 80, 82, 89, 91, 94, 97, 98, 106, 107, 108, 110, 118, 127, 140, 154, 190, 220, 221, 227, 230, 252, 253, 349, 379, 382, 394, 401, 410, 411, 413, 415, 420, 424, 429, 430, 432, 433, 435, 438, 447, 464, 470, 474, 476, 477, 487, 488, 491, 493, 498, 500, 504, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 547, 548, 549, 550, 552, 557, 563, 573, 604, 605, 606, 620, 621, 622, 623, 629, 631, 634, 635, 636, 641, 645, 648, 653, 655, 658, 659, 661, 662, 665, 667, 668, 671, 672, 677, 684, 685, 686, 687, 688, 689, 693, 695, 697, 701, 702, 706, 707, 708, 709, 710, 719, 720, 722, 723, 725, 728, 738, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 785], "There": [745, 746, 750], "These": [0, 2, 4, 5, 6, 8, 9, 104, 379, 742, 767], "To": [85, 213, 379, 524, 742, 767, 769, 770, 771], "WITH": [744, 756], "Will": [379, 457], "_": [623, 745, 751, 761, 788], "__init__": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761], "__version__": [753, 754, 755, 756, 757, 758, 760, 761], "_active_cel": [754, 755, 756, 757, 760, 761], "_arg": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_callback": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_clr": 761, "_context": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_create_cutout_multithread": [755, 761], "_definit": 765, "_dw": 761, "_global": [753, 754, 755, 756, 757, 758, 760, 761], "_hierarchi": 88, "_log_on_handl": [753, 754, 755, 756, 757, 758, 760, 761], "_logger": [753, 754, 755, 756, 757, 758, 760, 761], "_pedb": [73, 96, 212, 754, 755, 761], "_pseudo_sync_runn": [753, 754, 755, 756, 757, 758, 760, 761], "_renam": 756, "_run": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_run_cel": [753, 754, 755, 756, 757, 758, 760, 761], "_run_cod": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_run_module_as_main": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_run_onc": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_test": 756, "_tool": [753, 754, 755, 756, 757, 758, 759, 760, 761], "_work": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "a0_n": [755, 803], "a0_n_r": 803, "a1": [71, 79, 81, 106, 108], "a12": [88, 707], "a14": [88, 707], "a1new": 71, "a2": 750, "a27": [786, 788], "a28": 786, "a3": 750, "a3dcomp": [706, 748], "a3dcomp_path": 706, "a5": 750, "a6": 750, "aaa111": 0, "ab28": 754, "ab29": 754, "about": [754, 768, 773, 790], "abov": [686, 744, 745, 756], "absolut": [389, 441, 442, 443, 450, 458, 466, 467, 468, 471, 727, 730, 732, 733, 735, 739, 801], "ac": [380, 394, 653, 662], "ac_set": [8, 747, 749], "accept": 543, "access": [7, 63, 260, 296, 505, 513, 544, 580, 598, 619, 651, 683, 741, 744, 747, 753, 754, 755, 756, 757, 758, 760, 761, 769, 771], "accord": [702, 771], "account": 239, "accur": 576, "accuraci": [379, 500, 527, 653, 745, 765, 801], "accuracy_level": 653, "across": [605, 766], "act": 749, "action": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "activ": [25, 73, 207, 292, 301, 361, 375, 377, 379, 386, 403, 404, 408, 422, 425, 426, 434, 439, 454, 456, 460, 465, 473, 475, 478, 481, 484, 485, 494, 495, 496, 497, 499, 502, 543, 674, 677, 719, 742, 744, 746, 747, 748, 749, 750, 751, 765, 767], "active_cel": [707, 708], "activedsoconfigur": [744, 745, 746, 747, 748, 751, 765], "actual": [190, 208, 362, 364, 548, 652, 772], "ad": [127, 140, 154, 264, 300, 439, 641, 691, 702, 708, 709, 745, 746, 747, 749, 750, 760, 761, 803], "ad11": 754, "ad28": 754, "ad29": 754, "adapt": [379, 395, 396, 397, 411, 413, 415, 483, 486, 494, 745, 748, 801], "adapt_typ": 801, "adaptive_sampl": 801, "adaptive_set": 801, "adaptivefrequ": [744, 759], "adaptivefrequencydata": [744, 746], "adaptiveset": [744, 746], "adaptivetyp": 397, "add": [68, 127, 140, 154, 381, 382, 383, 384, 431, 440, 545, 581, 582, 583, 584, 585, 586, 590, 621, 652, 653, 662, 684, 686, 687, 688, 689, 690, 742, 745, 748, 760, 763, 767, 792, 799, 800, 801], "add_ac": 662, "add_adaptive_frequency_data": 801, "add_at_elev": 685, "add_compon": 760, "add_current_sourc": 379, "add_dc": 662, "add_dc_ground_source_term": 379, "add_default_lay": 621, "add_design_vari": [748, 749, 758, 803], "add_dielectric_materi": 748, "add_ext": 760, "add_frequency_sweep": [748, 751, 800, 801], "add_lay": [744, 745, 746, 748, 753, 791, 793, 796, 800], "add_length_mesh_oper": [748, 801], "add_materi": 793, "add_n_port_model": 61, "add_on_bottom": 685, "add_on_top": 685, "add_pin": 760, "add_port": 760, "add_project_vari": [746, 759, 803], "add_setup": 760, "add_siwave_ac_analysi": 652, "add_siwave_dc_analysi": [754, 799], "add_siwave_dc_analysis2": 652, "add_siwave_syz_analysi": 799, "add_skin_depth_mesh_oper": 801, "add_source_terminal_to_ground": 754, "add_sweep": [745, 760], "add_syz": 662, "add_void": [748, 759, 761], "add_voltage_sourc": [379, 381, 383], "addit": [743, 747, 750, 751, 755, 761, 765, 769], "addition": 766, "address": [379, 766], "adjust": [541, 691], "administr": 771, "advanc": [770, 801], "advanced_mesh_set": 801, "advis": 379, "ae23": 754, "aedb": [1, 77, 260, 296, 379, 458, 644, 650, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 763, 765, 766, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 793, 794, 795, 798, 799, 801, 803], "aedb_path": [744, 745, 746, 748, 749, 753, 758, 759], "aedt": [85, 177, 189, 212, 213, 240, 252, 253, 719, 721, 740, 742, 746, 748, 749, 751, 753, 754, 756, 765, 766, 767, 768, 769, 770, 771], "aedt_fil": 754, "aedt_path": 759, "aedt_vers": [747, 759, 763, 765], "aedtresult": 735, "aedtroot": 769, "af13": 754, "af23": 754, "af28": 754, "af29": 754, "affili": [744, 756], "after": [379, 391, 557, 706, 711, 744, 745, 749, 750, 754, 760, 765, 769], "ag19": 754, "ah16": 754, "ah28": 754, "ah29": 754, "air": [379, 441, 442, 443, 465, 466, 744, 745, 791, 796, 800], "air_box_horizontal_ext": 748, "air_box_negative_vertical_ext": 748, "air_box_positive_vertical_ext": 748, "air_lin": 685, "air_vertical_negative_pad": 759, "air_vertical_positive_pad": 759, "airbox": [379, 441, 442, 443, 467, 468], "airbox_horizontal_ext": [379, 800], "airbox_negative_vertical_ext": [379, 800], "airbox_positive_vertical_ext": [379, 800], "airlin": 763, "aj6": 74, "ak28": 754, "ak29": 754, "algorithm": [109, 576, 577, 603], "align": [523, 708, 709, 754], "all": [6, 7, 74, 80, 94, 101, 109, 169, 175, 190, 207, 225, 237, 358, 379, 394, 438, 452, 457, 474, 517, 534, 540, 542, 543, 564, 573, 574, 575, 576, 577, 600, 604, 605, 608, 612, 615, 616, 632, 633, 636, 637, 638, 641, 643, 644, 646, 647, 648, 650, 655, 675, 678, 680, 681, 682, 711, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 754, 757, 760, 763, 765, 766, 767, 769, 793, 797, 798], "all_net": 751, "allow": [379, 745, 747, 749, 758, 766, 769, 771, 772, 781], "along": [641, 746, 748], "alreadi": [73, 623, 769], "also": [379, 457, 524, 706, 742, 744, 754, 766, 767, 769, 770, 773], "altern": [91, 653, 763], "although": 795, "altr": 754, "am": [742, 767], "am28": 754, "am29": 754, "am4": 74, "am7": 74, "amat": [589, 590, 594, 595, 744, 745], "amat_fil": [589, 590, 594], "amd64": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "among": [258, 376], "amper": [381, 384], "amplitud": [381, 384], "an": [1, 16, 27, 30, 49, 62, 71, 75, 91, 107, 123, 179, 180, 343, 363, 379, 524, 526, 527, 530, 548, 589, 590, 594, 620, 636, 639, 640, 647, 662, 690, 707, 708, 724, 737, 742, 744, 745, 747, 748, 749, 751, 754, 756, 760, 765, 766, 767, 768, 769, 771, 774, 776, 780, 785, 789, 794, 795, 802], "an26": 750, "analysi": [7, 394, 438, 474, 514, 652, 653, 654, 747, 748, 802], "analyz": [663, 744, 745, 746, 748, 751, 759], "angl": [190, 398, 706, 707, 708, 709], "ani": [1, 231, 269, 306, 379, 524, 576, 592, 744, 756, 766, 768, 769, 771], "anoth": [362, 364, 563, 691, 707, 708, 709, 753, 754, 755, 756, 757, 758, 760, 761], "ansi": [128, 141, 162, 163, 243, 260, 296, 706, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 757, 758, 759, 760, 761, 763, 765, 766, 767, 769, 770, 771, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "ansoft": [128, 141, 162, 163, 243, 260, 296, 744, 745, 746, 747, 748, 749, 750, 751, 758, 759, 765], "ansys_fr4": 748, "ansys_hsd": 755, "ansys_vers": [774, 775, 785, 787, 788, 798, 801], "ansys_via": 748, "ansysem": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 765, 769, 771], "ansysem_root222": 769, "antenna": 745, "anti": [620, 647, 797, 798], "anti_pad_diam": 746, "anti_pad_x_s": [621, 796], "anti_pad_y_s": [621, 796], "antipad": [621, 622, 648, 750], "antipad_param": 648, "antipad_polygon": 621, "antipad_rot": 648, "antipad_shap": [621, 648, 746, 796], "antipad_x_offset": 648, "antipad_y_offset": 648, "antipaddiam": [4, 621, 622, 744, 745, 746, 749, 758], "antipads_always_on": 748, "ap25": 750, "ap26": 750, "ap28": 754, "ap29": 754, "api": [0, 2, 3, 4, 7, 129, 130, 132, 133, 134, 135, 136, 142, 145, 146, 147, 148, 155, 157, 158, 159, 165, 166, 168, 171, 172, 173, 379, 750, 752, 759, 762, 766, 770, 771, 772, 773], "api_object": 126, "app": [167, 334, 605, 741, 753, 754, 755, 756, 757, 758, 760, 761, 770], "appdata": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765], "appear": [742, 767], "appedb": [336, 337, 346], "append": [746, 751, 755, 761], "appli": [22, 227, 379, 421, 451, 455, 458, 517, 554, 560, 632, 633, 635, 655, 706, 707, 708, 709, 746, 747, 750, 751, 765], "applic": [0, 3, 4, 108, 228, 379, 621, 734, 745, 748, 753, 754, 755, 756, 757, 758, 760, 761, 766], "apply_fil": 763, "apply_to_al": 765, "approach": 744, "approx": 745, "approxim": [221, 801], "apr": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "ar": [0, 2, 4, 5, 6, 8, 9, 68, 74, 75, 80, 94, 104, 106, 108, 110, 201, 268, 305, 379, 393, 433, 441, 442, 443, 450, 452, 454, 457, 466, 467, 468, 471, 523, 525, 530, 549, 550, 554, 572, 573, 605, 606, 608, 616, 620, 621, 632, 633, 641, 648, 653, 663, 677, 684, 685, 686, 687, 688, 689, 695, 702, 706, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 757, 760, 763, 765, 766, 767, 769, 771, 775], "ar25": 750, "arang": [748, 758, 759], "arc": [6, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 356, 363, 370, 374, 398, 399, 402, 407, 409, 418, 422, 425, 434, 548, 557], "arc_angl": 801, "arc_height": 337, "arc_seg": 343, "arc_to_chord_error": 801, "architectur": 766, "area": [221, 416, 417, 418, 487, 488, 576, 603, 713, 769, 771], "arg": [753, 754, 755, 756, 757, 758, 760, 761], "argument": [621, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 769], "aris": [744, 756], "around": [706, 748, 766, 769], "arrai": 745, "array_antenna": [744, 745], "array_length": [744, 745], "array_width": [744, 745], "ascii": 379, "asi": [753, 754, 755, 756, 757, 758, 760, 761], "aspect": [190, 801], "assembli": 685, "asset": 769, "assign": [12, 13, 14, 23, 36, 39, 52, 57, 72, 74, 106, 110, 220, 291, 330, 379, 382, 517, 519, 520, 524, 527, 531, 547, 599, 620, 647, 655, 658, 671, 746, 747, 749, 751, 759, 761, 766], "assign_radiation_boundary_to_object": 745, "associ": [58, 167, 257, 379, 453, 605, 744, 747, 756], "ast": 608, "async_": [753, 754, 755, 756, 757, 758, 760, 761], "async_help": [753, 754, 755, 756, 757, 758, 760, 761], "asyncio": [753, 754, 755, 756, 757, 758, 759, 760, 761], "asyncio_loop": [753, 754, 755, 756, 757, 758, 760, 761], "at_bounding_box": 527, "attempt": [742, 767, 772], "attent": 767, "attribut": [11, 63, 111, 116, 126, 139, 153, 161, 177, 189, 212, 260, 296, 334, 347, 379, 394, 438, 474, 505, 513, 541, 544, 580, 597, 598, 619, 651, 683, 719], "author": [744, 756], "auto": [73, 269, 306, 444], "auto_identify_sign": 751, "auto_parametrize_design": 750, "auto_reference_s": 108, "autom": [379, 766], "automat": [74, 108, 220, 519, 524, 742, 749, 750, 751, 758, 767], "automated_via": 746, "avail": [54, 55, 379, 663, 747, 769, 771, 772], "avcc_1v3": [754, 757], "avoid": [379, 555], "awai": 745, "await": [753, 754, 755, 756, 757, 758, 760, 761], "ax": [744, 745, 747], "axi": [181, 182, 194, 195, 547, 706], "azimuth": 427, "b1": 760, "back": 746, "backdril": [214, 215, 252, 253], "background": [722, 725], "background_color": 722, "balanc": [500, 765], "ball": [53, 54, 55, 56, 73, 96, 108, 379, 444, 455, 623, 649, 691, 708, 709, 751], "balldiam": [649, 744, 745], "bar": [742, 767], "base": [73, 230, 379, 458, 539, 548, 550, 552, 563, 599, 641, 685, 686, 687, 719, 758, 775, 776, 801], "base_ev": [753, 754, 755, 756, 757, 758, 759, 760, 761], "base_lay": [685, 746, 791, 793, 796, 800], "base_layer_nam": [686, 687], "basefilenam": [753, 754, 755, 756, 757, 758, 760, 761], "basi": [379, 801], "basis_ord": 379, "basisord": [379, 400], "batch": [385, 438, 754, 766], "batch_solve_set": [8, 747, 749], "bbox": 379, "becaus": [216, 753, 754, 755, 756, 757, 758, 760, 761, 766, 772], "becom": 771, "been": [403, 527, 706, 744, 745, 746, 747, 748, 749, 750, 751, 755, 759, 765, 769], "befor": [527, 557, 623, 707, 708, 709, 720, 742, 744, 745, 767, 768], "begin": [770, 787], "begin_on_upper_pad": [201, 621], "behavior": [749, 750], "being": [110, 123, 750, 753, 754, 755, 756, 757, 758, 760, 761, 771], "belong": [73, 89, 94, 160, 174, 176, 190, 207, 237, 248, 290, 329, 379, 517, 524, 608, 610, 616, 634, 644, 650, 655], "below": [419, 437, 620, 687, 742, 746, 767], "best": [742, 766, 767, 769], "beta": 771, "better": 772, "between": [67, 74, 77, 88, 123, 362, 379, 524, 528, 548, 657, 660, 667, 668, 670, 673, 679, 765, 768, 780, 786, 789], "bga": [88, 707, 708, 709, 760], "bill": 747, "binari": 771, "bit": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "bkground_color": 725, "black": [742, 767], "blacken": [742, 767], "blank": 379, "block": 771, "board": 746, "bodi": [753, 754, 755, 756, 757, 758, 760, 761], "bollean": 649, "bom": [82, 98, 110, 755], "bom_fil": [82, 98, 110], "bond": [379, 496], "bondwir": [258, 376, 379, 484], "bool": [12, 22, 23, 28, 30, 31, 61, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 86, 88, 96, 98, 104, 106, 107, 108, 109, 110, 120, 121, 169, 175, 190, 220, 221, 223, 227, 228, 230, 233, 234, 252, 253, 338, 339, 340, 349, 354, 363, 364, 365, 367, 381, 383, 384, 386, 388, 390, 391, 403, 404, 405, 406, 408, 421, 426, 431, 434, 436, 439, 448, 451, 452, 454, 455, 456, 457, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 478, 481, 484, 485, 492, 494, 495, 496, 497, 499, 502, 503, 506, 514, 515, 519, 526, 527, 529, 539, 541, 543, 548, 552, 553, 554, 555, 561, 563, 564, 573, 575, 576, 577, 590, 599, 605, 608, 610, 611, 612, 616, 620, 621, 623, 626, 635, 641, 645, 646, 647, 648, 649, 653, 654, 657, 660, 662, 669, 670, 673, 674, 685, 690, 691, 693, 695, 696, 701, 702, 706, 707, 708, 709, 710, 720, 722, 723, 724, 725, 728, 734, 737, 738], "boolean": [379, 403, 404, 405, 406, 407, 408, 421, 422, 425, 426, 431, 434, 436, 448, 451, 455, 456, 465, 469, 473, 475, 524, 527], "border": 530, "bot": [748, 754], "bot_el": 754, "bot_layer_obj": 759, "both": [5, 9, 379, 742, 746, 749, 750, 766, 767, 770, 771], "bottom": [31, 58, 190, 214, 252, 257, 608, 616, 622, 649, 688, 691, 702, 706, 707, 708, 709, 710, 746, 754, 759, 763], "bound": [15, 22, 216, 230, 262, 298, 350, 351, 352, 379, 527, 535, 556, 632, 751, 765, 782], "boundari": [67, 68, 74, 77, 104, 261, 297, 379, 473, 528, 529, 668, 748, 780], "boundaryobject": 745, "bounding_box": 632, "boundingbox": 423, "box": [15, 22, 216, 230, 262, 298, 350, 351, 352, 379, 423, 441, 442, 443, 465, 466, 515, 527, 535, 543, 556, 632, 782, 800], "brief": [768, 770], "broadband": [395, 396, 748, 765, 801], "bst_v3p3_s5": 167, "bug": [554, 742, 767, 771], "build": [379, 386, 391, 393, 421, 439, 451, 454, 458, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765, 766, 790, 795, 800], "build_simul": 750, "build_simulation_project": [8, 379, 747, 749, 750, 774, 800], "builder": [744, 745, 747, 750, 751, 754, 755, 756, 757, 759, 760, 761, 763, 765], "bullet": [621, 648, 746], "bump": [708, 709], "bundl": [264, 300, 516], "bundlewaveport": [264, 300, 746], "bypass": 605, "c": [61, 77, 379, 388, 390, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 772], "c1": [0, 747], "c100": 110, "c100hn140": 757, "c110": 765, "c128": 754, "c129": 754, "c130": 754, "c131": 754, "c132": 754, "c133": 754, "c134": 754, "c135": 754, "c136": 754, "c137": 754, "c138": 754, "c139": 754, "c140": 754, "c141": 754, "c142": 754, "c143": 754, "c144": 754, "c145": 754, "c200": 61, "c205": 754, "c206": 765, "c238": 754, "c35": 757, "c379": 751, "c380": [747, 751, 754], "c45": 754, "c46": 754, "c52": 754, "c53": 754, "c54": 754, "c55": 754, "c56": 754, "c57": 754, "c58": 754, "c60": 754, "c68": 754, "c69": 754, "c73": 754, "c_0": 745, "c_file_in": 760, "c_map": 760, "c_valu": [71, 75, 383, 669, 779], "cach": 769, "cad": 745, "calcul": [603, 677, 745, 746, 754], "call": [0, 1, 2, 3, 4, 5, 7, 9, 74, 252, 253, 393, 623, 749, 750, 753, 754, 755, 756, 757, 758, 760, 761, 771], "can": [1, 7, 74, 75, 291, 330, 379, 423, 437, 524, 548, 555, 702, 742, 743, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 763, 765, 766, 767, 769, 770, 771, 772, 795], "cannot": [744, 745, 746, 747, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763], "cap": [12, 550, 747], "cap_valu": 107, "capabl": [574, 773], "capacit": [12, 16, 71, 75, 383, 529, 669], "capacitor": [104, 107, 605, 747, 751], "capacitor_abov": [605, 751], "capc0603x33x15ll03t05": [754, 765], "capc1005x05n": 747, "capc1005x33x10ll5": 754, "capc1005x55x25ll05t10": 747, "capc1608x08n": 754, "capc3216x180x20ml20": 747, "capc3216x180x55ml20t25": [61, 747], "capit": 769, "capmp7343x31n": 754, "carri": 527, "case": [72, 74, 80, 94, 220, 227, 401, 470, 517, 520, 531, 547, 563, 573, 604, 608, 622, 635, 641, 655, 658, 671, 719, 749, 757, 771, 775], "caus": [379, 437, 524], "causal": [379, 405], "cautious": 379, "cd": [742, 767], "cell": [11, 64, 65, 66, 69, 88, 100, 101, 105, 164, 260, 296, 524, 529, 613, 623, 636, 649, 669, 707, 708, 709, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 759, 760, 761, 763, 765], "cell_3l65kf": 749, "cell_jceciq": 745, "cell_nam": [753, 754, 755, 756, 757, 758, 760, 761], "cell_nvwp9p": 748, "cell_sgzwi1": 746, "cell_upbgbg": 759, "cell_x0e172": 744, "center": [230, 334, 548, 549, 563], "center_point": [549, 800], "centerwidthheight": [549, 800], "central": 744, "cfg": 765, "cfg_data": [763, 765], "cfgdata": [763, 765], "chang": [379, 461, 554, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 765, 787, 793, 801], "channel": [7, 751], "charact": [742, 749, 758, 767], "charg": [744, 756], "chart": [175, 608, 616], "cheat": 770, "check": [31, 94, 223, 230, 231, 268, 305, 364, 530, 576, 577, 605, 610, 620, 742, 750, 763, 767, 771], "chip": [108, 760], "chip_down": 108, "chip_orient": 108, "chip_up": 108, "choic": [745, 749, 753, 766], "chord": [399, 402, 407, 418, 422, 425, 434], "chosen": 423, "circl": [6, 258, 376, 547, 554, 621, 646, 648, 796], "circport": 73, "circuit": [64, 65, 67, 68, 73, 74, 77, 220, 276, 314, 379, 446, 517, 518, 524, 655, 656, 667, 746, 765, 787, 789], "circuit_port": 67, "circuit_typ": 68, "circuitport": [73, 666], "circular": 622, "circumfer": 748, "ciruict": 765, "claim": [744, 756], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 63, 74, 111, 116, 126, 128, 139, 141, 153, 160, 161, 162, 167, 177, 189, 212, 220, 260, 296, 334, 347, 379, 380, 385, 386, 387, 393, 394, 397, 400, 438, 439, 454, 474, 505, 513, 544, 557, 574, 580, 598, 619, 651, 652, 653, 669, 674, 683, 719, 741, 744, 746, 747, 748, 749, 750, 751, 754, 755, 758, 759, 765, 766, 800], "classif": 603, "clean": [576, 746, 747, 750, 751, 754, 758, 760, 761, 765], "clean_disjoints_less_than": 576, "cleanup": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 760, 761, 763], "clearanc": [22, 748, 761], "click": 741, "client": 771, "clip": [379, 421, 447, 448, 449, 451, 530, 554, 776], "clip_plan": 759, "clippingext": 379, "clockwis": [338, 706], "clone": 6, "close": [379, 516, 522, 719, 720, 746, 749, 750, 751, 754, 757, 758, 761, 763, 765, 774, 775, 778, 791, 793, 796, 798, 799, 800, 801], "close_desktop": [749, 750, 765], "close_edb": [74, 77, 104, 696, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 775, 777, 778, 779, 784, 785, 786, 787, 788], "close_on_exit": 745, "close_project": [7, 749, 750, 754], "closest": [73, 269, 306, 356, 357, 379], "clr": [748, 761], "cluster": 766, "cmp": [73, 77, 96, 104], "co": [748, 758], "coars": 379, "coax": [219, 270, 307, 744, 745, 751, 765], "coaxial": [379, 469, 519, 541, 623, 789], "coaxport": 73, "coberg": 379, "code": [748, 753, 754, 755, 756, 757, 758, 759, 760, 761, 766, 768, 769, 775, 785], "code_ast": [753, 754, 755, 756, 757, 758, 760, 761], "code_obj": [753, 754, 755, 756, 757, 758, 760, 761], "codebas": 773, "codespel": [742, 767], "coil": 754, "collabor": [766, 769], "collect": [711, 718], "color": [608, 616, 722, 725], "color_by_net": [608, 616, 753, 755, 757, 759], "column": 98, "com": [742, 767, 771], "combin": [73, 379, 745, 766], "come": 110, "command": [104, 379, 527, 636, 742, 744, 745, 749, 753, 754, 766, 769, 770, 771], "comment": [742, 767], "commit": [742, 767], "common": [362, 543, 746, 769, 771], "commonfil": 771, "commun": 771, "comp": [0, 1, 747, 748, 760], "comp1": 379, "comp2": 379, "comp_def": 61, "comp_n": 751, "comp_nam": 751, "comp_obj": 751, "comp_p": 751, "comp_type_col": [98, 747], "comp_u1": 756, "compani": [769, 771], "compat": [67, 68, 104, 383, 768, 772], "complet": [379, 744, 745, 747, 750, 751, 755, 760, 761, 765, 766], "complex": 766, "compliant": [742, 767], "compon": [1, 3, 8, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 31, 35, 40, 41, 43, 44, 45, 46, 50, 51, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 150, 151, 152, 167, 218, 227, 262, 298, 326, 351, 379, 381, 383, 384, 446, 452, 517, 518, 519, 520, 521, 528, 531, 532, 543, 600, 605, 608, 610, 615, 616, 623, 629, 634, 635, 644, 650, 655, 656, 658, 659, 661, 664, 665, 667, 668, 669, 671, 672, 676, 706, 707, 708, 709, 741, 748, 750, 751, 755, 760, 761, 765, 766, 774, 777, 778, 784, 785, 786, 788, 789, 790], "component1_pin": 749, "component2_pin": 749, "component_3d": 748, "component_definit": 765, "component_edb": 709, "component_exampl": 749, "component_list_column": 754, "component_nam": [71, 75, 79, 81, 109, 610, 661, 667, 669, 748, 788], "component_onli": [227, 635], "component_part_nam": [23, 71], "component_partnam": 754, "component_path": 748, "component_pin": 629, "component_reference_design": 629, "component_typ": 747, "componentnam": [106, 107, 240], "componentproperti": 21, "comptyp": 110, "comput": [17, 51, 109, 269, 306, 349, 379, 436, 437, 475, 495, 563, 747, 750, 754, 775, 776], "con_pin": [744, 745], "con_ref1": [744, 745], "con_ref2": [744, 745], "con_ref3": [744, 745], "con_ref4": [744, 745], "concept": 749, "cond_thickness_inn": [749, 758], "cond_thickness_out": [749, 758], "conda": 768, "condit": [379, 561, 629, 744, 756, 760], "conduct": [581, 685, 746, 793], "conduction_max_pass": 801, "conduction_min_converged_pass": 801, "conduction_min_pass": 801, "conduction_per_error": 801, "conduction_per_refin": 801, "conductor": [581, 693, 709, 745, 746, 748, 758], "conectors_posit": 749, "config": [388, 753, 754, 755, 756, 757, 758, 760, 761], "config_fil": 765, "configur": [379, 440, 498, 513, 514, 515, 654, 741, 742, 749, 750, 752, 767], "conform": [379, 423, 765], "conintu": 749, "connect": [18, 87, 225, 226, 263, 269, 271, 299, 306, 308, 353, 358, 359, 379, 576, 606, 612, 744, 746, 749, 751, 756, 772], "connector": [706, 745, 748], "connector_1": 749, "connector_2": 749, "connector_pin": [744, 745], "connector_s": 749, "connedt": [268, 305], "consecut": [379, 557], "consid": [175, 418, 419, 437, 605, 606, 608, 616, 754], "consist": 751, "consolid": [766, 769], "constant": [379, 393], "constraint": 766, "constructor": 8, "consum": 555, "contact": [476, 796], "contain": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 110, 221, 336, 346, 394, 438, 474, 516, 522, 533, 604, 641, 691, 747, 754, 757, 766, 769], "content": 769, "context": [746, 751], "continu": [750, 761], "contour": 362, "contract": [744, 756], "contribut": 773, "control": [403, 641, 702], "control_fil": 760, "control_fn": 760, "controlfil": 760, "controlfilesweep": 760, "conveni": 379, "convent": [73, 623], "converg": [379, 410, 413, 415, 424, 745], "convert": [77, 179, 180, 190, 208, 343, 354, 572, 592, 608, 612, 639, 640], "convert_only_signal_via": 190, "convexhul": [379, 423, 755, 765], "cool": [742, 767], "coordin": [15, 33, 250, 262, 298, 336, 346, 351, 352, 516, 522, 523, 524, 525, 533, 548, 556, 557, 560, 754, 765], "copi": [458, 744, 747, 751, 756, 760, 769, 774, 775, 785, 787, 788, 798, 801], "coplanar": [524, 759, 761], "coplanar_plane_net_nam": 761, "copper": [685, 713, 744, 745, 746, 748, 749, 753, 757, 758, 759, 763], "copy2": 760, "copyright": [744, 756], "core": [1, 66, 71, 85, 110, 213, 742, 748, 751, 753, 754, 755, 756, 757, 758, 760, 761, 766, 767, 771, 773], "core_app": [126, 139, 153, 161, 347], "core_compon": 741, "corner": [15, 262, 298, 350, 351, 379, 448, 524, 535, 549, 550, 742, 767], "corner_rad": 746, "corner_radiu": [549, 621, 746], "corner_styl": 550, "coro": [753, 754, 755, 756, 757, 758, 760, 761], "corpor": 771, "correctli": [110, 744, 745, 746, 747, 748, 749, 750, 751, 753, 758, 759, 760, 765], "correspond": [379, 747, 756], "could": 608, "count": [401, 653, 693, 744, 746, 748, 751, 754, 759, 801], "counter": [338, 754], "coupl": [268, 305, 408, 437], "cover": 543, "cp_name": 759, "cpython": [744, 745, 746, 747, 748, 751, 765, 771], "creat": [22, 23, 67, 72, 73, 74, 75, 76, 77, 129, 142, 155, 219, 220, 221, 222, 228, 245, 264, 300, 379, 383, 439, 452, 454, 458, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 547, 548, 549, 550, 563, 564, 576, 604, 622, 623, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 693, 746, 747, 754, 760, 768, 771, 780, 790, 797, 799, 800, 801, 802], "create_air_region": 745, "create_circuit_port": 77, "create_circuit_port_on_net": 784, "create_circuit_port_on_pin_group": 784, "create_coax_port": [744, 745], "create_coax_port_on_compon": [756, 785], "create_current_source_on_net": [754, 786], "create_current_source_on_pin": 786, "create_current_source_on_pin_group": 786, "create_differential_wave_port": 746, "create_edge_port": [748, 759, 787], "create_edge_port_on_polygon": 787, "create_fieldplot_cutplan": 759, "create_fieldplot_layers_net": 745, "create_ground_plan": 758, "create_hfss_setup": [748, 801], "create_linear_count_sweep": [744, 746, 759], "create_new_termin": 228, "create_padstack": [4, 749, 796], "create_physical_rlc": 383, "create_pin_group": 786, "create_pin_group_on_net": [784, 786, 788], "create_polygon": [744, 745, 746, 749, 753, 758], "create_port": 788, "create_port_between_pin_and_lay": 788, "create_port_on_compon": 751, "create_rectangl": [6, 748, 759, 800], "create_report": [744, 748, 751], "create_resistor_on_pin": 777, "create_rlc_boundary_on_pin": 778, "create_setup": [744, 745, 746, 759], "create_siwave_syz_setup": 751, "create_symmetric_stackup": [749, 758, 759], "create_trac": [746, 748, 753, 758, 759, 761, 787, 796, 800], "create_via": 753, "create_via_f": 796, "create_via_group": 760, "create_voltage_probe_on_pin_group": 786, "create_voltage_source_on_net": 754, "create_voltage_source_on_pin_group": 786, "created_port": 784, "createedgeport": 759, "creation": [73, 439, 524, 623, 745, 747, 750, 751, 755, 761, 765, 800], "criteria": [227, 379, 410, 420, 424, 539, 552, 635, 801], "cross": 437, "crosstalk": 663, "csv": [695, 702, 747, 748, 753], "cubic": 239, "current": [28, 29, 75, 76, 277, 315, 379, 381, 383, 384, 425, 495, 520, 521, 557, 606, 658, 659, 660, 674, 696, 706, 707, 708, 709, 710, 720, 721, 772, 789, 790, 791, 792, 793], "current_patch": [744, 745], "current_posit": [744, 745], "current_valu": [379, 381, 520, 521, 658, 659], "currentsourc": 666, "curv": 801, "curve_approx_set": 801, "custom": 502, "cut": [747, 750], "cutout": [379, 385, 421, 438, 451, 458, 470, 472, 527, 750, 775, 800], "cutout_subdesign_expans": [8, 379, 747, 749, 774], "cutout_subdesign_round_corn": 379, "cutout_subdesign_typ": 379, "cutoutsubdesigntyp": [379, 449], "cvalu": [529, 778], "cylind": [108, 489, 490, 760], "cylindr": 108, "d": [745, 748, 749, 751, 753, 760], "d1": 748, "d2": 748, "d28": 754, "d29": 754, "d3": [748, 754], "d4": 748, "d5": 748, "damag": [744, 756], "data": [0, 3, 4, 6, 230, 334, 348, 356, 357, 362, 364, 379, 478, 481, 537, 572, 608, 723, 744, 746, 747, 748, 750, 751, 763, 765], "data_cfg": 763, "data_typ": 723, "databas": [1, 129, 133, 134, 135, 136, 142, 145, 146, 147, 148, 155, 157, 158, 159, 165, 166, 168, 171, 172, 173, 587, 588, 628, 744, 745, 747, 750, 751, 753, 755, 756, 758, 759, 760, 761, 763, 765, 766], "datafram": 763, "date": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "db": [744, 745, 746, 748, 751], "db20": 747, "dc": [169, 379, 382, 387, 436, 454, 474, 475, 476, 477, 487, 500, 502, 575, 606, 652, 661, 662, 677, 722, 724, 736, 737, 748, 766, 799, 801], "dc_compute_induct": 379, "dc_conduct": 584, "dc_connected_net_list": 754, "dc_error_energi": 379, "dc_export_thermal_data": 379, "dc_full_report_path": 379, "dc_icepak_temp_fil": 379, "dc_import_thermal_data": 379, "dc_max_num_pass": 379, "dc_mesh_bondwir": 379, "dc_min_num_pass": 379, "dc_num_bondwire_sid": 379, "dc_per_pin_res_path": 379, "dc_per_pin_use_pin_format": 379, "dc_permitt": 584, "dc_pin_res_fil": 379, "dc_plot_jv": 379, "dc_refine_via": 379, "dc_report_show_active_devic": 379, "dc_simulation_nam": [724, 737], "dc_slide_posit": 379, "dc_use_loop_res_for_per_pin": 379, "dc_via_report_path": 379, "dcir": 223, "dcir_equipotential_region": 796, "dcr_set": 801, "dctermin": 666, "ddr4_a0": 774, "ddr4_a1": 774, "ddr4_a2": 774, "ddr4_a3": 774, "ddr4_a4": 774, "ddr4_a5": 774, "ddr4_alert3": 761, "ddr4_dq0": 775, "ddr4_dq1": 775, "ddr4_dq2": 775, "ddr4_dq3": 775, "ddr4_dq4": 775, "ddr4_dq5": 775, "ddr4_dq6": 775, "ddr4_dq7": 775, "ddr4_dqs0_n": 785, "ddr4_dqs0_p": 785, "ddr4_dsq0_n": 785, "ddr4_dsq0_p": 785, "de": 110, "de1": 763, "de2": 763, "de3": 763, "de5": 763, "de6": 763, "de7": 763, "deactiv": [67, 77, 80, 379, 403, 404, 408, 426, 434, 456, 465, 473, 475, 478, 481, 484, 485, 494, 495, 496, 497, 499, 502, 747], "deactivate_onli": 80, "deal": [744, 756], "debug": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "deby": [582, 586], "decad": [379, 401, 653], "decade_count": [379, 653], "decreas": 437, "deemb": 302, "def": [744, 745, 758], "default": [12, 67, 68, 72, 73, 74, 77, 80, 82, 89, 91, 94, 97, 98, 101, 106, 107, 108, 110, 169, 175, 190, 220, 221, 227, 230, 231, 245, 252, 253, 269, 306, 343, 349, 379, 382, 439, 454, 457, 469, 470, 472, 477, 493, 495, 516, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 541, 547, 548, 549, 550, 552, 561, 563, 573, 575, 576, 599, 604, 605, 606, 608, 616, 620, 621, 622, 623, 632, 633, 634, 635, 641, 645, 648, 649, 653, 655, 657, 658, 659, 661, 662, 663, 665, 667, 668, 671, 672, 674, 677, 684, 685, 686, 687, 688, 689, 693, 695, 701, 706, 709, 710, 719, 720, 722, 723, 725, 728, 738, 744, 745, 746, 747, 749, 750, 751, 759, 771, 772], "default_plating_ratio": 620, "defeatur": [403, 412, 419, 539, 552, 801], "defeature_abs_length": 801, "defeature_ratio": 801, "defeature_set": 801, "defin": [30, 67, 68, 74, 77, 111, 190, 379, 423, 431, 432, 516, 522, 523, 524, 525, 533, 557, 621, 623, 674, 745, 746, 748, 750, 751, 761, 766, 771, 775, 787, 790, 802], "definit": [19, 23, 37, 42, 46, 61, 75, 83, 99, 102, 177, 189, 190, 201, 204, 206, 207, 208, 244, 371, 422, 621, 629, 630, 644, 645, 647, 650, 674, 695, 710, 741, 748, 749, 750, 755, 758, 790, 797], "definition_nam": [629, 645, 746, 796], "degre": [190, 645, 746, 748], "delai": [749, 750], "delcross": 769, "delet": [3, 80, 190, 553, 573, 576, 626, 652, 702, 745, 747, 749, 750, 751, 754, 755, 761, 765], "delete_existing_setup": 654, "delete_padstack_def": 190, "delete_padstack_gemometri": 573, "delete_single_pin_rlc": [754, 755, 761], "deleted_comp": [754, 755, 761], "deleted_net": 602, "delimit": [82, 98, 110], "deliveri": [7, 379], "delta": [410, 745, 761], "demand": 711, "demo_3dcomp": 745, "demonstr": [747, 749, 754, 757, 760, 767], "dens": 379, "densiti": 495, "depend": [748, 769, 771], "deploi": 766, "deprec": [744, 745, 746, 747, 748, 749, 750, 751, 759], "depth": [190, 790, 801], "describ": [741, 771], "descript": 589, "design": [0, 48, 67, 68, 71, 74, 77, 84, 87, 93, 95, 98, 104, 110, 379, 421, 447, 448, 449, 451, 519, 555, 634, 641, 664, 665, 696, 707, 708, 709, 744, 745, 747, 748, 751, 756, 758, 765, 766, 770, 776, 790], "design_opt": 748, "design_typ": [753, 754, 755, 756, 757, 758, 760, 761], "design_vari": 506, "designnam": 745, "desktop": [706, 745, 746, 748, 749, 750, 751, 759, 766, 769], "desktop_vers": [791, 796], "dest": [753, 754, 755, 756, 757, 758, 760, 761], "destin": [707, 708, 709, 747, 748, 750, 751, 754, 755, 756, 757, 760, 761, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "detail": [747, 790], "detect": 641, "determin": [120, 121, 233, 267, 304, 365, 508, 563, 611], "dev0": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "develop": [403, 742, 767, 771, 772], "deviat": [403, 412, 539, 552], "devic": [7, 499, 754], "df": 763, "dfn": [753, 754, 755, 756, 757, 758, 760, 761], "diamet": [53, 73, 108, 190, 191, 192, 214, 215, 252, 253, 444, 621, 622, 649, 750], "dic": [46, 644, 650], "dict": [64, 65, 66, 69, 70, 78, 87, 100, 101, 105, 164, 183, 207, 537, 562, 567, 569, 570, 589, 591, 594, 595, 600, 614, 615, 617, 618, 625, 634, 637, 638, 694, 699, 713, 715, 765], "dictionari": [5, 9, 46, 64, 65, 66, 69, 70, 87, 95, 100, 101, 103, 105, 131, 143, 144, 149, 150, 151, 152, 156, 501, 537, 562, 567, 569, 570, 614, 617, 618, 634, 637, 638, 644, 650, 694, 699, 704, 715, 716, 744, 763, 765], "diel": [586, 748, 753], "diel1": 791, "diel2": 791, "diel_1": 746, "diel_2": 746, "diel_3": 746, "diel_material_nam": [749, 758], "diel_t": 748, "diel_thick": [749, 758], "dielectr": [190, 379, 450, 456, 471, 582, 583, 584, 586, 684, 685, 686, 687, 688, 689, 691, 693, 694, 702, 716, 744, 745, 746, 748, 753, 763], "dielectric_ext": [379, 800], "dielectric_lay": 793, "dielectric_loss_tang": [583, 793], "dielectric_materi": [693, 749, 758], "dielectric_model_frequ": 584, "dielectric_thick": [693, 749, 758], "dielectrics_base_elev": 760, "diff_n": 751, "diff_nam": [746, 751], "diff_p": 751, "diff_pair": 126, "differ": [73, 110, 524, 769, 773], "differenti": [3, 522, 746, 751], "differential_mod": [746, 751], "differential_pair": [3, 126], "differentialpair": [129, 134], "differeti": 751, "difficult": [742, 767], "digit": [527, 535], "digit_resolut": [527, 535], "dim": 770, "dimens": [441, 442, 443, 450, 466, 467, 468, 471, 648, 755], "dimeson": 758, "dir": [763, 765, 769], "direct": [563, 606, 621], "directli": [0, 3, 4, 268, 305, 379, 757, 766, 773], "directori": [733, 735, 739, 746, 747, 751, 754, 757, 758, 771], "dirnam": 754, "disabl": [73, 81, 576, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765, 800], "discov": 768, "discret": [62, 108, 379, 431, 489, 490, 653, 765], "discrete_sweep": 653, "disjoint": [576, 577], "dispatch": [753, 754, 755, 756, 757, 758, 760, 761], "dispatch_queu": [753, 754, 755, 756, 757, 758, 760, 761], "dispatch_shel": [753, 754, 755, 756, 757, 758, 760, 761], "displai": [742, 745, 752, 757, 758, 763, 767], "dissip": 677, "distanc": [379, 437, 635, 641, 775], "distance_threshold": 641, "distribut": [425, 495, 744, 756, 765], "divid": 641, "djordjev": 584, "do": [362, 452, 742, 744, 745, 756, 767, 771, 772], "do214aa": 754, "do_cutout": 457, "do_cutout_subdesign": [8, 379, 747, 749, 750, 774, 800], "do_execut": [753, 754, 755, 756, 757, 758, 760, 761], "do_lambda_refin": 379, "do_pin_group": 379, "do_pingroup": 73, "doc": [742, 767], "document": [684, 741, 744, 745, 756, 771], "doe": [73, 98, 221, 252, 253, 623, 634, 744, 745, 746, 748, 749, 753, 758, 759, 766], "doesn": 758, "domain": [663, 745, 748], "don": [524, 766], "dorollov": [753, 754, 755, 756, 757, 758, 760, 761], "dotnet": [11, 18, 38, 46, 63, 64, 65, 66, 69, 75, 100, 101, 105, 111, 116, 126, 129, 133, 134, 135, 136, 139, 142, 145, 146, 147, 148, 153, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 189, 208, 212, 220, 221, 227, 228, 241, 260, 263, 264, 268, 269, 270, 271, 272, 286, 291, 296, 299, 300, 305, 306, 307, 308, 309, 324, 330, 334, 347, 353, 354, 361, 372, 375, 377, 379, 380, 385, 387, 388, 390, 393, 394, 397, 438, 440, 463, 474, 505, 511, 513, 522, 533, 544, 546, 547, 548, 549, 550, 557, 559, 560, 565, 566, 568, 571, 572, 574, 580, 581, 582, 583, 584, 585, 586, 588, 598, 603, 614, 617, 618, 619, 625, 629, 631, 635, 637, 638, 644, 645, 650, 651, 652, 653, 669, 674, 683, 685, 694, 699, 710, 715, 741, 744, 745, 746, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 772], "doubl": [73, 96, 379, 400, 649, 706, 707, 708, 709], "down": [31, 746], "download": [743, 746, 747, 748, 750, 754, 760, 761, 763, 765, 769, 770, 771, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "download_fil": [747, 748, 750, 751, 754, 755, 756, 757, 760, 761, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "dq4": 126, "draw": [22, 758], "drill": [214, 215, 252, 253, 755], "drill_depth": [252, 253], "drill_diamet": [252, 253], "driver": 751, "due": [554, 746], "dummy_layermap": 760, "dump": [763, 765], "dure": [73, 379, 393, 421, 437, 451, 760, 771], "duroid": [744, 745], "e": [543, 706, 709, 742, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 767], "e_lay": 745, "each": [379, 452, 548, 557, 586, 615, 745, 746, 749, 754, 758, 761], "earlier": 771, "eas": 769, "easi": [379, 769], "edb": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 20, 32, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 85, 87, 88, 90, 91, 92, 94, 95, 96, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 115, 116, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 145, 146, 147, 148, 153, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 177, 179, 180, 189, 212, 213, 221, 227, 235, 243, 246, 260, 295, 296, 332, 334, 336, 337, 344, 346, 347, 361, 368, 375, 377, 379, 381, 383, 384, 386, 391, 470, 472, 505, 506, 513, 516, 517, 518, 520, 521, 522, 524, 527, 528, 529, 530, 531, 532, 533, 535, 544, 552, 553, 554, 575, 576, 580, 586, 590, 598, 602, 605, 619, 623, 626, 630, 635, 636, 639, 640, 644, 649, 650, 651, 652, 653, 655, 656, 658, 659, 661, 668, 669, 671, 672, 683, 695, 696, 702, 706, 707, 708, 709, 711, 713, 718, 741, 763, 769, 771, 772, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 803], "edb1": [88, 706, 707, 708, 709], "edb2": [88, 707, 708, 709], "edb_3dedbapp": 513, "edb_class": [63, 651], "edb_configur": [763, 765], "edb_cor": [11, 18, 38, 46, 63, 64, 65, 66, 69, 75, 100, 101, 105, 111, 116, 126, 139, 153, 161, 164, 167, 174, 176, 177, 189, 208, 212, 220, 221, 227, 228, 241, 260, 263, 264, 268, 269, 270, 271, 272, 286, 291, 296, 299, 300, 305, 306, 307, 308, 309, 324, 330, 334, 347, 353, 354, 361, 362, 364, 372, 375, 377, 379, 380, 385, 387, 388, 390, 394, 397, 438, 440, 463, 474, 505, 511, 513, 516, 522, 533, 544, 546, 547, 548, 549, 550, 556, 557, 559, 560, 565, 566, 568, 571, 572, 574, 580, 581, 582, 583, 584, 585, 586, 588, 598, 602, 603, 614, 617, 618, 619, 625, 629, 631, 635, 637, 638, 644, 645, 650, 651, 652, 653, 669, 674, 683, 685, 694, 699, 710, 715, 744, 745, 746, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763], "edb_data": [18, 38, 46, 75, 76, 111, 116, 126, 139, 153, 161, 167, 174, 176, 177, 189, 212, 220, 221, 227, 228, 241, 260, 263, 268, 269, 270, 271, 272, 286, 291, 296, 299, 305, 306, 307, 308, 309, 324, 330, 334, 347, 353, 354, 361, 362, 364, 372, 375, 377, 379, 380, 385, 387, 388, 390, 394, 397, 438, 440, 463, 474, 505, 511, 514, 515, 516, 522, 533, 539, 541, 543, 546, 547, 548, 549, 550, 557, 559, 560, 565, 566, 568, 571, 603, 614, 617, 618, 625, 629, 631, 635, 637, 638, 644, 645, 650, 652, 653, 654, 674, 685, 694, 699, 710, 715, 744, 745, 746, 748, 753, 758, 759, 760], "edb_edge_port": 787, "edb_extended_net": 139, "edb_fil": [77, 104, 575, 770], "edb_full_path": 751, "edb_hfss": 513, "edb_layout": [221, 544], "edb_logg": [753, 754, 755, 756, 757, 758, 760, 761], "edb_net": [161, 598], "edb_obj": 111, "edb_object": [11, 116, 260, 296, 683], "edb_pad_properti": 177, "edb_padstack": [177, 189, 619], "edb_padstack_inst": 212, "edb_padstackinst": 212, "edb_path": [524, 761], "edb_prim": 347, "edb_siwav": 651, "edb_termin": 296, "edb_vers": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761], "edbapp": [6, 8, 61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 79, 80, 81, 85, 87, 90, 91, 92, 94, 95, 97, 100, 101, 105, 106, 107, 108, 109, 213, 221, 227, 513, 517, 518, 520, 521, 528, 531, 532, 544, 598, 619, 635, 644, 650, 651, 655, 656, 658, 659, 661, 668, 671, 672, 747, 751, 756, 759, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "edbarc": [335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346], "edbcompon": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 74, 100, 101, 105, 164, 263, 299, 353, 749], "edbcomponentdef": 78, "edbdifferentialpairdata": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "edbdotnet": [753, 754, 755, 756, 757, 758, 760, 761], "edbextendednetdata": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 167], "edbhfss": [1, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "edblay": [2, 116, 694], "edblayout": [545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 741], "edblib": [260, 296], "edbnet": [1, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 741], "edbnetclassdata": [154, 155, 156, 157, 158, 159, 160], "edbnetsdata": [38, 137, 138, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 220, 241, 286, 324, 372, 603, 614, 617, 618], "edbpadproperti": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "edbpadstack": [1, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 741], "edbpadstackinst": [46, 74, 75, 94, 174, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 270, 271, 272, 291, 306, 307, 308, 309, 330, 629, 631, 635, 637, 638, 644, 645, 650, 674, 746, 748, 753, 758], "edbpath": [88, 696, 706, 707, 708, 709, 713, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "edbpolygon": [744, 745, 753], "edbprimit": [176, 221, 268, 272, 291, 305, 309, 330, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 522, 533, 546, 547, 548, 549, 550, 557, 559, 560, 565, 566, 568, 571], "edbsiwav": [1, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682], "edbstatist": 555, "edbvalu": [112, 113, 114, 115, 511, 741], "edbvers": [0, 1, 2, 3, 4, 5, 6, 8, 9, 88, 126, 139, 153, 161, 177, 189, 212, 221, 334, 336, 337, 346, 347, 544, 598, 619, 651, 652, 696, 706, 707, 708, 709, 713, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 791, 793, 795, 796, 798, 799, 801, 803], "edc": 110, "edg": [260, 268, 269, 296, 305, 306, 482, 516, 522, 523, 524, 525, 527, 530, 533, 789], "edge_numb": 759, "edgetermin": [260, 296], "edit": [1, 711, 766, 792, 797], "edit_hfss_ext": 759, "editor": [747, 749, 750], "effici": 766, "effort": 766, "egaci": 516, "eight": [708, 709], "either": [88, 190, 234, 339, 340, 349, 363, 367, 381, 384, 391, 707, 708, 709], "el": 754, "elaps": [744, 745, 746, 747, 748, 750, 751, 754, 755, 759, 761, 765], "elapsed_tim": [753, 754, 755, 757, 758, 760, 761], "elav": 238, "electr": [747, 749], "electro": 766, "electromagnet": 766, "electron": [7, 326, 706, 766, 769], "electronicsdesktop": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "element": [723, 745, 801], "elev": [34, 60, 238, 259, 685, 706, 708, 709, 754], "elif": 754, "elig": 603, "els": [746, 750, 754, 758], "email": [742, 767, 771], "embed": 754, "emi": 7, "emit": [753, 754, 755, 756, 757, 758, 760, 761], "emp": 379, "empti": [707, 708, 745, 765], "enabl": [28, 223, 267, 304, 379, 404, 685, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 771, 801], "enable_rough": 685, "enable_stdout_log": [753, 754, 755, 756, 757, 758, 760, 761], "enclos": 379, "end": [516, 522, 523, 525, 527, 533, 550, 557, 604, 622, 743, 747, 748, 749, 787], "end_cap_styl": [550, 758, 759], "end_coordin": 336, "end_on_lower_pad": [201, 621], "end_tim": [753, 754, 755, 757, 761], "end_with": 604, "endlay": 622, "endpoint": 773, "energi": 477, "enforc": [379, 405, 406, 524], "enforce_caus": 379, "enforce_pass": 379, "enhanced_low_freq_accuraci": 801, "ensur": [742, 750, 767], "ensure_ascii": [763, 765], "enter": 110, "entir": [227, 379, 635, 795], "enumer": [73, 179, 180, 639, 640, 642], "environ": [769, 771, 772], "equal": [557, 620, 702], "equipotenti": 223, "error": [379, 399, 402, 407, 418, 422, 424, 425, 435, 477, 685, 744, 745, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763], "especi": 458, "est": [388, 390], "est_json": [388, 390], "etch": [453, 460, 685], "etch_factor": 685, "evalu": [73, 444, 535, 555, 612, 635, 775], "evaluate_area": 555, "even": [110, 379, 758], "event": [744, 753, 754, 755, 756, 757, 758, 759, 760, 761], "eventu": 379, "ex": [662, 754], "exampl": [61, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 87, 88, 90, 91, 92, 94, 95, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 126, 139, 153, 161, 167, 177, 189, 212, 213, 221, 227, 245, 260, 296, 334, 336, 337, 346, 347, 379, 381, 383, 384, 388, 390, 506, 513, 516, 517, 520, 521, 522, 524, 528, 531, 532, 533, 544, 556, 557, 575, 576, 586, 598, 602, 605, 619, 635, 644, 650, 651, 652, 655, 656, 658, 659, 661, 668, 671, 672, 695, 696, 702, 706, 707, 708, 709, 713, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 764, 765, 767, 768, 769, 770, 773, 774, 775, 785, 787, 788, 790, 798, 801], "exc": 296, "exception_list": 605, "excit": [5, 379, 533, 536, 741, 750, 784], "excitationdifferenti": [516, 522], "exec": [753, 754, 755, 756, 757, 758, 759, 760, 761], "execut": [662, 745, 747, 749, 750], "execute_request": [753, 754, 755, 756, 757, 758, 760, 761], "exist": [29, 73, 98, 214, 215, 588, 623, 744, 745, 746, 747, 748, 749, 750, 753, 754, 758, 759, 760, 761, 766, 769, 770, 787, 795], "expand": [747, 750, 751, 755, 761, 765], "expans": [379, 447, 563, 775], "expansion_s": [755, 775], "expect": [258, 376, 753], "explain": 771, "explicitli": [110, 748, 754, 771], "explor": 773, "export": [67, 82, 83, 104, 379, 388, 662, 722, 723, 724, 725, 763, 769], "export_dc_power_data_to_icepak": 736, "export_element_data": 7, "export_json": [8, 747], "export_result": 754, "export_siwave_dc_result": 754, "export_siwave_report": 754, "export_to_ipc2581": 755, "export_touchston": 662, "express": [744, 747, 756, 765], "extend": [3, 167, 227, 550, 605, 635, 765, 766, 769], "extend_domain": 748, "extended_net": [3, 139, 751], "extendednet": [142, 146], "extens": [469, 747, 750], "extent": [311, 333, 379, 441, 442, 443, 448, 450, 466, 467, 468, 471, 515, 516, 522, 525, 533, 538, 541, 749, 750, 760, 775, 802], "extent_defeatur": 755, "extent_typ": [751, 755, 765], "extern": [98, 478, 769], "extra": [22, 379], "extra_soldermask_clear": 22, "extract": 769, "extrem": 766, "f": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 793], "f28": 754, "f29": 754, "f7": 788, "facet": [343, 379], "facilit": [744, 766], "factor": [311, 333, 414, 447, 453, 466, 467, 468, 471, 516, 522, 525, 533, 685, 775], "fail": [61, 67, 68, 71, 73, 74, 76, 77, 79, 81, 86, 96, 104, 106, 107, 108, 109, 190, 221, 230, 354, 381, 383, 384, 403, 506, 514, 515, 519, 526, 527, 529, 539, 541, 543, 548, 549, 552, 553, 563, 599, 612, 620, 623, 626, 641, 647, 654, 690, 701, 702, 720, 722, 723, 724, 725, 728, 734, 737, 738, 742, 767], "failur": [379, 437], "fals": [8, 12, 23, 28, 30, 31, 61, 67, 68, 71, 73, 74, 75, 76, 77, 79, 80, 81, 86, 88, 96, 104, 106, 107, 108, 109, 120, 121, 169, 175, 190, 220, 221, 227, 228, 230, 233, 252, 253, 354, 365, 379, 381, 383, 384, 388, 390, 403, 404, 405, 406, 408, 421, 426, 431, 434, 436, 439, 448, 451, 452, 454, 455, 456, 457, 465, 466, 467, 468, 469, 470, 471, 473, 475, 478, 481, 484, 485, 494, 495, 496, 497, 499, 502, 506, 514, 515, 519, 524, 526, 527, 529, 539, 541, 543, 548, 549, 552, 553, 554, 555, 561, 563, 573, 575, 576, 578, 579, 599, 608, 611, 612, 616, 620, 621, 623, 626, 634, 635, 641, 645, 647, 653, 654, 662, 669, 685, 690, 695, 696, 701, 702, 706, 707, 708, 709, 720, 722, 723, 724, 725, 728, 734, 736, 737, 738, 744, 745, 746, 747, 749, 750, 751, 755, 757, 759, 763, 765, 774, 796, 800, 801], "familiar": [742, 767], "far": 750, "far_field": 745, "farrad": 383, "fast": [750, 766], "faster": 772, "fastest": [576, 766], "fbga1517": 754, "featur": [426, 456, 741, 742, 767, 771], "feed": 745, "feedback": 771, "fenc": 641, "few": 758, "field": [110, 379, 801], "fieldplot": 745, "fig": 745, "figur": [744, 745, 747], "figurecanvasagg": [744, 745, 746, 747, 753, 754, 755, 757, 758, 759, 760, 761, 763], "file": [1, 13, 14, 82, 83, 98, 99, 106, 110, 379, 388, 389, 390, 458, 479, 480, 491, 498, 504, 589, 590, 594, 595, 662, 676, 695, 702, 706, 727, 730, 742, 743, 744, 745, 746, 747, 748, 749, 750, 753, 754, 756, 757, 758, 759, 761, 764, 766, 767, 774, 775, 785, 787, 788, 790, 795, 798, 801], "file_cfg": 763, "file_edb": [763, 765], "file_format": 695, "file_json": 765, "file_path": [13, 14, 83, 99, 702, 722, 723, 724, 725, 765], "filenam": [379, 748], "fill": [118, 685], "fill_materi": 763, "fillmateri": [685, 791, 796, 800], "filter": [91, 560, 561, 563, 573, 629, 631, 632, 633, 636], "final": [746, 753], "find": [84, 169, 221, 227, 272, 309, 575, 576, 577, 578, 579, 604, 607, 628, 635, 769], "findbynam": [134, 146, 168], "finish": [193, 747], "finit": 745, "firewal": 771, "first": [530, 557, 564, 710, 744, 745, 747, 748, 749, 750, 754, 757, 758, 761, 771, 801], "first_lay": [710, 760], "first_lin": [744, 745], "first_patch": [744, 745], "fist": 749, "fit": [691, 744, 756], "fit_al": 745, "fix": [169, 379, 554, 575, 576, 577, 578, 579, 742, 750, 767, 797, 798], "flag": [28, 29, 232, 278, 316, 366], "flake8": [742, 767], "flat": [550, 746, 748, 758, 759, 787], "flip": [88, 696, 706, 707, 708, 709, 760], "flipped_stackup": [706, 707, 708, 709], "float": [12, 15, 22, 34, 51, 60, 71, 73, 74, 75, 92, 107, 108, 109, 113, 170, 190, 193, 198, 199, 200, 216, 221, 227, 238, 239, 251, 252, 253, 259, 262, 298, 337, 341, 342, 345, 349, 351, 356, 357, 379, 381, 383, 384, 398, 410, 413, 414, 420, 424, 427, 428, 429, 430, 435, 441, 442, 443, 444, 447, 450, 464, 477, 487, 493, 510, 516, 517, 518, 520, 521, 522, 523, 524, 525, 528, 531, 532, 533, 547, 550, 552, 564, 581, 582, 583, 584, 603, 605, 620, 635, 641, 645, 647, 653, 655, 656, 657, 658, 659, 660, 667, 668, 669, 670, 671, 672, 673, 674, 685, 693, 697, 708, 709, 717, 719, 801], "flot": [399, 402, 407, 412, 416, 417, 418, 419, 422, 425, 437], "flow": [379, 766], "folder": [1, 458, 742, 744, 745, 746, 747, 749, 750, 751, 753, 754, 758, 759, 760, 761, 763, 765, 766, 767, 769], "follow": [3, 72, 110, 742, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 756, 759, 760, 762, 763, 764, 765, 767, 769, 770], "footprint": 748, "forc": [379, 524, 541], "force_circuit_port": 524, "form": [92, 641], "format": [185, 192, 379, 492, 548, 556, 695, 702, 744, 745, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766], "formula": 190, "found": [91, 225, 227, 358, 379, 610, 620, 635, 702, 747], "fpath": [336, 337, 346, 695], "fr4": [748, 800], "fr4_epoxi": [685, 693, 744, 745, 746, 748, 749, 753, 758, 759], "frac": 745, "framework": 771, "free": [744, 756, 769], "freedom": 746, "freq": [586, 745, 759], "freq_sweep": 765, "freqstart": [744, 746, 759], "freqstop": [744, 746, 759], "frequenc": [379, 395, 396, 401, 405, 406, 413, 420, 428, 429, 430, 432, 433, 439, 582, 584, 586, 653, 663, 745, 747, 748, 749, 750, 760, 765, 800, 801], "frequency_sweep": [748, 751, 801], "frequency_xtalk": 663, "frequenvci": 801, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 85, 87, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 126, 139, 153, 161, 167, 170, 177, 189, 201, 212, 213, 214, 215, 221, 227, 252, 253, 260, 296, 334, 347, 379, 388, 390, 452, 505, 506, 513, 517, 518, 520, 521, 524, 527, 528, 531, 532, 544, 555, 557, 559, 563, 576, 577, 580, 586, 587, 588, 590, 594, 595, 598, 602, 605, 612, 619, 630, 635, 636, 646, 647, 651, 652, 655, 656, 658, 659, 661, 668, 671, 672, 677, 683, 695, 702, 710, 711, 712, 741, 742, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 767, 768, 771, 774, 775, 777, 778, 779, 782, 784, 785, 786, 787, 788, 791, 793, 795, 796, 798, 799, 800, 801, 803], "fromlay": [645, 744, 745, 749], "full": [82, 98, 106, 110, 458, 589, 590, 594, 727, 728, 730, 732, 733, 735, 738, 739, 765, 769], "full_comp_nam": 748, "fulli": [123, 221, 362], "func": [110, 744, 745], "function": [11, 126, 139, 153, 161, 177, 189, 212, 334, 347, 741, 744, 745, 746, 747, 748, 751, 758, 765, 766], "furnish": [744, 756], "futur": 772, "g": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761], "g4": 109, "gap": [67, 68, 104, 260, 265, 525, 744, 745, 787], "gap_port": [260, 787], "gapport": [261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 741], "gds_fn": 760, "gds_in": 760, "gds_out": 760, "gener": [73, 379, 393, 448, 454, 605, 742, 744, 745, 746, 747, 748, 754, 755, 756, 757, 758, 759, 760, 761, 765, 767, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 800, 801, 803], "general_method": [744, 755, 756, 759, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "generate_excit": 800, "generate_solder_bal": 379, "generate_unique_folder_nam": [756, 759, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "generate_unique_nam": [744, 755, 759], "geometri": [178, 225, 358, 573, 757, 801], "geometrytyp": 630, "get": [25, 39, 50, 52, 57, 88, 93, 96, 160, 167, 183, 188, 201, 207, 216, 218, 226, 228, 235, 236, 247, 269, 270, 282, 289, 306, 307, 320, 322, 327, 328, 336, 337, 346, 348, 356, 357, 359, 362, 368, 369, 370, 373, 374, 507, 509, 510, 511, 512, 534, 540, 542, 561, 593, 596, 600, 605, 606, 615, 629, 630, 631, 636, 675, 680, 681, 682, 741, 754, 763, 771, 773, 783, 793], "get_aedt_pin_nam": 213, "get_bounding_box": 782, "get_center_lin": 761, "get_component_by_nam": [88, 707, 708, 709], "get_component_net_connection_info": 754, "get_component_placement_vector": 707, "get_data_from_db": 763, "get_dcconnected_net_list": 754, "get_extended_net": 605, "get_pin_from_compon": [0, 71, 518, 521, 528, 532, 656, 659, 668, 672, 777, 778, 779, 784, 786], "get_plot_data": [753, 754, 755, 757, 761], "get_polygons_by_lay": [556, 557, 761], "get_power_ground_net": 603, "get_powertre": 754, "get_rat": 754, "get_solution_data": [744, 745, 746, 747, 765], "get_statist": [781, 793], "get_touchstone_data": 759, "get_traces_for_plot": 745, "getid": [524, 787], "getnam": [85, 213, 754, 755, 756, 757, 760, 761], "getprimitivetyp": [524, 787], "gettempdir": 744, "getter": [744, 747], "ghz": [584, 586, 744, 745, 746, 748, 759, 799], "git": [742, 767], "github": [742, 767], "giva_angle_rad": 758, "give": [108, 379, 557, 559, 775], "given": [108, 190, 225, 227, 230, 358, 528, 548, 560, 576, 577, 604, 632, 634, 635, 647, 649, 668, 781], "glue": 685, "gnd": [6, 8, 73, 74, 139, 161, 227, 269, 306, 379, 517, 520, 531, 553, 556, 557, 576, 606, 626, 635, 641, 655, 658, 671, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 757, 758, 759, 761, 765, 774, 775, 778, 779, 781, 784, 786, 787, 788, 791, 800, 801], "gnd1": 763, "gnd2": 763, "gnd_dict": 748, "gnd_dp": [747, 754, 757], "gnd_net_name_prefer": [269, 270, 271, 306, 307, 308], "gnd_poli": 746, "gnd_shape": 746, "gnd_via": [744, 745], "gndpinlist": 72, "go": 765, "good": [379, 524], "grant": [744, 756], "graphic": [747, 749, 750, 751, 752, 766, 790], "greatli": 379, "grm32_dc0v_25degc": 747, "grm32_dc0v_25degc_seri": [61, 747, 765], "ground": [382, 465, 501, 599, 603, 606, 611, 652, 745, 746, 748, 749, 754, 758, 765], "ground_lay": [749, 758], "ground_net": [606, 609, 754], "group": [67, 72, 74, 77, 248, 379, 452, 517, 600, 643, 655, 657, 660, 664, 665, 666, 670, 673, 678, 754, 784, 786], "group_nam": [72, 664, 665, 786, 788], "grpc": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "gt": [744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "gui": 379, "guid": [742, 767, 773], "guidanc": [742, 767], "guidelin": 767, "gvia": [758, 759], "gvia_angl": 758, "gvia_num": 758, "gvia_num_sid": 758, "h1": 745, "h2": 745, "h28": 754, "h29": 754, "h3d": [744, 745, 746, 747, 748, 749, 751, 759, 765], "ha": [74, 221, 379, 403, 460, 524, 527, 564, 576, 605, 621, 702, 706, 742, 744, 745, 746, 747, 748, 749, 750, 751, 755, 759, 765, 767, 769], "had": 744, "handl": [74, 379, 753, 754, 755, 756, 757, 758, 759, 760, 761, 766], "handler": [753, 754, 755, 756, 757, 758, 760, 761], "has_hol": 621, "has_rais": [753, 754, 755, 756, 757, 758, 760, 761], "have": [349, 379, 457, 458, 461, 527, 623, 702, 747, 749, 750, 758, 769, 771], "head": 763, "header": [110, 754], "headless": 766, "heal": 801, "healing_opt": 801, "height": [54, 73, 88, 96, 108, 175, 190, 548, 549, 557, 616, 691, 710, 744, 745, 800], "help": [745, 750, 769, 770, 771], "henc": 749, "henri": 383, "here": [379, 749, 771], "herebi": [744, 756], "hfss": [1, 5, 9, 10, 67, 68, 273, 310, 379, 395, 396, 397, 398, 399, 400, 402, 404, 409, 411, 413, 415, 427, 434, 441, 442, 443, 465, 473, 513, 514, 515, 516, 517, 518, 520, 521, 522, 524, 526, 528, 529, 531, 532, 533, 538, 623, 747, 749, 750, 751, 756, 759, 760, 766, 769, 778, 785, 787, 789, 790, 802], "hfss3dlayout": [379, 393, 744, 745, 746, 747, 748, 749, 750, 759, 765], "hfss_extent_info": 748, "hfss_port_set": 801, "hfss_region": 685, "hfss_solver_set": [748, 801], "hfss_type": 525, "hfssdlayout": 741, "hierarchi": [11, 64, 65, 66, 69, 88, 100, 101, 105, 164, 747, 749], "high": [7, 379, 395, 766, 771], "high_frequ": 801, "higher": [582, 605, 748], "higher_frequ": 582, "highli": 379, "holder": [744, 756], "hole": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 239, 621, 622], "hole_rang": 621, "hole_wall_angl": 190, "holedepth": 190, "holediam": [4, 190, 621, 622, 744, 745, 746, 749, 758, 759, 796], "holediamet": 190, "honor": 456, "hook": [742, 767], "horizont": [311, 441, 466, 516, 522, 523, 525, 533], "horizontal_extent_factor": [516, 522, 525, 533, 748], "horizonz": 379, "host": [88, 742, 765, 767], "hosting_cmp": [88, 707, 708, 709], "hosting_compon": [88, 707], "hosting_component_pin1": [88, 707], "hosting_component_pin2": [88, 707], "how": [260, 296, 742, 743, 744, 745, 746, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 768, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "howev": 769, "hsd_v1": [747, 750, 751, 754, 755, 756, 757, 761, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 788, 793, 795, 798, 799, 801, 803], "hsg": [381, 383, 384], "htm": 754, "html": 379, "http": [742, 767], "i": [0, 1, 3, 4, 7, 10, 12, 28, 30, 31, 67, 68, 72, 73, 74, 77, 80, 82, 85, 89, 91, 94, 97, 98, 106, 107, 108, 110, 120, 121, 175, 190, 213, 216, 220, 221, 223, 227, 228, 230, 231, 232, 233, 234, 239, 240, 245, 252, 253, 258, 267, 269, 276, 277, 278, 279, 280, 281, 292, 301, 304, 306, 314, 315, 316, 317, 318, 319, 338, 339, 340, 343, 349, 363, 365, 366, 367, 376, 379, 382, 394, 405, 406, 421, 431, 436, 438, 439, 444, 451, 452, 454, 457, 458, 466, 467, 468, 469, 470, 471, 472, 474, 501, 508, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 543, 547, 548, 549, 550, 552, 557, 561, 563, 573, 576, 577, 599, 604, 605, 606, 608, 610, 611, 616, 620, 621, 622, 623, 632, 633, 634, 635, 636, 641, 645, 648, 649, 652, 653, 655, 657, 658, 659, 661, 662, 663, 665, 667, 668, 671, 672, 674, 685, 690, 693, 695, 701, 702, 706, 707, 708, 709, 710, 711, 719, 720, 722, 723, 725, 728, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 768, 769, 771, 772, 773], "i1": 754, "i22": 786, "ic": [7, 108, 760], "ic2": 754, "icepak": [379, 480, 676, 677, 724, 737, 766, 769], "icepak_simulation_nam": 737, "id": [225, 358, 516, 522, 523, 525, 533, 559, 592, 628, 629, 632, 649, 700, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "idea": 771, "ident": [753, 754, 755, 756, 757, 758, 760, 761], "identifi": [691, 744, 756], "ignor": [67, 74, 77, 175, 379, 407, 419, 457, 616, 710], "illeg": [578, 579], "illustr": [752, 762, 764], "imag": [175, 293, 616, 710, 749, 750], "impact": [379, 563, 750], "imped": [67, 74, 77, 379, 381, 384, 517, 518, 523, 524, 525, 533, 541, 655, 656, 657, 663, 667, 670, 673, 784], "impedance_valu": [517, 655], "implement": [7, 603, 772], "impli": [744, 756], "implicitli": 10, "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 87, 90, 91, 92, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 126, 139, 153, 161, 167, 177, 189, 212, 213, 221, 260, 296, 334, 347, 379, 388, 390, 481, 506, 513, 517, 518, 520, 521, 528, 531, 532, 544, 586, 598, 605, 619, 651, 652, 655, 656, 658, 659, 661, 668, 671, 672, 695, 702, 741, 746, 748, 749, 754, 755, 758, 761, 765, 766, 770, 772, 773, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 791, 793, 795, 796, 798, 799, 800, 801, 803], "import_bom": 747, "import_definit": 747, "import_dummy_net": 760, "import_layout_pcb": 760, "import_opt": 760, "import_stackup": 748, "improv": [379, 746], "inc": [744, 756], "inch": 755, "includ": [175, 230, 231, 349, 379, 445, 457, 564, 608, 616, 632, 633, 695, 741, 744, 745, 747, 751, 755, 756, 757, 760, 763, 765, 766, 771, 775, 800], "include_material_with_lay": 695, "include_only_selected_net": 800, "include_parti": 230, "include_pow": 605, "include_sign": 605, "include_void": 349, "increas": 766, "increment": 765, "ind": [12, 747], "ind_valu": 107, "indent": [763, 765], "independ": 745, "index": [98, 632, 633, 754, 769, 771, 773], "indic": [28, 29, 232, 278, 316, 366], "individu": 379, "induct": [12, 27, 265, 379, 383, 475, 529, 605], "inductor": [71, 75, 107, 110, 605, 606, 669, 751], "inductor_below": [605, 751], "info": [742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767], "info_tim": [755, 761], "inform": [1, 87, 538, 742, 747, 754, 760, 766, 767, 768, 769, 771, 773, 790], "inherit": [126, 139, 153, 161, 177, 189, 212, 334, 347, 379, 651, 741], "initi": [1, 7, 379, 458, 482, 719, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "initial_posit": 745, "inner": 693, "inner1": 763, "inner2": 763, "inner3": 763, "inner4": 763, "inner5": 763, "inner6": 763, "inner_layer_thick": [693, 749, 758], "input": [65, 356, 357, 379, 719, 751, 758, 761, 765], "input_dict": 597, "input_fil": 390, "inscrib": 221, "insert": [685, 749, 758, 763], "insert_abov": 685, "insert_below": 685, "insert_infinite_spher": 745, "insert_layout_compon": 745, "insid": [110, 221, 362, 378, 386, 695, 770], "instal": [719, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765, 767, 768, 773], "install_pyedb_from_wheelhous": 771, "instanc": [20, 32, 74, 75, 77, 190, 212, 213, 216, 221, 222, 227, 230, 231, 233, 237, 239, 240, 245, 250, 251, 260, 268, 269, 270, 272, 291, 296, 305, 306, 307, 309, 330, 381, 383, 384, 390, 524, 600, 615, 623, 626, 628, 629, 631, 632, 633, 635, 638, 641, 644, 649, 650, 741, 745, 747, 749, 751, 754, 755, 756, 758, 761, 765, 781, 790, 797], "instanti": [379, 754], "instead": [68, 431, 436, 524, 623, 742, 744, 745, 746, 747, 748, 749, 750, 751, 759, 767], "int": [12, 26, 41, 58, 97, 98, 108, 123, 178, 179, 180, 203, 227, 229, 257, 274, 294, 312, 331, 343, 360, 362, 382, 401, 409, 411, 415, 483, 486, 489, 490, 500, 501, 516, 522, 523, 525, 527, 533, 535, 536, 559, 581, 582, 583, 584, 605, 616, 623, 628, 629, 630, 635, 637, 639, 640, 641, 649, 653, 657, 660, 664, 670, 673, 674, 685, 693, 703, 705, 719, 787], "integ": [123, 179, 180, 379, 639, 640], "integr": [7, 64, 379, 750, 760, 766, 776], "intempt": [744, 745, 746, 748, 749, 753, 758, 759], "intend": 766, "inter": 408, "interact": [744, 745, 746, 747, 753, 754, 755, 757, 758, 759, 760, 761, 763, 766, 773], "interactiveshel": [753, 754, 755, 756, 757, 758, 760, 761], "interfac": [745, 746, 747, 751, 754, 766, 768, 771, 773], "intern": [742, 748, 767], "interpol": [410, 424, 431, 436, 744, 746, 759, 765], "interpolation_max_solut": [744, 746, 759], "interpolation_tol_perc": [744, 746, 759], "interpret": [769, 771], "intersect": [230, 362, 577, 632], "intesect": 364, "intrins": 745, "intrinsincdict": 759, "inupt": 65, "invalidboundari": [261, 297], "invert": [707, 708, 709], "invest": 750, "investig": 746, "io_loop": [753, 754, 755, 756, 757, 758, 760, 761], "ipc": 755, "ipc2581_file_nam": 755, "ipc_path": 755, "ipkernel": [753, 754, 755, 756, 757, 758, 760, 761], "ipykernel": [753, 754, 755, 756, 757, 758, 760, 761], "ipykernel_10080": 754, "ipykernel_10352": 755, "ipykernel_10624": 759, "ipykernel_12128": 758, "ipykernel_1316": 761, "ipykernel_7844": 760, "ipykernel_8224": 756, "ipykernel_8752": 753, "ipykernel_9672": 757, "ipykernel_launch": [753, 754, 755, 756, 757, 758, 760, 761], "ipython": [753, 754, 755, 756, 757, 758, 760, 761, 763], "is_act": 674, "is_circuit_port": [220, 787], "is_en": 0, "is_intersect": 761, "is_neg": 685, "is_parallel": [12, 71, 75, 669, 747], "is_paramet": [749, 758], "is_percentag": 745, "is_pin": [645, 749], "is_ready_to_simul": 750, "is_rlc": 71, "is_void": [6, 347, 561], "is_wave_port": 759, "isnul": [135, 147, 158, 171], "isort": [742, 767], "isparallel": 107, "ispowerground": 172, "issu": [379, 554, 768], "istopplac": [649, 744, 745], "isvoid": 347, "iswav": 759, "item": [104, 751, 756, 793], "iter": [589, 745, 747, 750], "its": [403, 550, 706, 744, 756, 769], "j2l1": 8, "j4a2": 109, "j5": [227, 635], "job": 766, "join": [8, 744, 745, 746, 747, 748, 749, 753, 754, 755, 758, 759, 760, 761, 765], "json": [8, 83, 99, 388, 390, 695, 702, 747], "jupyt": [743, 746, 763, 765], "just": 221, "k28": 754, "k29": 754, "kbroadband": 801, "kcurrentsourc": [261, 297], "kdctermin": [261, 297], "keep": [379, 527, 695, 742, 767], "keep_disjoint_pin": 576, "keep_only_main_net": 576, "kei": [77, 501, 567, 569, 570, 740, 744, 745, 746, 747, 748, 749, 751, 754, 758, 765, 793], "kept": 765, "kernelapp": [753, 754, 755, 756, 757, 758, 760, 761], "kernelbas": [753, 754, 755, 756, 757, 758, 760, 761], "keyword": 765, "khz": 748, "kind": [379, 744, 756], "knexximground": [261, 297], "knexximport": [261, 297], "known": 765, "knum25dviastyl": 801, "kvoltageprob": [261, 297], "kvoltagesourc": [261, 297], "kwarg": [116, 125, 581, 582, 583, 584, 585, 586, 684, 686, 687, 688, 689, 753, 754, 755, 756, 757, 758, 760, 761], "l1": 745, "l10": [749, 754, 758], "l2": [745, 748], "l3": 748, "l4": 748, "l5": 748, "l_valu": [71, 75, 383, 669, 779], "lambda": [379, 404, 745, 748], "lamin": [703, 710], "larg": [379, 555, 766], "larger": [641, 766], "laser": 190, "laser_angl": 190, "last": [379, 403, 458, 710, 753, 754, 755, 756, 757, 758, 760, 761], "last_lay": 710, "later": [749, 758, 769, 771], "latest": [719, 742, 767, 772], "lattic": 221, "launch": [10, 326, 516, 522, 525, 533, 741, 748, 749, 750, 765, 766], "launch_inst": [753, 754, 755, 756, 757, 758, 760, 761], "launch_new_inst": [753, 754, 755, 756, 757, 758, 760, 761], "layer": [22, 34, 47, 58, 60, 71, 116, 117, 118, 120, 121, 122, 123, 124, 175, 177, 209, 210, 211, 214, 215, 221, 231, 236, 237, 238, 249, 252, 253, 254, 255, 257, 259, 369, 453, 460, 461, 523, 524, 525, 527, 547, 548, 549, 550, 558, 560, 564, 567, 569, 573, 608, 616, 621, 622, 630, 646, 648, 649, 667, 679, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 698, 700, 702, 704, 705, 707, 708, 709, 710, 711, 712, 713, 715, 716, 718, 741, 746, 747, 748, 749, 750, 751, 754, 755, 757, 758, 759, 760, 761, 763, 765, 787, 789, 790, 800], "layer1": 760, "layer2": 760, "layer_align": 523, "layer_clon": 714, "layer_count": [693, 749, 758], "layer_data": [116, 685, 694, 699, 710, 715, 745, 748, 753], "layer_dict": 759, "layer_map": 760, "layer_nam": [177, 221, 231, 547, 548, 549, 550, 558, 561, 573, 646, 648, 667, 685, 746, 748, 749, 758, 759, 761, 788, 791, 793, 796, 800], "layer_snap_tol": 801, "layer_typ": [116, 684, 685, 686, 687, 688, 689, 744, 745, 746, 748, 753], "layeredbclass": [117, 118, 119, 120, 121, 122, 123, 124, 125, 685, 699, 710, 715, 741], "layernam": 630, "layers_nam": 564, "layout": [10, 31, 32, 82, 134, 146, 165, 168, 225, 227, 233, 358, 379, 403, 412, 419, 524, 527, 535, 536, 539, 544, 555, 572, 574, 575, 604, 635, 643, 678, 691, 696, 697, 702, 706, 707, 708, 709, 717, 746, 747, 748, 751, 755, 756, 758, 760, 766, 774, 775, 785, 787, 788, 790, 792, 798, 801], "layout_count": [749, 758], "layout_exampl": 770, "layout_stat": 793, "layout_valid": [574, 575, 576], "layoutcompon": 745, "layoutinst": 243, "layoutobjinst": 243, "layoutvalid": [575, 576, 577, 578, 579], "ld_library_path": 769, "learn": [768, 773, 776, 780, 783, 789, 790, 792, 794, 797, 802], "least": 775, "leav": 379, "left": [15, 262, 298, 350, 351, 535, 549], "legaci": [744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 771], "legend": [175, 616], "len": [746, 754, 755, 761], "length": [75, 252, 253, 302, 482, 557, 744, 745, 747, 755, 801], "lengthmeshoper": 748, "less": 576, "level": [379, 653, 766], "leverag": 379, "liabil": [744, 756], "liabl": [744, 756], "lib": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "lib64": 769, "librari": [260, 296, 583, 596, 744, 745, 746, 748, 749, 753, 758, 759, 765, 773], "licens": [744, 756, 769], "like": [240, 379, 745, 749, 753, 766, 769], "limit": [227, 635, 744, 748, 754, 756, 758], "line": [6, 437, 641, 744, 745, 753, 754, 755, 756, 757, 758, 759, 760, 761, 766, 771], "line_3": 759, "linear": [379, 433, 653, 746, 748, 751, 759, 801], "linear_arrai": [744, 745], "linear_array0": 745, "linear_count": 765, "linear_scal": 765, "lineararrai": [744, 745], "link": [741, 769], "linux": 766, "linux64": 769, "list": [1, 15, 17, 40, 45, 71, 72, 73, 74, 75, 76, 77, 78, 80, 89, 90, 91, 92, 94, 95, 97, 102, 109, 164, 169, 174, 175, 176, 184, 186, 196, 200, 208, 209, 216, 221, 225, 226, 227, 231, 237, 245, 248, 250, 262, 264, 270, 271, 298, 300, 307, 308, 334, 335, 336, 343, 344, 346, 350, 351, 352, 356, 357, 358, 359, 361, 375, 377, 378, 379, 444, 445, 446, 453, 459, 460, 461, 462, 463, 516, 519, 522, 523, 524, 525, 527, 530, 533, 535, 545, 546, 548, 549, 550, 553, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 571, 573, 575, 576, 577, 586, 599, 602, 603, 605, 606, 608, 611, 612, 613, 616, 625, 626, 629, 631, 632, 633, 635, 636, 637, 638, 643, 645, 664, 667, 669, 678, 679, 700, 710, 747, 749, 751, 754, 757, 761, 765, 769, 781, 784, 787, 793], "list_of_deleted_rlc": 80, "list_of_padstack_inst": 221, "literal_ev": 608, "load": [10, 98, 389, 590, 591, 674, 744, 745, 746, 747, 748, 751, 759, 766, 774, 775, 785, 787, 788, 790, 798, 801], "load_ipc_model": 755, "load_regulation_curr": 674, "load_regulation_perc": 674, "loc": 653, "local": [379, 493, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765], "local_path": 760, "locat": [74, 175, 379, 524, 527, 616, 679, 710, 748, 749, 750, 771, 787], "lock": [727, 745], "log": [379, 401, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 801], "log_scal": 765, "log_x": 759, "logarithm": 748, "logcount": 433, "logger": [742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767], "logic": 755, "longer": [742, 767], "longest": [370, 374], "look": [527, 655, 658, 671, 773], "loop": [379, 503, 576, 577], "loss": [582, 583, 584, 586], "loss_tan": 586, "loss_tang": 586, "loss_tangent_at_frequ": 584, "loss_tangent_high": 582, "loss_tangent_low": 582, "lot": 379, "low": [396, 801], "low_frequ": 801, "lower": [15, 34, 238, 262, 298, 350, 351, 379, 523, 535, 549, 582, 605, 756], "lower_freq": 582, "lower_frequ": 582, "lower_left": 350, "lower_left_point": [6, 549, 759], "lowerleftupperright": 549, "lt": [744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "lump": [524, 527, 623], "lvalu": [529, 778], "m": [742, 753, 754, 755, 757, 758, 760, 761, 767], "m1": [748, 801], "m15": 754, "m2": 801, "m28": 754, "m29": 754, "m3": 239, "m_dq": 73, "m_ma": 3, "machin": 743, "mag_": [745, 759], "magnitud": [410, 660, 673], "mai": [745, 747, 748, 749, 750, 771], "main": [0, 3, 4, 545, 548, 747, 750, 751, 754, 755, 756, 757, 761, 763, 765], "main_glob": [753, 754, 755, 756, 757, 758, 759, 760, 761], "main_shap": [548, 746], "maintain": [771, 772], "make": [379, 458, 754, 766, 771, 773], "manag": [0, 2, 3, 4, 6, 11, 63, 116, 126, 139, 153, 161, 177, 189, 212, 260, 296, 334, 347, 505, 513, 544, 574, 580, 598, 619, 651, 683, 719, 741, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "mand": 458, "mani": [746, 749, 754, 773], "manipul": [750, 754, 766, 795], "manual": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761], "map": [389, 747, 749, 760], "mask": 763, "materi": [1, 118, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 685, 693, 695, 744, 745, 746, 747, 748, 749, 750, 753, 758, 759, 760, 763, 766, 793], "material_nam": [587, 588, 595, 597], "matplotlib": [175, 608, 616, 710, 744, 745, 753, 758, 759, 760, 763, 793], "matrix": 400, "matter": 702, "max": 745, "max_arc_point": [747, 801], "max_delta_": 748, "max_delta_z0": 801, "max_el": 801, "max_length": [748, 801], "max_limit": [227, 635], "max_mag_delta_": 379, "max_num_pass": [379, 747, 748], "max_refine_per_pass": 801, "max_thick": 710, "max_triangles_wave_port": 801, "maximum": [221, 227, 379, 409, 411, 412, 482, 483, 552, 635, 745, 801], "maximum_surface_devi": 552, "maximumpass": 745, "maxpass": [744, 746, 759], "maxwel": 766, "mean": [557, 766, 790], "measur": [685, 763], "medium": 379, "megtron4": 763, "megtron4_2": 763, "megtron4_3": 763, "memori": [379, 766, 790], "merchant": [744, 756], "merg": [612, 691, 707, 708, 709, 744, 756], "mesh": [379, 395, 396, 398, 399, 402, 403, 404, 409, 411, 413, 414, 416, 417, 427, 434, 482, 484, 485, 487, 488, 493, 494, 641, 745, 748, 801], "mesh_display_attribut": 801, "mesh_freq": 379, "mesh_oper": 748, "messag": [742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 767], "message_text": [753, 754, 755, 756, 757, 758, 760, 761], "messeng": [742, 767], "met1": 760, "met2": 760, "metal": [239, 379, 555, 701], "metal6": 760, "metal_layer_snapping_toler": 760, "meter": [22, 73, 92, 379, 441, 442, 443, 450, 524, 576], "method": [5, 6, 9, 11, 63, 116, 126, 139, 153, 161, 177, 189, 212, 216, 260, 296, 347, 379, 386, 403, 438, 505, 513, 544, 574, 580, 598, 603, 619, 623, 641, 651, 683, 685, 691, 707, 708, 709, 711, 719, 741, 744, 745, 746, 747, 748, 749, 750, 751, 754, 757, 759, 761, 765, 766], "mfg": [252, 253], "mhz": 748, "microstrip": 746, "microvia": [190, 208], "mid": [73, 108, 334, 342], "mid_point": 334, "middl": 524, "midpoint": 356, "might": [110, 379, 524, 742, 767], "min_num_pass": 379, "min_pass": 801, "min_thick": 710, "min_triangles_wave_port": 801, "minim": 543, "minima": 379, "minimum": [379, 415, 416, 417, 418, 419, 486, 487, 488, 620, 641, 801], "minimum_value_to_replac": 620, "minimum_via_numb": 641, "minimum_void_surfac": 379, "misc": [747, 748, 750, 751, 754, 755, 756, 757, 760, 761, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "mit": [744, 756], "miter": 550, "mitig": 771, "mix": [379, 400], "mm": [745, 754, 759], "mod": 747, "mode": [25, 710, 741, 742, 747, 749, 750, 751, 754, 767], "model": [13, 14, 30, 36, 39, 52, 57, 61, 67, 68, 71, 75, 80, 104, 106, 108, 221, 334, 347, 544, 548, 553, 556, 557, 582, 584, 586, 669, 741, 744, 745, 746, 747, 748, 750, 751, 753, 755, 758, 759, 761, 766, 787, 796, 800, 801, 803], "model_nam": 747, "model_typ": [106, 747, 801], "model_unit": 745, "modelnam": 106, "modelpath": 106, "modern": 771, "modif": 754, "modifi": [691, 744, 746, 756, 766, 790], "modul": [10, 674, 682, 741, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 771, 773], "monitor": 745, "mono": 769, "mop": 801, "more": [90, 361, 375, 377, 379, 519, 576, 602, 745, 754, 766, 769, 771, 773], "most": [753, 754, 755, 756, 757, 758, 760, 761, 766, 775, 795], "mount": [31, 88], "mounted_cmp": [88, 707, 708, 709], "mounted_compon": [88, 707], "mounted_component_pin1": [88, 707], "mounted_component_pin2": [88, 707], "ms_clearanc": 759, "ms_length": 759, "ms_space": 746, "ms_width": [746, 759], "msc": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "msg": [753, 754, 755, 756, 757, 758, 760, 761], "much": 766, "multi": [452, 801], "multipl": [208, 466, 467, 468, 471, 530, 757], "multipol": 586, "multithread": [747, 750, 751, 755, 761, 765], "multizon": 703, "must": [73, 75, 110, 379, 382, 516, 522, 523, 524, 525, 533, 623, 641, 702, 741, 750, 769, 771, 775], "my": [742, 767], "my_connector": 748, "my_edb": 379, "my_edb_fil": 77, "my_fil": 379, "my_mp_deby": 586, "my_project": 741, "my_project_vari": 803, "my_report": 379, "my_setup": 652, "my_vari": 803, "myaedb": [260, 296], "myaedbfold": [63, 64, 65, 66, 69, 70, 71, 72, 73, 79, 80, 81, 85, 87, 90, 91, 92, 94, 95, 97, 100, 101, 105, 106, 107, 108, 109, 213, 221, 513, 517, 518, 520, 521, 528, 531, 532, 544, 598, 619, 651, 655, 656, 658, 659, 661, 668, 671, 672], "mydata": 7, "mydcir_4": 754, "myedb": [0, 1, 2, 3, 4, 5, 6, 8, 9, 126, 139, 153, 161, 177, 189, 212, 334, 347], "mygndpingroup": 72, "mymateri": 793, "mymet": 793, "mypad": [177, 189], "myproject": [644, 650], "myvariablenam": 245, "myvariablenamesi": 245, "myvariablenamesx": 245, "myvia": 753, "n": [746, 751], "n_print": 754, "name": [13, 14, 23, 43, 44, 47, 48, 61, 70, 71, 72, 73, 74, 75, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 116, 127, 129, 139, 140, 142, 154, 155, 161, 165, 169, 175, 177, 210, 211, 213, 214, 215, 219, 220, 221, 222, 228, 231, 236, 242, 244, 245, 249, 252, 253, 254, 255, 269, 270, 271, 287, 290, 306, 307, 308, 325, 329, 369, 373, 379, 381, 382, 383, 384, 388, 389, 390, 392, 432, 445, 446, 453, 459, 460, 461, 462, 501, 505, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 547, 548, 549, 550, 553, 556, 558, 560, 563, 564, 567, 569, 570, 573, 575, 576, 578, 581, 582, 583, 584, 585, 586, 588, 592, 594, 595, 604, 607, 608, 609, 610, 611, 612, 613, 616, 621, 622, 623, 626, 627, 629, 631, 632, 633, 634, 636, 638, 641, 645, 646, 648, 649, 652, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 679, 684, 685, 686, 687, 688, 689, 690, 712, 722, 723, 724, 725, 727, 730, 731, 737, 738, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 784, 786, 787, 793, 799, 801], "nan": 763, "nat": 570, "nativ": [379, 766, 772], "nb_patch": [744, 745], "nbottom": 754, "nbpatch": [744, 745], "ncol": 754, "nearest": [227, 635], "necessari": 221, "need": [110, 379, 543, 563, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 766, 769, 772, 775], "neg": [130, 137, 220, 365, 379, 381, 382, 383, 384, 442, 467, 501, 517, 520, 521, 522, 528, 529, 531, 532, 655, 657, 658, 659, 660, 668, 670, 671, 672, 673, 674, 679, 685, 751], "neg_pin": [518, 521, 528, 532, 656, 659, 668, 672], "neg_pin_group_nam": [657, 660, 670, 673, 786], "negative_component_nam": [517, 520, 531, 655, 658, 671], "negative_lay": 679, "negative_loc": 679, "negative_net": 126, "negative_net_nam": [517, 520, 531, 655, 658, 671, 679], "negative_node_compon": [379, 381, 383, 384], "negative_node_net": [379, 381, 383, 384], "negative_pin": 529, "negative_points_on_edg": 522, "negative_primitive_id": 522, "negative_sensor_pin": 674, "negative_termin": [746, 751, 765], "nest": [530, 744], "net": [1, 61, 73, 87, 89, 90, 91, 93, 94, 95, 127, 130, 131, 132, 134, 137, 138, 139, 140, 143, 146, 154, 156, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 190, 227, 231, 242, 269, 270, 271, 287, 290, 306, 307, 308, 325, 329, 336, 337, 346, 373, 379, 381, 383, 384, 452, 457, 459, 462, 517, 519, 520, 527, 530, 531, 547, 548, 549, 550, 553, 558, 560, 564, 570, 573, 575, 576, 577, 578, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 623, 626, 629, 631, 632, 633, 634, 635, 636, 641, 645, 655, 658, 661, 665, 667, 671, 679, 741, 744, 746, 747, 749, 750, 755, 759, 761, 765, 771, 775, 776, 778, 779, 785, 786, 800], "net1": [379, 602, 800], "net2": [379, 576, 602], "net_class": [3, 153], "net_group": 754, "net_list": [73, 519, 555, 558, 575, 576, 577, 636, 751, 756], "net_n": 746, "net_nam": [6, 74, 93, 94, 231, 547, 548, 549, 550, 553, 561, 604, 607, 610, 626, 629, 631, 641, 645, 661, 665, 744, 745, 746, 749, 751, 754, 756, 758, 759, 761, 781, 786, 788, 800], "net_names_list": [573, 612], "net_obj": 751, "net_p": 746, "netc271_1": 754, "netclass": [135, 136, 147, 148, 155, 158, 159], "netd3_2": 754, "netic1_8": 754, "netlist": [39, 89, 576, 577, 602, 754, 755, 781], "netnam": [72, 91, 634, 644, 650], "netname_list": 611, "netr22_1": 754, "netr8_1": 754, "nets_data": [18, 38, 126, 139, 153, 161, 167, 220, 241, 263, 286, 299, 324, 353, 372, 614], "nets_n": 751, "nets_nam": 564, "nets_p": 751, "network": [379, 769, 779], "new": [71, 127, 140, 154, 228, 440, 458, 470, 472, 519, 576, 581, 583, 585, 588, 627, 685, 707, 708, 742, 744, 745, 746, 747, 748, 749, 750, 751, 758, 759, 765, 767, 771], "new_desktop": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "new_desktop_sess": [744, 745, 746, 747, 748, 749, 750, 751, 759], "new_material_nam": 588, "new_padstack_nam": 627, "new_report": 745, "new_simulation_configur": [8, 379, 747, 749, 750, 774, 800], "new_simulaton_configur": 747, "new_vari": 506, "new_w": 761, "next": [620, 747], "ng_mode": [763, 765], "node": [381, 382, 383, 384, 501], "node_to_ground": [379, 382], "nomin": 747, "nominal_adapt": [745, 759], "non": [747, 750, 751, 752, 753, 754, 755, 757, 758, 760, 761, 763, 766, 790], "non_graph": [744, 745, 746, 747, 749, 750, 751, 759, 765], "nondwir": 379, "none": [3, 12, 13, 14, 16, 23, 27, 30, 49, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 89, 91, 93, 94, 98, 104, 106, 107, 108, 109, 116, 126, 139, 153, 175, 219, 220, 222, 228, 231, 245, 269, 270, 271, 306, 307, 308, 379, 382, 440, 457, 458, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533, 535, 536, 539, 541, 543, 547, 555, 558, 560, 561, 563, 564, 573, 575, 576, 577, 584, 589, 599, 605, 608, 616, 621, 622, 623, 629, 632, 633, 634, 636, 641, 645, 646, 648, 652, 654, 655, 656, 657, 658, 660, 664, 665, 667, 671, 673, 674, 683, 685, 707, 708, 710, 719, 728, 738, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 781, 787], "nonfunct": 407, "noninfring": [744, 756], "notbook": [763, 765], "note": [702, 746, 750, 755, 757, 769], "notebook": [743, 746], "notic": [744, 756], "now": [744, 745, 750], "np": [748, 758, 759], "nport": 102, "nport_comp_definit": 747, "null": [232, 278, 316, 366], "num_cor": [748, 751], "num_of_freq_point": [744, 746, 759], "number": [41, 58, 113, 247, 257, 343, 379, 401, 403, 409, 411, 415, 483, 486, 489, 490, 527, 536, 539, 576, 629, 641, 693, 702, 705, 745, 747, 748, 749, 750, 754, 758, 765, 801], "number_of_layer_el": 801, "number_of_termin": 748, "number_of_thread": 755, "numpi": [748, 758, 759], "o": [8, 744, 745, 746, 747, 748, 749, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 772], "obj": 74, "object": [0, 3, 4, 11, 18, 21, 28, 29, 32, 38, 74, 75, 76, 91, 101, 115, 126, 127, 128, 130, 131, 132, 139, 140, 141, 143, 153, 154, 156, 161, 162, 163, 177, 179, 180, 189, 190, 212, 225, 226, 228, 230, 232, 235, 241, 243, 246, 260, 263, 278, 286, 291, 295, 296, 299, 316, 324, 330, 332, 347, 353, 358, 359, 362, 366, 368, 372, 378, 379, 388, 390, 400, 423, 433, 449, 514, 515, 518, 521, 524, 527, 528, 530, 532, 539, 541, 543, 545, 547, 548, 551, 555, 558, 573, 576, 601, 604, 623, 624, 633, 639, 640, 649, 651, 652, 653, 654, 656, 659, 663, 668, 672, 744, 745, 746, 747, 748, 749, 751, 758, 759, 765, 795, 800], "object_list": [753, 754, 755, 757, 761], "obsolet": 446, "obtain": [85, 213, 744, 754, 756], "occur": [227, 635], "odd": 758, "oeditor": 759, "oervwritt": 379, "offici": 771, "offset": [88, 181, 182, 194, 195, 214, 215, 252, 253, 563, 621, 648, 706, 707, 708, 709], "offset_i": [621, 706, 707, 708, 709], "offset_nam": 563, "offset_x": [621, 706, 707, 708, 709], "offset_z": [706, 709], "offseti": 630, "offsetx": [563, 630], "often": 379, "oghz": 750, "ohm": [383, 524, 541, 667], "ohz": 379, "omit": 379, "onc": [747, 756, 771, 772], "one": [73, 74, 90, 227, 361, 375, 377, 379, 431, 444, 452, 458, 501, 519, 530, 557, 576, 602, 611, 620, 635, 641, 745, 754, 757, 758, 770, 772, 775], "ones": [74, 379, 695], "onli": [7, 67, 68, 73, 74, 75, 77, 80, 104, 108, 169, 190, 227, 228, 378, 379, 457, 524, 527, 543, 575, 606, 608, 616, 621, 635, 652, 677, 685, 695, 701, 710, 741, 742, 746, 749, 751, 754, 757, 765, 767, 771, 772, 775, 800, 801], "only_met": 701, "opaqu": 123, "open": [1, 379, 391, 706, 728, 745, 746, 749, 751, 754, 755, 757, 761, 763, 765, 766, 771, 778, 779], "open_edb": [754, 755, 756, 757, 760, 761], "open_project": [7, 754], "oper": [621, 622, 634, 711, 748, 755, 765, 766, 769, 801], "optian": [269, 306], "optimum": 500, "option": [12, 13, 14, 22, 23, 61, 67, 71, 72, 73, 74, 77, 80, 82, 88, 89, 91, 93, 94, 97, 98, 106, 107, 108, 109, 110, 169, 175, 190, 220, 221, 227, 228, 230, 245, 252, 264, 269, 270, 271, 300, 306, 307, 308, 349, 379, 382, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 547, 548, 549, 550, 552, 555, 558, 560, 561, 563, 564, 572, 573, 575, 576, 577, 599, 603, 604, 605, 606, 608, 616, 621, 622, 623, 627, 629, 632, 633, 634, 635, 641, 645, 646, 648, 649, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 670, 671, 672, 673, 674, 684, 685, 686, 687, 688, 689, 693, 695, 701, 706, 707, 708, 709, 710, 719, 720, 722, 723, 725, 728, 738, 742, 765, 767, 801], "order": [15, 221, 262, 298, 351, 379, 400, 576, 691, 702, 801], "order_basi": [748, 801], "order_by_area": 576, "orient": [108, 766], "origin": 563, "other": [252, 253, 362, 379, 403, 576, 741, 744, 746, 747, 756, 769], "otherwis": [23, 28, 91, 120, 121, 233, 252, 253, 365, 611, 702, 744, 756], "out": [744, 746, 747, 750, 756], "outer": [693, 745, 748], "outer_layer_thick": [693, 749, 758], "outlin": [175, 608, 616, 690, 763], "outline_nam": 690, "output": [65, 258, 376, 379, 458, 754, 760], "output_aedb": 379, "output_fil": 388, "output_net": 754, "outsid": [746, 747, 748, 749, 750, 751, 759, 765], "oval": 648, "over": [589, 706], "overal": [742, 767], "overlai": 763, "overlap": [379, 685, 703, 710], "overwrit": [73, 623], "overwritten": [73, 444, 458], "own": 771, "p": [746, 761], "p1": 760, "p13": 754, "p22": 754, "p23": 786, "p24": 754, "p28": 754, "p29": 754, "p_edb": [63, 513, 544, 598, 619, 651], "p_edb_padstack": 177, "packag": [7, 23, 42, 379, 743, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 769, 771], "pad": [177, 188, 221, 269, 270, 306, 307, 407, 416, 620, 621, 622, 630, 646, 647, 648, 750, 790, 796, 797, 798], "pad2": 796, "pad_by_lay": 177, "pad_diam": 746, "pad_instance1": 796, "pad_instance2": 796, "pad_instance3": 796, "pad_offset_i": 621, "pad_offset_x": 621, "pad_param": 648, "pad_polygon": 621, "pad_rot": [621, 648], "pad_shap": [621, 648, 796], "pad_typ": [177, 630], "pad_x_offset": 648, "pad_y_offset": 648, "paddiam": [4, 621, 622, 744, 745, 746, 749, 758, 759, 796], "padedg": [270, 307], "padgeometrytyp": [179, 180, 639, 640], "padparamet": 646, "padstack": [1, 73, 75, 177, 189, 190, 201, 206, 207, 208, 212, 213, 216, 220, 221, 222, 227, 230, 231, 233, 237, 240, 244, 246, 250, 251, 269, 272, 291, 306, 309, 330, 422, 526, 573, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 637, 638, 641, 645, 646, 648, 649, 710, 741, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 757, 761, 765, 790], "padstack_data": [270, 271, 307, 308], "padstack_inst": [221, 749], "padstack_nam": [646, 648], "padstackdef": 630, "padstackedbpadstack": 208, "padstackinst": [529, 623, 630, 636, 649, 669], "padstackinstancetermin": [228, 667], "padstacknam": [4, 621, 622, 744, 745, 746, 749, 753, 758, 759, 796], "padstacks_data": [75, 174, 177, 189, 212, 220, 227, 269, 272, 291, 306, 309, 330, 625, 629, 631, 635, 637, 638, 645, 674, 746, 748, 753, 758], "padstck": 758, "padtyp": [180, 640, 642], "page": [742, 767, 768, 769, 770, 771, 773, 774, 775, 777, 778, 779, 781, 784, 785, 786, 787, 788, 791, 793, 795, 796, 798, 799, 800, 801, 803], "pai": 767, "pair": [3, 746, 751], "pair_u1": 751, "pair_x1": 751, "panda": 763, "par": 755, "par_nam": [746, 759], "parallel": [12, 30, 71, 75, 107, 669], "param": [746, 759], "paramet": [11, 12, 13, 14, 22, 23, 52, 61, 63, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 109, 110, 127, 140, 154, 169, 175, 177, 179, 180, 184, 185, 186, 189, 190, 196, 197, 212, 220, 221, 227, 228, 230, 231, 245, 252, 253, 260, 264, 269, 270, 271, 296, 300, 306, 307, 308, 343, 349, 356, 357, 361, 362, 364, 375, 377, 379, 381, 382, 383, 384, 388, 390, 440, 453, 508, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 539, 541, 543, 545, 547, 548, 549, 550, 552, 553, 555, 556, 557, 558, 559, 560, 561, 563, 564, 572, 573, 575, 576, 577, 581, 582, 583, 584, 585, 586, 588, 589, 590, 592, 594, 595, 599, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 616, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 679, 684, 685, 686, 687, 688, 689, 693, 695, 701, 702, 706, 707, 708, 709, 710, 712, 718, 719, 720, 722, 723, 724, 725, 728, 737, 738, 746, 747, 761], "parameter": 746, "parameter_map": 745, "parameter_nam": [564, 755], "parameterlist": 630, "parametr": [245, 563, 564, 745, 750, 790, 803], "parametric_via": 758, "parametrize_trace_width": [755, 803], "parent": [11, 651, 753, 754, 755, 756, 757, 758, 760, 761], "pars": [110, 744, 745, 746, 747, 748, 751, 755, 765, 766], "parser": 379, "part": [0, 1, 23, 43, 44, 70, 71, 73, 98, 394, 438, 474, 641, 747, 751, 765, 766, 775], "part_name_col": [98, 747], "parti": 749, "partial": 230, "particular": [744, 756, 767], "partit": 221, "partition_max_ord": 221, "pass": [379, 411, 415, 483, 486, 742, 745, 748, 754, 755, 757, 767, 801], "passiv": [379, 406, 420, 751], "pastack": 623, "patch": 745, "path": [8, 13, 14, 82, 83, 98, 99, 106, 110, 170, 175, 258, 354, 376, 379, 389, 458, 479, 480, 491, 498, 504, 545, 550, 560, 589, 590, 594, 612, 616, 662, 676, 695, 702, 706, 710, 722, 723, 724, 725, 727, 728, 730, 732, 733, 735, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 771], "path_list": [550, 800], "path_to_edb": 524, "path_to_edb_fil": 74, "path_to_wheelhous": 769, "pathlib": 763, "pathtoaedb": 652, "pathtospfil": 106, "pattern": 745, "pcb": [1, 7, 379, 641, 744, 746, 750, 754, 759, 763, 765], "pcb_0ceng3": 744, "pcb_l": 748, "pcb_len": 746, "pcb_port_1": 787, "pcb_port_2": 787, "pcb_w": [746, 748], "pcb_ys9li9": 759, "pcie": 755, "pcie0_rx0_n": 8, "pcie0_rx0_p": 8, "pcie0_tx0_n": 8, "pcie0_tx0_n_c": 8, "pcie0_tx0_p": 8, "pcie0_tx0_p_c": 8, "pcie_gen4_rx0_n": 750, "pcie_gen4_rx0_p": 750, "pcie_gen4_rx1_n": 750, "pcie_gen4_rx1_p": 750, "pcie_gen4_tx2_cap_n": 747, "pcie_gen4_tx2_cap_p": 747, "pcie_gen4_tx2_n": 747, "pcie_gen4_tx2_p": 747, "pcie_gen4_tx3_cap_n": 751, "pcie_gen4_tx3_cap_p": 751, "pcie_gen4_tx3_n": 751, "pcie_gen4_tx3_p": 751, "pd": 763, "pd4": 754, "pden": 754, "pdn": 379, "pec": [67, 74, 77, 326, 516, 522, 525, 533, 801], "pec_boundari": [67, 74, 77], "pec_launch_width": [516, 522, 525, 533], "pecboundari": [261, 297], "pedb": [11, 116, 260, 296, 505, 574, 683], "pedbpadstack": 177, "penetr": 190, "per": [73, 379, 503, 713, 761], "percent": 674, "percentag": [198, 713], "perfect": [67, 74, 77, 379], "perform": [230, 421, 448, 451, 494, 496, 497, 527, 605, 612, 641, 746, 750, 754, 755, 760, 761, 766, 771, 773, 781], "permiss": [744, 756, 771], "permissionerror": [753, 754, 755, 756, 757, 758, 760, 761], "permit": [744, 756], "permitt": [582, 583, 584, 586, 793], "permittivity_at_frequ": 584, "permittivity_high": 582, "permittivity_low": 582, "person": [744, 756], "pg_v1p0_s0": 784, "phase": [381, 384, 520, 521, 531, 532, 658, 659, 660, 670, 671, 672, 673, 745, 759, 760, 771], "phase_valu": [379, 381, 383, 384, 520, 521, 531, 532, 658, 659, 671, 672], "phi": 745, "physic": [75, 225, 358, 383, 669, 760], "pi": [379, 748, 758, 765, 766], "pi_slider_posit": 765, "pid": 629, "piec": 563, "pin": [0, 41, 45, 67, 68, 71, 72, 73, 74, 75, 77, 80, 85, 88, 90, 91, 92, 93, 94, 95, 104, 109, 213, 218, 227, 233, 240, 247, 248, 269, 271, 306, 308, 379, 452, 492, 503, 517, 518, 521, 526, 528, 529, 532, 543, 576, 610, 623, 629, 630, 634, 635, 637, 638, 643, 645, 650, 655, 656, 657, 659, 660, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 678, 745, 750, 755, 756, 761, 765, 780, 784, 786, 789], "pin1": 74, "pin_group": [765, 788], "pin_list": 94, "pin_nam": [93, 754], "pin_net_nam": [644, 650], "pin_numb": [664, 786], "pingroup": [72, 73, 220, 270, 271, 307, 308, 452, 517, 655, 664, 665], "pingroup_2": 784, "pinlist": 90, "pinnam": [91, 240], "pinpo": 526, "pins_nam": [667, 788], "pins_to_short": 109, "pip": [742, 744, 745, 746, 747, 748, 751, 765, 767, 769], "pixel": [175, 616, 710], "place": [71, 110, 524, 608, 616, 641, 649, 679, 706, 707, 708, 709, 744, 745, 746, 749, 751, 753, 758, 771, 796], "place_3d_compon": 748, "place_in_layout": 708, "place_on_top": [706, 707, 708, 709], "place_padstack": 749, "placehold": 749, "placement": [34, 47, 55, 58, 60, 88, 238, 249, 257, 259, 707, 708, 709, 749], "placement_lay": [71, 748], "plai": 790, "plan": 771, "plane": [6, 408, 417, 487, 748, 749, 758, 761, 765], "plane_lw_pt": [6, 759], "plane_shap": 749, "plane_up_pt": [6, 759], "plate": [198, 199, 239, 620, 747, 750], "platform": [753, 754, 755, 756, 757, 758, 760, 761], "platingthickess": 193, "plot": [3, 379, 608, 746, 748, 751, 754, 758, 761, 763, 793], "plot_3d": 745, "plot_components_on_bottom": [608, 616], "plot_components_on_top": [608, 616, 754, 757], "plot_definit": [710, 753, 757, 758], "plot_nam": 745, "plt": [710, 744, 745, 746, 747, 753, 754, 755, 757, 758, 759, 760, 761, 763], "plugin": [744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "pnet": 754, "po": 110, "point": [80, 175, 272, 309, 334, 336, 339, 342, 344, 346, 350, 356, 357, 362, 363, 379, 403, 409, 411, 413, 428, 429, 430, 436, 516, 522, 523, 524, 525, 527, 530, 533, 539, 548, 549, 550, 557, 560, 608, 616, 641, 679, 744, 745, 746, 747, 748, 753, 754, 755, 757, 759, 761], "point_on_edg": [523, 525, 533], "point_on_ref_edg": 523, "pointa": [749, 758], "pointb": [749, 758], "pointdata": [356, 357], "points_n": 746, "points_on_edg": 516, "points_p": 746, "polar": 745, "poli": [524, 552, 556, 557, 787], "poly2": 6, "poly_list": [524, 787], "poly_void": 759, "polygon": [6, 221, 230, 258, 354, 362, 364, 376, 379, 403, 524, 527, 530, 539, 545, 548, 552, 556, 557, 558, 560, 563, 572, 573, 612, 621, 641, 746, 747, 749, 750, 751, 755, 761, 765, 787, 789, 801], "polygon_data": 230, "polygon_hol": 621, "polygondata": [230, 361, 362, 364, 375, 377, 530, 548], "polylin": 557, "poor": 746, "port": [67, 68, 73, 74, 77, 219, 220, 260, 264, 265, 267, 268, 270, 273, 275, 276, 279, 285, 296, 300, 304, 305, 307, 310, 313, 314, 317, 323, 379, 435, 446, 452, 454, 469, 516, 517, 518, 519, 522, 523, 524, 525, 526, 527, 530, 533, 536, 537, 541, 543, 623, 655, 656, 657, 667, 706, 741, 745, 746, 747, 748, 749, 750, 760, 766, 771, 789, 790, 800, 801], "port1": 765, "port_1": 748, "port_imped": 524, "port_loc": [524, 787], "port_nam": [73, 74, 516, 517, 518, 522, 523, 524, 525, 533, 655, 656, 744, 745, 751, 756], "port_poli": [524, 787], "port_typ": 73, "portal": 771, "portboundari": [261, 297], "portion": [744, 756], "portnam": 526, "pos_i": 748, "pos_pin": [518, 521, 528, 532, 656, 659, 668, 672], "pos_pin_group_nam": [657, 660, 670, 673, 786], "pos_x": 748, "posit": [92, 132, 138, 227, 245, 379, 381, 382, 383, 384, 443, 468, 500, 501, 516, 517, 520, 521, 522, 526, 528, 529, 531, 532, 547, 635, 645, 655, 657, 658, 659, 660, 661, 668, 670, 671, 672, 673, 674, 679, 744, 745, 746, 751, 765, 796], "positive_component_nam": [517, 520, 531, 655, 658, 671], "positive_lay": 679, "positive_loc": 679, "positive_net": 126, "positive_net_nam": [517, 520, 531, 655, 658, 671, 679], "positive_node_compon": [379, 381, 383, 384], "positive_node_net": [379, 381, 383, 384], "positive_pin": [529, 635], "positive_points_on_edg": 522, "positive_primitive_id": 522, "positive_sensor_pin": 674, "positive_termin": [746, 751, 765], "possibl": [77, 201, 742, 745, 766, 767, 771], "post": [744, 745, 746, 747, 748, 751, 759, 765, 771], "post_layout_parameter": 761, "postprocess": [744, 745, 746, 747, 748, 751, 763, 765, 766], "postprocessor": [744, 745, 746, 747, 748, 751, 765], "potenti": 437, "power": [7, 379, 459, 599, 605, 609, 611, 677, 766, 781], "power_list": 755, "power_net": [8, 379, 457, 599, 747, 749, 750, 774], "power_net_nam": 609, "powertree_df": 754, "ppadstack": 189, "practic": [379, 524, 742, 766, 767, 769], "pre": [742, 767], "preced": [749, 758, 785], "prefer": [269, 270, 271, 306, 307, 308, 771], "prefix": [245, 758], "prepar": 751, "preprocess": 750, "present": [199, 652, 690], "preserv": 458, "prev": 746, "prevent": 379, "previou": 548, "previous": [742, 744, 767], "prim_arc": 334, "prim_id": [523, 525, 533], "prim_typ": 561, "primary_sweep": 745, "primit": [24, 26, 126, 139, 153, 161, 174, 221, 224, 229, 234, 235, 236, 258, 266, 268, 272, 274, 291, 303, 305, 309, 312, 330, 334, 336, 337, 346, 347, 348, 350, 352, 354, 355, 356, 357, 360, 361, 362, 364, 365, 367, 368, 369, 373, 375, 376, 377, 378, 516, 522, 523, 524, 525, 529, 533, 544, 548, 552, 553, 558, 559, 560, 561, 567, 569, 570, 576, 623, 636, 649, 669, 741, 744, 746, 747, 748, 749, 750, 751, 755, 759, 761, 765, 787, 800], "primitive_id": 559, "primitives_data": [176, 268, 272, 291, 305, 309, 330, 334, 347, 362, 364, 546, 547, 549, 550, 557, 559, 560, 565, 566, 568, 571, 744, 745, 753, 758, 759], "primitives_id": 516, "prims_to_delet": [755, 761], "princip": 576, "print": [80, 326, 346, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 765, 793], "print_column": 754, "print_max": 754, "prior": [745, 749, 753], "probe": [670, 679, 786], "probe_nam": 670, "problem": 746, "procedur": 771, "process": [379, 422, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 775], "process_on": [753, 754, 755, 756, 757, 758, 760, 761], "prod": 110, "produc": [225, 358], "product": [742, 766, 767], "program": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 765, 771], "programmat": 773, "progress": 745, "proj_path": [728, 738], "project": [85, 87, 90, 91, 92, 94, 95, 97, 213, 245, 379, 386, 393, 421, 432, 439, 451, 454, 457, 458, 517, 518, 520, 521, 528, 531, 532, 596, 655, 656, 658, 659, 661, 662, 668, 671, 672, 706, 720, 724, 727, 728, 729, 730, 731, 732, 738, 742, 744, 745, 746, 749, 751, 753, 756, 758, 759, 760, 763, 765, 766, 767, 770, 771, 775, 778, 779, 790, 800, 803], "project_path": [8, 748, 751], "projectnam": [738, 744, 745, 746, 747, 749, 750, 759], "projectpath": 738, "prop": [744, 745, 746], "properli": [742, 767], "properti": [0, 4, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 78, 100, 101, 102, 105, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 167, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 223, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 380, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 534, 538, 540, 542, 544, 546, 551, 562, 565, 566, 567, 568, 569, 570, 571, 580, 592, 593, 594, 595, 596, 598, 600, 601, 613, 614, 615, 617, 618, 619, 624, 625, 630, 637, 638, 642, 643, 644, 648, 650, 651, 675, 676, 677, 678, 680, 681, 682, 683, 692, 694, 698, 699, 700, 703, 704, 705, 715, 716, 717, 721, 726, 727, 729, 730, 731, 732, 733, 735, 739, 740, 741, 744, 745, 747, 751, 754, 760, 766, 784], "property_nam": 592, "proprietari": 766, "provid": [73, 74, 175, 379, 388, 390, 458, 524, 557, 576, 577, 616, 632, 633, 636, 710, 719, 744, 745, 747, 750, 754, 756, 766, 769, 770, 790], "proxi": 771, "public": 756, "publish": [744, 756], "purpos": [744, 756, 760], "push": [742, 767], "pwr": 603, "pwr1": 763, "pwr2": 763, "px": 748, "py": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "pyaedt": [379, 470, 472, 733, 744, 745, 746, 747, 748, 749, 750, 751, 752, 755, 759, 763, 765, 766], "pyaeedt": [362, 364], "pyansi": [742, 766, 767, 771], "pyedb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 38, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 87, 90, 91, 92, 94, 95, 97, 100, 101, 104, 105, 106, 107, 108, 109, 111, 116, 126, 139, 153, 161, 164, 167, 174, 176, 177, 189, 208, 212, 213, 220, 221, 228, 241, 260, 268, 269, 272, 286, 291, 296, 305, 306, 309, 324, 330, 334, 347, 372, 379, 380, 385, 387, 394, 397, 438, 440, 474, 505, 506, 511, 513, 516, 517, 518, 520, 521, 522, 528, 531, 532, 533, 544, 546, 547, 549, 550, 559, 560, 565, 566, 568, 571, 572, 574, 580, 581, 582, 583, 584, 585, 586, 588, 598, 603, 605, 614, 617, 618, 619, 625, 651, 652, 653, 655, 656, 658, 659, 661, 668, 669, 671, 672, 674, 683, 685, 695, 699, 702, 710, 715, 719, 741, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 768, 772, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 795, 796, 798, 799, 800, 801, 803], "pyedb_ansi": [753, 754, 755, 756, 757, 758, 760, 761], "pyedb_prj_7pw": 759, "pyedb_use_dotnet": 772, "pypi": [768, 771], "pyplot": [753, 757, 758, 759, 760, 763], "pyproject": 7, "python": [74, 739, 742, 743, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 773], "pyvista": [744, 745, 746, 747, 748, 751, 765], "q3d": [379, 436, 766], "quantiti": 754, "quarter": [745, 748], "quasi": 221, "queri": [766, 781, 790], "question": [742, 767, 768, 771], "quick": 768, "quit": 734, "quit_appl": 754, "r": [77, 379, 388, 390], "r1": [1, 7, 91, 107, 741, 754, 769, 771], "r2": [745, 747, 753, 759, 769, 771], "r23": 786, "r_valu": [71, 75, 383, 669, 741, 779], "rad__b7niwd": 745, "radial": 525, "radial_extent_factor": [219, 525], "radian": 51, "radiat": [379, 423, 473, 801], "radiation_box": 379, "radiationboxtyp": [379, 423], "radiu": [227, 476, 541, 547, 549, 635], "rang": [201, 621, 746, 754], "rangeend": 745, "rangestart": 745, "rat": [754, 763], "rather": 80, "ratio": [190, 198, 239, 379, 447, 603, 620, 747, 750, 801], "ration": 620, "raw_extended_net": [139, 153], "raw_net": 161, "raw_primit": 347, "re": [12, 747, 753, 754, 755, 756, 757, 758, 760, 761], "reach": [379, 424, 742, 767, 771], "read": [1, 378, 589, 590, 594, 595, 741, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765, 766], "reader": 110, "readi": [747, 750, 760, 766], "real": [293, 710], "realized2d": 745, "realized3d": 745, "realizedgaintot": 745, "reason": 379, "reassign": 599, "receiv": 751, "recent": [753, 754, 755, 756, 757, 758, 760, 761], "recommend": [379, 383, 527], "rectangl": [6, 22, 221, 258, 376, 549, 560, 572, 621, 648, 746, 749, 758, 796, 800], "rectangular": 749, "red": 747, "reduc": [403, 539, 543, 775, 776], "ref_d": 754, "ref_des_list": 519, "ref_loc": [524, 787], "ref_pin": [74, 778, 779], "ref_poli": [524, 787], "ref_prim_id": 523, "refd": [74, 87, 91, 104, 110, 634, 747, 754], "refdes_col": [98, 747], "refer": [0, 3, 4, 48, 61, 67, 68, 71, 73, 74, 77, 84, 87, 93, 95, 98, 104, 108, 110, 220, 227, 269, 270, 271, 272, 280, 289, 291, 306, 307, 308, 309, 318, 328, 330, 379, 382, 459, 464, 519, 523, 524, 525, 530, 543, 553, 626, 634, 635, 652, 664, 665, 667, 746, 747, 751, 761, 765, 770, 773, 775, 778, 779, 787, 788], "reference_design": [84, 93, 664, 665, 765, 786, 788], "reference_desin": 765, "reference_height": 108, "reference_lay": [524, 525, 527, 787], "reference_list": [751, 755, 765, 775], "reference_net": [13, 61, 73, 227, 530, 635, 667, 765, 775, 788], "reference_object": [290, 329], "reference_pin": [74, 227, 635], "reference_point": [524, 787], "reference_polygon": [524, 787], "reference_size_i": 108, "reference_size_x": 108, "refin": [379, 404, 493, 496, 497, 748], "refnet": 73, "refresh": [103, 711], "region": [223, 745, 747, 763], "registri": [742, 767], "regul": [674, 682], "rel": [6, 424, 582, 584, 586, 709, 801], "rel_perm": 586, "relat": [63, 379, 651, 745, 771], "relative_residu": 801, "releas": [85, 87, 90, 91, 92, 94, 95, 97, 213, 517, 518, 520, 521, 528, 531, 532, 655, 656, 658, 659, 661, 668, 671, 672, 719, 742, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 760, 761, 765, 767, 769, 771, 774, 775, 785, 787, 788, 798, 801], "release_desktop": [744, 745, 746, 747, 748, 749, 750, 751, 759], "release_vers": 769, "relev": 751, "reli": [749, 757], "remaind": 749, "remot": [608, 771], "remov": [576, 587, 646, 712, 745, 746, 747, 749, 750, 751, 753, 755, 757, 758, 760, 761, 763, 765, 801], "removd": 750, "remove_floating_geometri": 801, "remove_single_pin_compon": [755, 761], "renam": [169, 575, 702, 753, 754, 755, 757, 758, 760, 761, 784, 787], "renamed_net": 576, "renorm": [267, 293, 304], "replac": [67, 68, 77, 104, 116, 446, 620, 641, 652, 754, 759], "replace_3d_triangl": 801, "reply_cont": [753, 754, 755, 756, 757, 758, 760, 761], "report": [169, 379, 479, 498, 504, 575, 713, 722, 723, 725, 742, 767, 771], "report_fil": 754, "report_templ": [744, 748, 751], "report_typ": 745, "reports_by_categori": 745, "repositori": [756, 769], "repres": 1, "represent": 549, "representation_typ": [549, 800], "request": [707, 708, 709, 742, 750, 767, 771], "requir": [379, 386, 623, 742, 743, 746, 748, 750, 754, 755, 758, 761, 765, 766, 767], "res_nam": [528, 668], "res_valu": [107, 606], "resc1608x05n": 754, "residu": [713, 801], "resist": [12, 49, 107, 379, 528, 529, 668, 763], "resistor": [71, 75, 76, 97, 383, 503, 528, 605, 668, 669, 677, 751, 780], "resistor_below": [605, 751], "resistor_nam": [528, 668], "resistorsourc": 666, "resolut": 535, "resort": 403, "resourc": [775, 776], "rest": 110, "restrict": [744, 756, 769], "restrict_length": 801, "restrict_max_el": 801, "result": [379, 457, 677, 735, 746, 748, 751, 753, 755, 756, 757, 758, 760, 761, 766], "retain": 751, "retriev": [36, 62, 78, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 102, 122, 123, 124, 170, 213, 389, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 469, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 537, 556, 557, 558, 559, 609, 634, 699, 700, 701, 704, 705, 715, 716, 717, 754, 761, 763, 765, 778, 779, 782, 784, 786, 787, 789, 793, 801], "return": [1, 2, 5, 7, 9, 13, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 30, 31, 34, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 120, 121, 122, 123, 127, 128, 131, 140, 141, 143, 154, 156, 162, 163, 164, 167, 169, 170, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 285, 286, 287, 291, 294, 297, 298, 299, 300, 305, 306, 307, 308, 309, 312, 323, 324, 325, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 372, 373, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 539, 541, 543, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 581, 582, 583, 584, 585, 586, 588, 590, 592, 594, 595, 599, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 617, 618, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 667, 668, 669, 670, 671, 672, 673, 678, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 712, 713, 715, 717, 720, 722, 723, 724, 725, 727, 728, 730, 731, 732, 733, 734, 735, 737, 738, 739, 744, 745, 747, 753, 754, 755, 756, 757, 758, 759, 760, 761], "return_point": 221, "return_points_onli": 527, "reus": [216, 766, 769], "revert": 80, "review": [751, 769], "rf": [641, 758], "rgb": 117, "right": [15, 262, 298, 350, 351, 535, 549, 742, 744, 756, 767], "rlc": [12, 16, 27, 30, 49, 50, 62, 67, 68, 71, 75, 77, 80, 81, 104, 107, 110, 151, 152, 383, 529, 579, 669, 747, 751, 754, 780], "rlc_n": 751, "rlc_p": 751, "rlcboundari": [261, 297], "rot": 630, "rotat": [88, 202, 548, 549, 621, 645, 648, 706, 707, 708, 709, 746, 753, 754, 755, 756, 757, 758, 760, 761], "rough": 685, "roughli": [745, 748], "round": [379, 448, 550, 753, 754, 755, 757, 761], "rout": 746, "route_lay": 746, "rpc": 771, "rst4000": 777, "rstrip": 754, "rtree": 633, "rule": 770, "run": [379, 386, 711, 736, 737, 742, 743, 744, 745, 746, 747, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 769, 790], "run_ast_nod": [753, 754, 755, 756, 757, 758, 760, 761], "run_cel": [753, 754, 755, 756, 757, 758, 760, 761], "run_cell_async": [753, 754, 755, 756, 757, 758, 760, 761], "run_cod": [753, 754, 755, 756, 757, 758, 760, 761], "run_forev": [753, 754, 755, 756, 757, 758, 759, 760, 761], "run_glob": [753, 754, 755, 756, 757, 758, 759, 760, 761], "runner": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "runpi": [753, 754, 755, 756, 757, 758, 759, 760, 761], "runscriptandexit": 754, "runtim": 769, "rvalu": [528, 529, 668, 778], "s2p": [61, 747, 765], "s_": 745, "s_paramet": 765, "s_parameter_librari": 765, "salder": [73, 96], "same": [379, 452, 524, 603, 702, 765], "sarkar": 584, "save": [175, 379, 616, 696, 710, 720, 738, 745, 746, 749, 750, 751, 754, 755, 758, 761, 763, 766, 775, 793, 796, 799, 800, 801], "save_edb": [74, 77, 104, 744, 745, 746, 747, 748, 749, 750, 753, 754, 758, 759, 775, 777, 778, 779, 784, 785, 786, 787, 788], "save_edb_a": 761, "save_edb_path": 761, "save_field": [744, 746, 759, 801], "save_plot": [175, 616, 710], "save_project": [720, 744, 745, 747, 748, 751, 759], "save_rad_field_onli": 801, "saveadaptivecurr": 759, "sball_diam": [108, 756], "sball_height": [108, 756], "sball_mid_diam": 108, "sballlayer_nam": 649, "scale": [653, 710, 748, 751, 801], "scale_elev": [710, 757], "scan": 663, "scan_typ": 663, "schedul": 766, "scope": [749, 758], "scratch": 795, "script": [749, 750, 766, 769, 773], "search": [227, 605, 635, 741, 754, 773], "search_radiu": [227, 635], "second": [557, 744, 745, 746, 747, 749, 753, 754, 755, 757, 759, 761], "secondari": 576, "secondary_sweep": 745, "section": [0, 1, 3, 4, 437, 695, 741, 751, 755, 756, 757, 771, 790], "secur": 769, "see": [766, 768, 769, 771], "seen": 746, "segment": [340, 343, 557, 761], "select": [379, 393, 400, 401, 423, 433, 449, 457, 632, 633, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 775, 776, 787, 793, 800], "selection_polygon": 563, "self": [73, 96, 577, 742, 744, 745, 753, 754, 755, 756, 757, 758, 759, 760, 761, 766, 767], "sell": [744, 756], "send": [753, 754, 755, 756, 757, 758, 760, 761], "sensit": 604, "sensor": 674, "sep": 751, "separ": [623, 641], "serd": 751, "seri": [12, 30, 71, 75, 669], "serial": [151, 605], "serv": [268, 269, 270, 271, 305, 306, 307, 308], "server": 771, "servic": [742, 767], "session": [608, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765], "set": [25, 67, 74, 77, 98, 108, 110, 190, 252, 253, 379, 380, 383, 385, 387, 394, 438, 457, 474, 502, 511, 512, 541, 561, 646, 647, 648, 649, 652, 674, 677, 718, 747, 749, 750, 751, 769, 771, 772, 790, 793, 797, 798, 800], "set_all_antipad_valu": 798, "set_dc_slid": 754, "set_differential_pair": [746, 751], "set_solder_bal": 756, "set_solderbal": [744, 745], "set_solution_broadband": 801, "set_solution_multi_frequ": 801, "set_solution_single_frequ": [748, 801], "set_triangles_wave_port": 801, "setispowerground": 172, "setnam": [136, 148, 159, 173], "setter": [744, 747, 756, 784], "setup": [7, 392, 513, 514, 651, 652, 653, 654, 719, 722, 723, 725, 745, 748, 750, 751, 754, 760, 769, 790, 801], "setup1": [748, 751, 760, 801], "setup1a": 801, "setupnam": [744, 746, 759], "sever": [74, 458], "sfpa_vccr": 754, "sfpa_vcct": 754, "sg_via_d": 748, "shall": [744, 756], "shape": [56, 73, 108, 545, 548, 572, 621, 641, 648, 746, 749, 758], "share": [765, 766, 769, 771], "sharp": 550, "sheet": [749, 770], "shell": [753, 754, 755, 756, 757, 758, 760, 761, 801], "shield": 641, "short": [67, 74, 77, 109, 169, 575], "should": [379, 403, 524, 745, 748, 772], "show": [175, 260, 296, 379, 499, 616, 710, 742, 743, 744, 745, 746, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769, 770, 773, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 795, 796, 798, 799, 800, 801, 803], "show_legend": [175, 616], "shown": [85, 175, 213, 616, 744, 745, 746, 747, 753, 754, 755, 757, 758, 759, 760, 761, 763], "shunt": 152, "shut": 746, "shutil": 760, "si": [379, 653, 747, 754, 755, 757, 766], "side": [489, 490, 757, 758], "sig": [748, 759, 787], "sig1": [763, 791], "sig2": 763, "sig3": 791, "sig_1": 746, "sig_2": 746, "sig_c": 748, "sig_l": 748, "sig_w": 748, "signal": [7, 73, 89, 175, 190, 379, 462, 530, 599, 605, 608, 616, 684, 685, 686, 687, 688, 689, 702, 704, 715, 716, 746, 749, 750, 751, 758, 761, 763, 766, 775, 776, 793, 800], "signal_lay": [748, 749, 758, 793], "signal_list": [751, 755, 765, 775], "signal_net": [8, 379, 457, 599, 747, 749, 750, 756, 774, 775], "signal_net_nam": 761, "signal_path": 748, "signal_trac": 748, "signal_via_padstack": 746, "silkscreen": [685, 763], "sim_setup": [8, 379, 381, 383, 384, 747, 749, 774, 800], "sim_setup_data": [748, 751], "simpl": [773, 786], "simple_check": 230, "simpler": [744, 766, 773], "simpli": 772, "simplifi": [403, 641, 766], "simul": [379, 386, 392, 445, 677, 722, 724, 736, 737, 741, 744, 745, 749, 754, 766, 773, 775, 790], "simulation_configur": [379, 380, 385, 387, 388, 390, 394, 438, 474, 750], "simulation_nam": [722, 723, 725], "simulation_setup": [397, 514, 515, 539, 541, 543, 654], "simulationconfigur": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 438, 474, 514, 515, 539, 541, 543, 654, 741, 747, 749, 750, 800], "simulationconfigurationac": [379, 380, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 741], "simulationconfigurationbatch": [385, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 741], "simulationconfigurationdc": [387, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 741], "simulationdc": 379, "simult": 745, "sin": [748, 758], "sinc": 75, "singl": [74, 80, 230, 379, 400, 560, 641, 747, 748, 750, 755, 757, 761, 765, 769, 801], "singlefrequencydatalist": [744, 746], "sink_po": 786, "site": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "siw": [7, 754], "siw_fil": 754, "siwav": [1, 5, 9, 379, 382, 383, 393, 407, 408, 416, 417, 418, 425, 437, 475, 476, 487, 500, 603, 651, 652, 653, 654, 655, 656, 658, 659, 661, 663, 668, 671, 672, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 763, 766, 769, 777, 784, 786, 788, 790, 802], "siwave_ac": 765, "siwave_dc": 765, "siwave_fil": 754, "siwave_simulation_setup_data": [652, 653], "siwave_syz": 765, "siwavedcsimulationsetup": 652, "siwavehfsssolverregion": 763, "siwavesyz": [8, 747], "siwavesyzsimulationsetup": 653, "size": [73, 108, 175, 190, 193, 252, 253, 414, 464, 543, 616, 653, 710, 744, 745, 747, 761, 783], "skin": 801, "skin_depth": 801, "skip": [73, 439, 454], "sky130_fictious_dtc_exmple_contol_no_map": 760, "sky130_fictitious_dtc_exampl": 760, "sky130_fictitious_dtc_example_control_no_map": 760, "sl_space": 746, "sl_width": 746, "sleep": 751, "slide": [379, 500], "slider": [653, 765], "slow": 216, "slowest": 576, "sma": 748, "sma_rf_surface_mount": 748, "small_void_area": 801, "smaller": 379, "smallest": 170, "snap": 426, "snap_via_group": 760, "so": [73, 379, 458, 623, 710, 744, 746, 756], "softwar": [744, 756, 769], "soic127p": 754, "solder": [53, 54, 55, 56, 73, 88, 96, 108, 379, 444, 455, 623, 649, 691, 708, 709, 751, 763], "solder_ball_height": [88, 707], "solder_balls_height": 73, "solder_balls_mid_s": 73, "solder_balls_s": 73, "solder_diamet": 760, "solder_height": [708, 709], "solder_mask": [685, 793], "solder_past": 685, "solderbal": 649, "solderlay": 645, "soldermask": [22, 693, 749, 758, 759, 763, 793], "soldermask_thick": [693, 749, 758], "soler_mask": 763, "solut": [487, 744, 745, 746, 747, 759, 765, 801], "solution_typ": 745, "solutions_custom": 745, "solv": [7, 745, 746, 747, 748, 751, 765, 766], "solve_siwav": 754, "solver": [379, 393, 436, 437, 475, 759, 766, 801], "solver_typ": [8, 379, 747, 749], "solvertyp": [379, 393], "solvesweep": [744, 746, 759], "some": [742, 743, 744, 745, 746, 747, 748, 750, 751, 754, 765, 767, 768, 771, 773], "soon": 772, "sourc": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 753, 754, 755, 756, 757, 758, 760, 761, 763, 765, 771, 790], "source_nam": [379, 382, 520, 521, 531, 532, 658, 659, 661, 671, 672], "sourcetyp": 73, "space": 110, "sparametermodel": 747, "spdx": [744, 756], "special": 7, "specif": [379, 548, 564, 595, 646, 742, 754, 767, 775, 786, 787], "specifi": [73, 175, 221, 379, 437, 458, 517, 547, 573, 576, 582, 608, 616, 620, 623, 655, 662, 710, 745, 761, 801], "specified_vers": [719, 744, 745, 746, 747, 748, 749, 750, 751, 759], "speed": [7, 379, 500, 765, 775, 776], "spheroid": [73, 108], "spice": [14, 57, 106, 747, 748], "spicemodel": 747, "spicemodelnam": 106, "split": [754, 755, 756, 757, 760, 761], "squar": [576, 648], "stabl": [742, 767], "stack": [270, 307, 647, 691, 753, 754, 755, 756, 757, 758, 760, 761, 790], "stackup": [1, 120, 564, 649, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 741, 745, 746, 749, 754, 757, 790, 796, 800], "stackup_lay": 2, "stackup_thick": 793, "stackuplayeredbclass": [745, 748, 753], "stackupsimpl": 758, "standalon": [724, 766, 770], "standard": [744, 748, 751], "start": [210, 254, 379, 427, 428, 550, 557, 604, 621, 622, 653, 710, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 770, 771, 773, 787, 795], "start_azimuth": 801, "start_cap_styl": [550, 758, 759], "start_coordin": 346, "start_freq": [8, 379, 653, 747, 749, 750, 774, 799], "start_frequ": [744, 746, 759], "start_lay": [621, 746, 758, 796], "start_with": 604, "startlay": 622, "stat": 781, "statist": 783, "stdout": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765], "step": [379, 429, 653, 747, 750], "step_freq": [8, 379, 653, 747, 749, 750, 774, 799], "stop": [211, 252, 253, 255, 379, 430, 621, 653, 765], "stop_freq": [8, 379, 653, 747, 749, 750, 774, 799], "stop_frequ": [744, 746, 759], "stop_lay": [621, 746, 758, 796], "store": [216, 745], "str": [13, 14, 16, 23, 27, 43, 44, 46, 47, 48, 49, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 96, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 112, 114, 122, 127, 140, 154, 164, 169, 175, 177, 181, 182, 187, 189, 194, 195, 201, 202, 205, 210, 211, 213, 220, 221, 227, 228, 231, 236, 242, 244, 245, 249, 252, 253, 254, 255, 258, 261, 269, 270, 271, 285, 287, 297, 306, 307, 308, 323, 325, 369, 373, 376, 381, 382, 383, 384, 388, 389, 390, 392, 395, 396, 432, 445, 446, 453, 458, 459, 460, 461, 462, 476, 479, 480, 482, 488, 491, 498, 501, 504, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 547, 548, 549, 550, 553, 558, 560, 561, 563, 564, 573, 575, 576, 577, 581, 582, 583, 584, 585, 586, 588, 589, 590, 592, 594, 595, 599, 602, 604, 605, 608, 609, 610, 612, 614, 616, 617, 618, 621, 622, 623, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 641, 644, 645, 646, 647, 648, 649, 650, 652, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 679, 684, 685, 686, 687, 688, 689, 693, 694, 695, 699, 702, 703, 706, 710, 712, 715, 719, 722, 723, 724, 725, 727, 728, 730, 731, 732, 733, 735, 737, 738, 739, 759], "straight": 340, "strategi": 748, "stream": [753, 754, 755, 756, 757, 758, 760, 761], "streamlin": [745, 750], "string": [73, 114, 185, 192, 379, 530, 604, 608, 756], "striplin": 746, "structur": [72, 745, 748], "stub": [252, 253], "student": 769, "student_vers": [753, 754, 755, 756, 757, 758, 760, 761], "studi": 750, "style": 550, "sub_circuit_nam": 14, "subject": [744, 756], "sublicens": [744, 756], "submiss": 766, "submit": [742, 767], "subsequ": [749, 760], "substanti": [744, 756], "substrat": [744, 745], "succe": [104, 696, 707, 708, 709], "succeed": [23, 388, 390, 514, 515, 541, 543, 641], "success": [61, 67, 68, 71, 76, 77, 79, 81, 86, 106, 107, 108, 109, 190, 221, 230, 252, 253, 354, 381, 383, 384, 506, 519, 526, 527, 529, 539, 547, 548, 549, 552, 553, 554, 563, 573, 599, 612, 620, 621, 622, 626, 634, 646, 647, 648, 654, 690, 701, 702, 706, 720, 722, 723, 724, 725, 728, 734, 737, 738], "suffix": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 760, 761, 763, 765], "suit": 766, "super": [753, 754, 755, 756, 757, 758, 760, 761], "support": [67, 68, 74, 75, 77, 104, 379, 393, 400, 433, 621, 707, 708, 709, 710, 742, 765, 766, 767, 771, 772], "sure": [458, 771], "surfac": [379, 403, 412, 416, 419, 488, 539, 552, 555], "surface_triangle_length": 801, "surpport": 379, "surround": 745, "svia": [4, 758], "sw": [381, 383, 384], "sweep": [379, 401, 405, 406, 410, 420, 424, 428, 429, 430, 431, 432, 433, 439, 653, 745, 746, 747, 748, 749, 750, 759, 760, 765, 800, 801], "sweep1": [744, 745, 746, 748, 759, 760, 765, 801], "sweep_data": [748, 751], "sweep_nam": 379, "sweep_typ": [379, 744, 746, 759], "sweepdata": [748, 751], "sweephfss3dlayout": [744, 746, 759], "sweepnam": [744, 745, 746, 759], "sweeptyp": [379, 433, 653], "switch": [73, 742, 767], "swz": 802, "sy": [596, 753, 754, 755, 756, 757, 758, 760, 761], "symbol": [685, 763], "symmetr": 693, "syntax": [240, 770], "syslib": [595, 744, 745, 746, 748, 749, 753, 758, 759], "system": [7, 769], "syz": [379, 662, 751, 799], "t": [379, 524, 754, 758, 766], "t1": 746, "t10": 754, "t2": 746, "t28": 754, "t29": 754, "tag": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "take": [73, 74, 379, 524, 555, 755, 761], "taken": [573, 646, 648], "talk": 437, "tan": 190, "tangent": [582, 583, 584, 586], "target": [516, 522, 523, 525, 533, 709], "target_aedb": [747, 750], "target_fil": [381, 383, 384], "target_padstack_nam": 627, "target_path": [227, 635], "targetfil": [696, 754, 755, 756, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "targetfile1": [88, 706, 707, 708, 709, 713], "targetfile2": [707, 708, 709], "targetfold": 757, "task": 781, "team": [742, 767, 771], "technologi": 766, "technology_fil": 760, "temp": [379, 388, 390, 480, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765], "temp_dir": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 760, 761], "temp_fil": [763, 765], "temp_fold": [754, 756, 763, 765, 770, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 793, 795, 798, 799, 801, 803], "tempfil": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 760, 761, 763, 765], "temporari": [379, 746, 747, 750, 751, 754, 758, 760, 761, 763, 765], "temporarydirectori": [745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 760, 761, 763, 765], "termin": [74, 220, 222, 228, 260, 269, 270, 271, 272, 280, 282, 283, 289, 294, 296, 306, 307, 308, 309, 318, 320, 321, 328, 331, 382, 501, 516, 522, 523, 524, 525, 530, 533, 543, 623, 661, 666, 667, 679, 742, 745, 765, 767, 769], "terminal_point": [524, 787], "test": [338, 390, 584, 769, 784], "test2": 796, "test_0rlc": 779, "test_dc": 799, "test_isrc": 379, "test_layout": 745, "test_port": 784, "test_renam": 784, "test_sweep": 379, "test_vsrc": 379, "text": [82, 98, 110], "than": [73, 80, 252, 253, 576, 605, 641, 742, 767], "thei": [80, 706, 750], "them": [80, 379, 641, 743, 773], "therebi": 749, "therefor": [557, 749, 766], "thermal": [379, 481, 766], "theta": 745, "thi": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 18, 24, 67, 73, 74, 77, 104, 110, 120, 121, 160, 175, 190, 216, 224, 231, 232, 233, 252, 253, 260, 262, 263, 266, 278, 291, 296, 298, 299, 303, 316, 330, 351, 353, 355, 362, 365, 366, 379, 386, 400, 403, 419, 437, 458, 506, 507, 508, 509, 510, 511, 512, 524, 527, 530, 555, 616, 620, 621, 623, 641, 653, 691, 695, 706, 708, 709, 710, 711, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 768, 769, 770, 771, 774, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 795, 796, 798, 799, 800, 801, 803], "thick": [190, 199, 646, 685, 691, 693, 697, 710, 744, 745, 746, 748, 753, 763, 791, 793, 796, 800], "thoroughli": [742, 767], "those": [543, 763, 765], "three": [745, 746], "threshold": [97, 426, 437, 603, 605], "through": [7, 97, 201, 606, 621, 751, 754, 766, 769], "thu": [744, 745, 746, 747, 750, 753, 754, 755, 757, 758, 759, 760, 761, 763, 766, 775], "ti": 379, "time": [379, 555, 663, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 765, 775, 795], "time_xtalk": 663, "timer_start": [755, 761], "titl": [742, 767], "tm": [744, 745], "tmp3amwrer8": 758, "tmp65pl_kl3": 753, "tmpb5l8fmi_": 755, "tmpfold": 744, "tmpii949abu": 754, "tmpm3u3t_gl": 747, "tmpmes9lveq": 745, "tmpmnojxc5x": 751, "tmpn0aovtef": 746, "tmpn7c1ww_2": 761, "tmpqx3c_rjq": 750, "tmps__wimtk": 748, "tmpsjcqto1d": 760, "tmpszjv6gdp": 765, "tmpx267jkta": 749, "tolay": [645, 744, 745, 749], "toler": [420, 552], "too": 379, "tool": [7, 742, 767], "top": [2, 6, 31, 58, 177, 215, 221, 253, 257, 608, 616, 622, 649, 689, 691, 702, 706, 707, 708, 709, 710, 744, 745, 746, 748, 749, 753, 754, 758, 759, 760, 763, 787, 793], "top_el": 754, "top_lay": 793, "top_layer_obj": [6, 759], "topic": 769, "tornado": [753, 754, 755, 756, 757, 758, 760, 761], "tort": [744, 756], "total": [193, 349, 536, 793], "touch": 164, "touchston": [106, 662, 765], "touchstone_file_path": 662, "trace": [109, 170, 527, 530, 537, 550, 564, 641, 745, 748, 750, 758, 787, 789, 796, 800, 803], "trace_in_lay": [749, 758], "trace_in_width": [749, 758], "trace_n": 746, "trace_out_lay": [749, 758], "trace_out_width": [749, 758], "trace_p": 746, "trace_path": 759, "trace_seg": 761, "trace_w": 745, "trace_w2": 745, "trace_width": [564, 749], "trace_with_via_f": 796, "traceback": [753, 754, 755, 756, 757, 758, 760, 761], "traitlet": [753, 754, 755, 756, 757, 758, 760, 761], "transform": [707, 708, 709], "transient": 748, "transit": 746, "translat": [760, 766], "treat": 379, "tree": 609, "tri": 527, "trigger": 649, "trim": [464, 543], "trim_to_termin": 543, "troubleshoot": [768, 773], "true": [0, 8, 23, 28, 30, 31, 61, 67, 68, 71, 73, 74, 75, 76, 77, 79, 81, 86, 104, 106, 107, 108, 109, 110, 120, 121, 169, 175, 190, 221, 227, 228, 230, 233, 252, 253, 349, 365, 379, 381, 383, 384, 388, 390, 403, 404, 405, 406, 408, 421, 426, 431, 434, 436, 439, 448, 451, 452, 454, 455, 456, 457, 465, 466, 467, 468, 469, 471, 473, 475, 478, 481, 484, 485, 494, 495, 496, 497, 499, 502, 506, 514, 515, 519, 526, 527, 529, 539, 541, 543, 552, 553, 554, 555, 563, 573, 575, 599, 605, 608, 610, 611, 612, 616, 620, 621, 623, 626, 635, 641, 646, 647, 648, 649, 654, 662, 669, 674, 677, 690, 693, 695, 696, 701, 702, 706, 707, 708, 709, 710, 720, 722, 723, 724, 725, 728, 734, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 774, 787, 796, 800, 801], "truncat": 465, "try": [573, 746], "tupl": [72, 88, 117, 175, 214, 215, 516, 522, 533, 557, 616, 630, 632, 710], "tutori": [773, 782], "two": [67, 74, 77, 516, 522, 523, 524, 525, 528, 533, 557, 641, 657, 660, 668, 670, 673, 679, 708, 709, 746, 751, 758], "txt": [7, 742, 767], "type": [16, 27, 30, 36, 49, 62, 68, 73, 80, 98, 104, 106, 110, 177, 178, 203, 233, 257, 261, 273, 294, 297, 310, 331, 362, 379, 397, 423, 525, 549, 561, 572, 630, 653, 663, 684, 685, 686, 687, 688, 689, 698, 703, 710, 723, 745, 747, 751, 761, 763, 765, 773, 790, 801], "typic": 379, "u": 769, "u1": [74, 747, 750, 751, 754, 765, 774, 777, 778, 779, 784, 785, 786, 788], "u100": [88, 707, 708, 709], "u15": 774, "u1_pcie_gen4_tx3_cap_n": 751, "u1_pcie_gen4_tx3_cap_p": 751, "u2": 754, "u2a5": [0, 8, 73, 74, 517, 518, 520, 521, 528, 531, 532, 655, 656, 658, 659, 661, 668, 671, 672], "u7": 788, "u7_gnd": 788, "u9": 781, "u9_gnd_pin": 781, "ui": [745, 746, 766], "um": 760, "uncom": 759, "undefin": [58, 116, 201, 257, 362], "undefinedlayertyp": 684, "under": 772, "understand": [768, 773], "union": 801, "union_polygon": 801, "uniqu": [73, 623], "unit": [239, 564, 573, 621, 622, 744, 745, 746, 747, 754, 755, 757, 759, 760], "unitless": 379, "unless": 379, "unspecifi": [382, 501], "unwant": 524, "up": [379, 691, 710, 746, 747, 750, 751, 758, 761, 769, 771, 775, 776, 790], "updat": [107, 110, 597, 745, 771, 793], "upgrad": [742, 767, 769], "upper": [15, 60, 259, 262, 298, 350, 351, 523, 535, 549, 742, 748, 767], "upper_pad_to_lower_pad": [201, 621], "upper_right_point": [6, 549, 759], "us": [0, 1, 3, 4, 61, 68, 71, 73, 74, 75, 82, 85, 98, 109, 110, 213, 221, 227, 379, 381, 383, 384, 403, 420, 424, 436, 441, 442, 443, 447, 448, 450, 457, 458, 464, 466, 467, 468, 469, 470, 471, 472, 473, 478, 489, 490, 492, 502, 503, 524, 527, 530, 555, 563, 564, 584, 603, 608, 620, 621, 623, 629, 631, 635, 636, 641, 653, 662, 669, 695, 707, 708, 709, 719, 724, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 765, 767, 768, 769, 770, 772, 773, 790, 795, 800, 803], "usag": [379, 771, 801], "usb3_d_n": 786, "usb3_vbu": 754, "use_airbox_horizontal_extent_multipl": 800, "use_airbox_negative_vertical_extent_multipl": 800, "use_airbox_positive_vertical_extent_multipl": 800, "use_arc_to_chord_error": 801, "use_dc_custom_set": 754, "use_default_coax_port_radial_extens": [379, 774], "use_default_cutout": [8, 379], "use_defeatur": 801, "use_defeature_abs_length": 801, "use_dielectric_extent_multipl": 800, "use_dot_separ": 623, "use_pp": 760, "use_pyaedt_cutout": 747, "use_pyaedt_extent_comput": 755, "use_q3d_for_dc": [379, 744, 746, 759], "use_radiation_boundari": 379, "use_round_corn": 755, "use_shell_el": 801, "user": [379, 456, 685, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 771, 773], "user_defined_component_nam": 745, "user_defined_ext": 530, "user_global_n": [753, 754, 755, 756, 757, 758, 760, 761], "user_n": [753, 754, 755, 756, 757, 758, 760, 761], "userwarn": [744, 745, 746, 747, 748, 751, 753, 754, 755, 757, 758, 759, 760, 761, 763, 765], "usual": [379, 641], "util": [505, 749, 758], "v": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 769], "v0": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "v1": [381, 383, 384, 754], "v1p0_s0": [336, 337, 346], "v1p5_s3": [517, 520, 531, 655, 658, 661, 671], "v222": 769, "v231": 771, "v241": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 765], "v28": 754, "v29": 754, "v3": [744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "val": [179, 180, 639, 640], "vale": [73, 96], "valid": [524, 574, 685, 702, 750], "validate_full_design": 750, "validation_info": 750, "valu": [16, 22, 27, 49, 50, 68, 71, 73, 74, 75, 82, 92, 97, 98, 107, 110, 111, 179, 180, 185, 187, 194, 195, 197, 200, 201, 202, 221, 227, 251, 252, 253, 265, 293, 349, 379, 381, 382, 383, 384, 389, 398, 399, 401, 402, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 435, 436, 437, 439, 441, 442, 443, 444, 447, 450, 454, 457, 464, 466, 467, 468, 469, 471, 476, 477, 478, 481, 482, 484, 485, 487, 488, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 511, 512, 516, 517, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 535, 557, 564, 579, 582, 605, 608, 616, 620, 628, 630, 632, 633, 635, 639, 640, 641, 645, 647, 649, 653, 655, 658, 659, 663, 665, 668, 669, 671, 672, 674, 697, 706, 707, 708, 709, 710, 745, 747, 748, 749, 754, 765, 772, 781, 793, 797, 798], "value_col": [98, 747], "valuefield": 110, "variabl": [112, 113, 114, 115, 216, 245, 506, 507, 508, 509, 510, 511, 512, 741, 745, 748, 749, 761, 769, 772, 790], "variable_valu": [564, 755], "variableserv": [505, 749, 758], "variat": 745, "variou": [769, 790], "vcc": 379, "vdd": 749, "vdd_ddr": 754, "ve": [763, 765], "vector": [88, 563, 707], "venv": [744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765], "veri": 379, "version": [85, 87, 90, 91, 92, 94, 95, 97, 213, 517, 518, 520, 521, 528, 531, 532, 655, 656, 658, 659, 661, 668, 671, 672, 719, 721, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 768, 773, 774, 775, 785, 787, 788, 798, 801], "vertic": [221, 333, 379, 442, 443, 516, 522, 524, 525, 527, 533], "vertical_extent_factor": [516, 522, 525, 533], "via": [121, 190, 197, 207, 239, 379, 485, 497, 504, 620, 625, 636, 637, 638, 641, 645, 706, 723, 741, 746, 749, 757, 760], "via_0": 796, "via_ap_d": 748, "via_dens": 801, "via_diam": 746, "via_hol": 750, "via_hole_s": [4, 749, 758], "via_materi": 801, "via_nam": [645, 744, 745, 746], "via_num_sid": 801, "via_pitch": 758, "via_report_fil": 379, "via_set": 801, "via_spac": [745, 746], "via_styl": 801, "view": [741, 751, 757, 766, 770, 773], "virt_gnd": [744, 745], "virtual": [769, 771], "visibl": [706, 745], "visual": [750, 754, 761, 766], "visualz": 751, "vname": 761, "void": [231, 234, 349, 367, 379, 418, 419, 488, 545, 548, 554, 746, 761, 801], "void_poli": 746, "void_shap": [545, 746], "volt": [381, 384], "voltag": [76, 281, 319, 379, 381, 383, 384, 495, 531, 532, 670, 671, 672, 673, 674, 679, 682, 754, 789], "voltage_valu": [381, 383, 384, 531, 532, 671, 672], "voltagesourc": 666, "volum": [239, 745], "vp_neg": 786, "vp_po": 786, "vprobe": 786, "vrm": 754, "vrm_current_sourc": 786, "vrm_po": 786, "vrm_voltage_sourc": 786, "vss": 749, "w": [761, 763, 765], "w1": 745, "w11": 754, "w18": 754, "w19": 754, "w1_name": 745, "w2": 745, "wa": [744, 745, 747, 750, 751, 754, 755, 756, 757, 759, 760, 761, 763, 765], "wai": [742, 754, 766, 767], "wall": 641, "want": [379, 458, 527, 749, 750, 775], "warn": [742, 744, 745, 746, 747, 748, 749, 750, 751, 759, 765, 767], "warranti": [744, 756], "wave": [264, 268, 270, 296, 300, 305, 307, 516, 522, 525, 533, 746, 748, 787], "wave_horizontal_extens": 759, "wave_port_1": 746, "wave_port_2": 746, "wave_vertical_extens": 759, "waveguid": 759, "wavelength": [745, 748], "waveport": [264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 741, 748], "we": [379, 754, 760, 765], "websit": [766, 769], "well": 766, "were": [554, 602], "what": 768, "wheelhous": 771, "when": [10, 61, 67, 68, 71, 73, 74, 75, 76, 77, 79, 81, 86, 91, 96, 104, 106, 107, 108, 109, 190, 221, 227, 228, 230, 354, 379, 381, 383, 384, 388, 390, 403, 405, 406, 420, 421, 431, 434, 436, 439, 441, 442, 443, 444, 448, 450, 451, 454, 455, 457, 458, 464, 466, 467, 468, 469, 471, 478, 481, 484, 485, 494, 495, 496, 497, 499, 502, 506, 514, 515, 519, 524, 526, 527, 529, 539, 541, 543, 547, 548, 549, 552, 553, 554, 555, 563, 599, 605, 611, 612, 620, 626, 635, 641, 647, 654, 662, 669, 695, 696, 701, 702, 707, 708, 709, 720, 722, 723, 724, 725, 728, 734, 737, 738, 747, 748, 765], "where": [58, 73, 74, 524, 645, 649, 685, 703, 747, 749, 771], "whether": [12, 67, 71, 74, 77, 80, 107, 108, 120, 121, 175, 190, 220, 223, 227, 228, 230, 233, 267, 276, 277, 279, 280, 281, 292, 301, 304, 314, 315, 317, 318, 319, 338, 365, 466, 468, 470, 471, 472, 508, 573, 576, 605, 616, 621, 623, 635, 645, 653, 662, 685, 693, 695, 701, 706, 710, 720, 744, 756], "which": [72, 73, 74, 80, 82, 94, 98, 110, 220, 221, 227, 237, 269, 290, 306, 329, 379, 460, 470, 517, 520, 524, 531, 547, 548, 549, 550, 563, 564, 573, 576, 577, 605, 622, 623, 630, 635, 641, 646, 653, 655, 658, 671, 695, 707, 708, 709, 719, 745, 746, 749, 750, 751, 754, 755, 756, 757, 760, 766, 769, 775], "while": [557, 744, 745, 748, 749, 750, 755, 766, 772], "white": [722, 725], "who": 769, "whom": [744, 756], "why": 768, "wide": [749, 758], "width": [109, 170, 175, 326, 516, 522, 525, 533, 537, 549, 550, 564, 616, 710, 744, 745, 746, 750, 753, 758, 759, 761, 800, 803], "win64": [744, 745, 746, 747, 748, 749, 750, 751, 754, 759, 765], "window": [7, 742, 754, 766, 767, 769], "winerror": [753, 754, 755, 756, 757, 758, 760, 761], "winx64": 771, "wire": [379, 496], "wirebond": [379, 685], "within": 741, "without": [744, 745, 756, 758, 769], "won": 379, "work": [524, 652, 749, 750, 754, 769, 770, 771, 790], "workflow": 766, "working_dir": 760, "working_fold": 748, "would": 768, "write": [1, 742, 763, 767, 771], "write_xml": 760, "written": [754, 766], "writtent": 702, "x": [15, 92, 108, 181, 194, 250, 262, 298, 336, 343, 346, 350, 351, 352, 530, 535, 547, 548, 556, 557, 560, 563, 621, 645, 648, 706, 707, 708, 709, 754], "x1": [548, 632, 747, 750, 751, 760], "x1_pcie_gen4_tx3_n": 751, "x1_pcie_gen4_tx3_p": 751, "x2": [548, 632, 760], "x64": [753, 754, 755, 756, 757, 758, 759, 760, 761], "x_size": [621, 746, 796], "x_valu": 346, "xc": 548, "xloc": 758, "xlsx": 695, "xml": [695, 702, 748, 753, 755], "xn": 548, "xy": 33, "y": [15, 92, 108, 182, 195, 250, 262, 298, 336, 343, 346, 350, 351, 352, 530, 535, 547, 548, 556, 557, 560, 563, 621, 645, 648, 706, 707, 708, 709, 754], "y1": [548, 632, 760], "y11": 754, "y2": [548, 632, 760], "y28": 754, "y29": 754, "y_size": [621, 746, 796], "y_valu": 346, "yc": 548, "yield": 589, "yloc": 758, "yloc_l": 759, "yloc_u": 759, "yn": 548, "you": [110, 379, 458, 527, 741, 742, 743, 744, 745, 746, 748, 749, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 775, 781, 790, 795], "your": [379, 743, 745, 749, 753, 759, 769, 771, 790], "z": [706, 709, 765], "z0": [293, 435], "zero": [190, 379, 400, 747, 750, 798], "zip": 769, "zmqshell": [753, 754, 755, 756, 757, 758, 760, 761]}, "titles": ["Components", "EDB manager", "Stackup &amp; layers", "Nets", "vias and padstacks", "Ports", "Modeler &amp; primitives", "Siwave manager", "Simulation configuration", "Sources and excitations", "pyedb.dotnet.edb", "EDBComponent", "assign_rlc_model", "assign_s_param_model", "assign_spice_model", "bounding_box", "cap_value", "center", "component", "component_def", "component_instance", "component_property", "create_clearance_on_component", "create_package_def", "delete", "enabled", "id", "ind_value", "is_enabled", "is_null", "is_parallel_rlc", "is_top_mounted", "layout_instance", "location", "lower_elevation", "model", "model_type", "name", "net", "netlist_model", "nets", "numpins", "package_def", "part_name", "partname", "pinlist", "pins", "placement_layer", "refdes", "res_value", "rlc_values", "rotation", "s_param_model", "solder_ball_diameter", "solder_ball_height", "solder_ball_placement", "solder_ball_shape", "spice_model", "top_bottom_association", "type", "upper_elevation", "use_s_parameter_model", "value", "Components", "ICs", "IOs", "Others", "add_port_on_rlc_component", "add_rlc_boundary", "capacitors", "components_by_partname", "create", "create_pingroup_from_pins", "create_port_on_component", "create_port_on_pins", "create_rlc_component", "create_source_on_component", "deactivate_rlc_component", "definitions", "delete", "delete_single_pin_rlc", "disable_rlc_component", "export_bom", "export_definition", "find_by_reference_designator", "get_aedt_pin_name", "get_component_by_name", "get_component_net_connection_info", "get_component_placement_vector", "get_components_from_nets", "get_nets_from_pin_list", "get_pin_from_component", "get_pin_position", "get_pins", "get_pins_name_from_net", "get_rats", "get_solder_ball_height", "get_through_resistor_list", "import_bom", "import_definition", "inductors", "instances", "nport_comp_definition", "refresh_components", "replace_rlc_by_gap_boundaries", "resistors", "set_component_model", "set_component_rlc", "set_solder_ball", "short_component_pins", "update_rlc_from_bom", "EdbValue", "name", "tofloat", "tostring", "value", "LayerEdbClass", "color", "fill_material", "id", "is_stackup_layer", "is_via_layer", "name", "transparency", "type", "update", "EDBDifferentialPairData", "add_net", "api_class", "api_create", "api_negative_net", "api_nets", "api_positive_net", "delete", "find_by_name", "is_null", "name", "negative_net", "positive_net", "EDBExtendedNetData", "add_net", "api_class", "api_create", "api_nets", "components", "delete", "find_by_name", "is_null", "name", "nets", "rlc", "serial_rlc", "shunt_rlc", "EDBNetClassData", "add_net", "api_create", "api_nets", "delete", "is_null", "name", "nets", "EDBNetsData", "api_class", "api_object", "components", "create", "delete", "extended_net", "find_by_name", "find_dc_short", "get_smallest_trace_width", "is_null", "is_power_ground", "name", "padstack_instances", "plot", "primitives", "EDBPadProperties", "geometry_type", "int_to_geometry_type", "int_to_pad_type", "offset_x", "offset_y", "parameters", "parameters_values", "parameters_values_string", "polygon_data", "rotation", "shape", "EDBPadstack", "convert_to_3d_microvias", "hole_diameter", "hole_diameter_string", "hole_finished_size", "hole_offset_x", "hole_offset_y", "hole_parameters", "hole_params", "hole_plating_ratio", "hole_plating_thickness", "hole_properties", "hole_range", "hole_rotation", "hole_type", "instances", "material", "name", "padstack_instances", "split_to_microvias", "via_layers", "via_start_layer", "via_stop_layer", "EDBPadstackInstance", "aedt_name", "backdrill_bottom", "backdrill_top", "bounding_box", "component", "component_pin", "create_coax_port", "create_port", "create_rectangle_in_pad", "create_terminal", "dcir_equipotential_region", "delete", "get_connected_object_id_set", "get_connected_objects", "get_reference_pins", "get_terminal", "id", "in_polygon", "in_voids", "is_null", "is_pin", "is_void", "layer", "layer_name", "layer_range_names", "lower_elevation", "metal_volume", "name", "net", "net_name", "object_instance", "padstack_definition", "parametrize_position", "pin", "pin_number", "pingroups", "placement_layer", "position", "rotation", "set_backdrill_bottom", "set_backdrill_top", "start_layer", "stop_layer", "terminal", "top_bottom_association", "type", "upper_elevation", "GapPort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "id", "impedance", "is_circuit_port", "is_current_source", "is_null", "is_port", "is_reference_terminal", "is_voltage_source", "layer", "location", "magnitude", "name", "net", "net_name", "phase", "ref_terminal", "reference_net_name", "reference_object", "renormalize", "renormalize_z0", "terminal_type", "type", "WavePort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "deembed_length", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "horizontal_extent_factor", "id", "impedance", "is_circuit_port", "is_current_source", "is_null", "is_port", "is_reference_terminal", "is_voltage_source", "layer", "location", "magnitude", "name", "net", "net_name", "pec_launch_width", "phase", "ref_terminal", "reference_net_name", "reference_object", "terminal_type", "type", "vertical_extent_factor", "EDBArcs", "center", "end", "height", "is_ccw", "is_point", "is_segment", "length", "mid_point", "points", "points_raw", "radius", "start", "EDBPrimitives", "arcs", "area", "bbox", "bounding_box", "center", "component", "convert_to_polygon", "delete", "get_closest_arc_midpoint", "get_closest_point", "get_connected_object_id_set", "get_connected_objects", "id", "intersect", "intersection_type", "is_arc", "is_intersecting", "is_negative", "is_null", "is_void", "layer", "layer_name", "longest_arc", "name", "net", "net_name", "shortest_arc", "subtract", "type", "unite", "voids", "SimulationConfiguration", "ac_settings", "add_current_source", "add_dc_ground_source_term", "add_rlc", "add_voltage_source", "batch_solve_settings", "build_simulation_project", "dc_settings", "export_json", "filename", "import_json", "open_edb_after_build", "setup_name", "solver_type", "SimulationConfigurationAc", "adaptive_high_freq", "adaptive_low_freq", "adaptive_type", "arc_angle", "arc_to_chord_error", "basis_order", "decade_count", "defeature_abs_length", "defeature_layout", "do_lambda_refinement", "enforce_causality", "enforce_passivity", "ignore_non_functional_pads", "include_inter_plane_coupling", "max_arc_points", "max_mag_delta_s", "max_num_passes", "max_suf_dev", "mesh_freq", "mesh_sizefactor", "min_num_passes", "min_pad_area_to_mesh", "min_plane_area_to_mesh", "min_void_area", "minimum_void_surface", "passivity_tolerance", "percentage_error_z0", "process_padstack_definitions", "radiation_box", "relative_error", "return_current_distribution", "snap_length_threshold", "start_azimuth", "start_freq", "step_freq", "stop_freq", "sweep_interpolating", "sweep_name", "sweep_type", "use_arc_to_chord_error", "use_error_z0", "use_q3d_for_dc", "xtalk_threshold", "SimulationConfigurationBatch", "add_frequency_sweep", "add_source", "airbox_horizontal_extent", "airbox_negative_vertical_extent", "airbox_positive_vertical_extent", "coax_solder_ball_diameter", "components", "coplanar_instances", "cutout_subdesign_expansion", "cutout_subdesign_round_corner", "cutout_subdesign_type", "dielectric_extent", "do_cutout_subdesign", "do_pingroup", "etching_factor_instances", "generate_excitations", "generate_solder_balls", "honor_user_dielectric", "include_only_selected_nets", "output_aedb", "power_nets", "signal_layer_etching_instances", "signal_layers_properties", "signal_nets", "sources", "trim_reference_size", "truncate_airbox_at_ground", "use_airbox_horizontal_extent_multiple", "use_airbox_negative_vertical_extent_multiple", "use_airbox_positive_vertical_extent_multiple", "use_default_coax_port_radial_extension", "use_default_cutout", "use_dielectric_extent_multiple", "use_pyaedt_cutout", "use_radiation_boundary", "SimulationConfigurationDc", "dc_compute_inductance", "dc_contact_radius", "dc_error_energy", "dc_export_thermal_data", "dc_full_report_path", "dc_icepak_temp_file", "dc_import_thermal_data", "dc_max_init_mesh_edge_length", "dc_max_num_pass", "dc_mesh_bondwires", "dc_mesh_vias", "dc_min_num_pass", "dc_min_plane_area_to_mesh", "dc_min_void_area_to_mesh", "dc_num_bondwire_sides", "dc_num_via_sides", "dc_per_pin_res_path", "dc_per_pin_use_pin_format", "dc_percent_local_refinement", "dc_perform_adaptive_refinement", "dc_plot_jv", "dc_refine_bondwires", "dc_refine_vias", "dc_report_config_file", "dc_report_show_Active_devices", "dc_slide_position", "dc_source_terms_to_ground", "dc_use_dc_custom_settings", "dc_use_loop_res_for_per_pin", "dc_via_report_path", "Variable", "delete", "description", "is_parameter", "name", "value", "value_object", "value_string", "EdbHfss", "configure_hfss_analysis_setup", "configure_hfss_extents", "create_bundle_wave_port", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_coax_port_on_component", "create_current_source_on_net", "create_current_source_on_pin", "create_differential_wave_port", "create_edge_port_horizontal", "create_edge_port_on_polygon", "create_edge_port_vertical", "create_hfss_ports_on_padstack", "create_lumped_port_on_net", "create_resistor_on_pin", "create_rlc_boundary_on_pins", "create_vertical_circuit_port_on_clipped_traces", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_wave_port", "excitations", "get_layout_bounding_box", "get_ports_number", "get_trace_width_for_traces_with_ports", "hfss_extent_info", "layout_defeaturing", "probes", "set_coax_port_attributes", "sources", "trim_component_reference_size", "EdbLayout", "add_void", "circles", "create_circle", "create_polygon", "create_rectangle", "create_trace", "db", "defeature_polygon", "delete_primitives", "fix_circle_void_for_clipping", "get_layout_statistics", "get_polygon_bounding_box", "get_polygon_points", "get_polygons_by_layer", "get_primitive", "get_primitive_by_layer_and_point", "get_primitives", "layers", "parametrize_polygon", "parametrize_trace_width", "paths", "polygons", "polygons_by_layer", "primitives", "primitives_by_layer", "primitives_by_net", "rectangles", "shape_to_polygon_data", "unite_polygons_on_layer", "LayoutValidation", "dc_shorts", "disjoint_nets", "fix_self_intersections", "illegal_net_names", "illegal_rlc_values", "Materials", "add_conductor_material", "add_debye_material", "add_dielectric_material", "add_djordjevicsarkar_dielectric", "add_material", "add_multipole_debye_material", "delete_material", "duplicate", "iterate_materials_in_amat", "load_amat", "load_material", "material_property_to_id", "materials", "read_materials", "read_syslib_material", "syslib", "update_material", "EdbNets", "classify_nets", "components_by_nets", "db", "delete", "eligible_power_nets", "find_or_create_net", "generate_extended_nets", "get_dcconnected_net_list", "get_net_by_name", "get_plot_data", "get_powertree", "is_net_in_component", "is_power_gound_net", "merge_nets_polygons", "netlist", "nets", "nets_by_components", "plot", "power", "signal", "EdbPadstacks", "check_and_fix_via_plating", "create", "create_circular_padstack", "create_coax_port", "db", "definitions", "delete_padstack_instances", "duplicate", "find_instance_by_id", "get_instances", "get_pad_parameters", "get_padstack_instance_by_net_name", "get_padstack_instances_intersecting_bounding_box", "get_padstack_instances_rtree_index", "get_pinlist_from_component_and_net", "get_reference_pins", "get_via_instance_from_net", "instances", "instances_by_name", "int_to_geometry_type", "int_to_pad_type", "merge_via_along_lines", "pad_type", "pingroups", "pins", "place", "remove_pads_from_padstack", "set_all_antipad_value", "set_pad_property", "set_solderball", "vias", "EdbSiwave", "add_siwave_dc_analysis", "add_siwave_syz_analysis", "configure_siw_analysis_setup", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_circuit_port_on_pin_group", "create_current_source_on_net", "create_current_source_on_pin", "create_current_source_on_pin_group", "create_dc_terminal", "create_exec_file", "create_impedance_crosstalk_scan", "create_pin_group", "create_pin_group_on_net", "create_pin_group_terminal", "create_port_between_pin_and_layer", "create_resistor_on_pin", "create_rlc_component", "create_voltage_probe_on_pin_group", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_voltage_source_on_pin_group", "create_vrm_module", "excitations", "icepak_component_file", "icepak_use_minimal_comp_defaults", "pin_groups", "place_voltage_probe", "probes", "sources", "voltage_regulator_modules", "Stackup", "add_document_layer", "add_layer", "add_layer_above", "add_layer_below", "add_layer_bottom", "add_layer_top", "add_outline_layer", "adjust_solder_dielectrics", "all_layers", "create_symmetric_stackup", "dielectric_layers", "export", "flip_design", "get_layout_thickness", "layer_types", "layers", "layers_by_id", "limits", "load", "mode", "non_stackup_layers", "num_layers", "place_a3dcomp_3d_placement", "place_in_layout", "place_in_layout_3d_placement", "place_instance", "plot", "refresh_layer_collection", "remove_layer", "residual_copper_area_per_layer", "set_layer_clone", "signal_layers", "stackup_layers", "thickness", "update_layout", "Siwave", "close_project", "current_version", "export_dc_simulation_report", "export_element_data", "export_icepak_project", "export_siwave_report", "icepak", "lock_file", "open_project", "oproject", "project_file", "project_name", "project_path", "pyaedt_dir", "quit_application", "results_directory", "run_dc_simulation", "run_icepak_simulation", "save_project", "src_dir", "version_keys", "API reference", "Contribute", "Examples", "EDB: 5G linear array antenna", "EDB: Layout Components", "EDB: fully parametrized design", "EDB: Pin to Pin project", "EDB: geometry creation", "EDB: Layout Creation and Setup", "EDB: parameterized design", "EDB: Network Analysis in SIwave", "AEDT integration", "EDB: geometry creation", "EDB: SIwave DC-IR Analysis", "EDB: IPC2581 export", "EDB: Rename nets and ports", "EDB: plot nets with Matplotlib", "EDB: parametric via creation", "EDB: fully parametrized CPWG design", "EDB: Edit Control File and import gds", "EDB: post-layout parameterization", "Standalone", "Import Stackup", "Use configuration", "Set up EDB for Power Integrity Analysis", "About PyEDB", "Contribute", "Getting started", "Installation", "Quick code", "Troubleshooting", "Versions and interfaces", "PyEDB documentation 0.19.dev0", "Build a signal integrity project", "Clip a design", "Build simulation projects", "Create a resistor boundary on pins", "Create an RLC boundary on pins", "Create an RLC component between pins", "Working with a component", "Get layout statistics", "Get layout size", "Run layout queries", "Create a circuit port", "Create a coaxial port", "Create current and voltage sources", "Create an edge port", "Create port between a pin and layer", "Create sources", "User guide", "Add a layer in a layout stackup", "Work with a layer stackup", "Edit a layer stackup in a layout stackup", "Load a layout file", "Load a layout", "Create a padstack instance", "Work with a padstack", "Edit a padstack definition", "Set up a SIwave analysis", "Define an HFSS extent", "Set up an HFSS simulation", "Set up simulations", "Define design variables"], "titleterms": {"": [759, 765], "0": 773, "19": 773, "3d": [744, 745, 765], "5g": 744, "about": 766, "ac_set": 380, "activ": 759, "adaptive_high_freq": 395, "adaptive_low_freq": 396, "adaptive_typ": 397, "add": [744, 746, 749, 753, 791], "add_conductor_materi": 581, "add_current_sourc": 381, "add_dc_ground_source_term": 382, "add_debye_materi": 582, "add_dielectric_materi": 583, "add_djordjevicsarkar_dielectr": 584, "add_document_lay": 684, "add_frequency_sweep": 439, "add_lay": 685, "add_layer_abov": 686, "add_layer_below": 687, "add_layer_bottom": 688, "add_layer_top": 689, "add_materi": 585, "add_multipole_debye_materi": 586, "add_net": [127, 140, 154], "add_outline_lay": 690, "add_port_on_rlc_compon": 67, "add_rlc": 383, "add_rlc_boundari": 68, "add_siwave_dc_analysi": 652, "add_siwave_syz_analysi": 653, "add_sourc": 440, "add_void": 545, "add_voltage_sourc": 384, "addit": 760, "adher": [742, 767], "adjust_solder_dielectr": 691, "aedb": [755, 770], "aedt": [744, 745, 747, 750, 752, 759], "aedt_nam": 213, "airbox": 759, "airbox_horizontal_ext": 441, "airbox_negative_vertical_ext": 442, "airbox_positive_vertical_ext": 443, "all": [756, 781], "all_lay": 692, "an": [750, 755, 757, 770, 778, 779, 787, 800, 801], "analysi": [745, 751, 754, 765, 799], "analyz": [747, 765], "ansi": [754, 756], "antenna": 744, "api": 741, "api_class": [128, 141, 162], "api_cr": [129, 142, 155], "api_negative_net": 130, "api_net": [131, 143, 156], "api_object": 163, "api_positive_net": 132, "applic": [749, 750], "arc": 348, "arc_angl": 398, "arc_to_chord_error": 399, "area": 349, "arrai": 744, "assign": [745, 765], "assign_rlc_model": 12, "assign_s_param_model": 13, "assign_spice_model": 14, "backdrill_bottom": 214, "backdrill_top": 215, "basis_ord": 400, "batch_solve_set": 385, "bbox": 350, "between": [779, 788], "bom": 747, "boundari": [745, 760, 777, 778], "boundary_typ": [261, 297], "bounding_box": [15, 216, 262, 298, 351], "build": [774, 776], "build_simulation_project": 386, "cap_valu": 16, "capacitor": 69, "capactitor": 765, "center": [17, 335, 352], "check": 747, "check_and_fix_via_pl": 620, "circl": 546, "circuit": 784, "class": [745, 757], "classify_net": 599, "clean": [745, 748, 749, 753, 755], "cleanup": 765, "clearanc": 759, "clip": 775, "clone": [742, 767], "close": [744, 745, 747, 748, 753, 755, 756, 759, 760], "close_project": 720, "coax_solder_ball_diamet": 444, "coaxial": [756, 785], "code": [742, 767, 770], "color": 117, "compat": 771, "compon": [0, 18, 63, 144, 164, 217, 263, 299, 353, 445, 745, 747, 749, 754, 756, 779, 780, 781], "component_def": 19, "component_inst": 20, "component_pin": 218, "component_properti": 21, "components_by_net": 600, "components_by_partnam": 70, "conda": 771, "configur": [8, 747, 751, 763, 764, 765], "configure_hfss_analysis_setup": 514, "configure_hfss_ext": 515, "configure_siw_analysis_setup": 654, "connect": [754, 770, 781], "connector": [744, 749], "contribut": [742, 767], "control": 760, "convert_to_3d_microvia": 190, "convert_to_polygon": 354, "copi": [755, 757], "coplanar_inst": 446, "couple_port": [264, 300], "cpwg": 759, "cpython": 769, "creat": [71, 165, 621, 744, 745, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 761, 765, 777, 778, 779, 784, 785, 786, 787, 788, 789, 796], "create_bundle_wave_port": 516, "create_circl": 547, "create_circuit_port_on_net": [517, 655], "create_circuit_port_on_pin": [518, 656], "create_circuit_port_on_pin_group": 657, "create_circular_padstack": 622, "create_clearance_on_compon": 22, "create_coax_port": [219, 623], "create_coax_port_on_compon": 519, "create_current_source_on_net": [520, 658], "create_current_source_on_pin": [521, 659], "create_current_source_on_pin_group": 660, "create_dc_termin": 661, "create_differential_wave_port": 522, "create_edge_port_horizont": 523, "create_edge_port_on_polygon": 524, "create_edge_port_vert": 525, "create_exec_fil": 662, "create_hfss_ports_on_padstack": 526, "create_impedance_crosstalk_scan": 663, "create_lumped_port_on_net": 527, "create_package_def": 23, "create_pin_group": 664, "create_pin_group_on_net": 665, "create_pin_group_termin": 666, "create_pingroup_from_pin": 72, "create_polygon": 548, "create_port": 220, "create_port_between_pin_and_lay": 667, "create_port_on_compon": 73, "create_port_on_pin": 74, "create_rectangl": 549, "create_rectangle_in_pad": 221, "create_resistor_on_pin": [528, 668], "create_rlc_boundary_on_pin": 529, "create_rlc_compon": [75, 669], "create_source_on_compon": 76, "create_symmetric_stackup": 693, "create_termin": 222, "create_trac": 550, "create_vertical_circuit_port_on_clipped_trac": 530, "create_voltage_probe_on_pin_group": 670, "create_voltage_source_on_net": [531, 671], "create_voltage_source_on_pin": [532, 672], "create_voltage_source_on_pin_group": 673, "create_vrm_modul": 674, "create_wave_port": 533, "creation": [748, 749, 753, 758], "current": 786, "current_vers": 721, "cutout": [747, 751, 755, 761, 765], "cutout_subdesign_expans": 447, "cutout_subdesign_round_corn": 448, "cutout_subdesign_typ": 449, "data": [745, 760], "databas": [754, 757], "db": [551, 601, 624], "dc": 754, "dc_compute_induct": 475, "dc_contact_radiu": 476, "dc_error_energi": 477, "dc_export_thermal_data": 478, "dc_full_report_path": 479, "dc_icepak_temp_fil": 480, "dc_import_thermal_data": 481, "dc_max_init_mesh_edge_length": 482, "dc_max_num_pass": 483, "dc_mesh_bondwir": 484, "dc_mesh_via": 485, "dc_min_num_pass": 486, "dc_min_plane_area_to_mesh": 487, "dc_min_void_area_to_mesh": 488, "dc_num_bondwire_sid": 489, "dc_num_via_sid": 490, "dc_per_pin_res_path": 491, "dc_per_pin_use_pin_format": 492, "dc_percent_local_refin": 493, "dc_perform_adaptive_refin": 494, "dc_plot_jv": 495, "dc_refine_bondwir": 496, "dc_refine_via": 497, "dc_report_config_fil": 498, "dc_report_show_active_devic": 499, "dc_set": 387, "dc_short": 575, "dc_slide_posit": 500, "dc_source_terms_to_ground": 501, "dc_use_dc_custom_set": 502, "dc_use_loop_res_for_per_pin": 503, "dc_via_report_path": 504, "dcir": 754, "dcir_equipotential_region": 223, "ddr4_dq": 756, "deactivate_rlc_compon": 77, "decade_count": 401, "declar": 770, "deemb": [265, 301], "deembed_length": 302, "defeature_abs_length": 402, "defeature_layout": 403, "defeature_polygon": 552, "defin": [749, 758, 759, 760, 765, 800, 803], "definit": [0, 4, 78, 625, 747, 763, 798], "delet": [24, 79, 133, 145, 157, 166, 224, 266, 303, 355, 506, 602], "delete_materi": 587, "delete_padstack_inst": 626, "delete_primit": 553, "delete_single_pin_rlc": 80, "depend": 750, "descript": 507, "design": [746, 749, 750, 759, 775, 803], "desktop": [744, 747, 765], "dev0": 773, "dielectric_ext": 450, "dielectric_lay": 694, "directori": [745, 749, 753, 755], "disable_rlc_compon": 81, "discuss": 771, "disjoint_net": 576, "displai": 747, "do_cutout_subdesign": 451, "do_lambda_refin": 404, "do_pingroup": 452, "do_renorm": [267, 304], "document": [742, 767, 773], "dotnet": 10, "down": 765, "download": [751, 755, 756, 757], "draw": [746, 759], "duplic": [588, 627], "e": 745, "edb": [1, 10, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 770], "edbarc": 334, "edbcompon": 11, "edbdifferentialpairdata": 126, "edbextendednetdata": 139, "edbhfss": 513, "edblayout": 544, "edbnet": 598, "edbnetclassdata": 153, "edbnetsdata": 161, "edbpadproperti": 177, "edbpadstack": [189, 619], "edbpadstackinst": 212, "edbprimit": 347, "edbsiwav": 651, "edbvalu": 111, "edg": 787, "edit": [759, 760, 793, 798], "electron": [744, 747, 754, 757, 765], "eligible_power_net": 603, "enabl": 25, "end": 336, "enforce_caus": 405, "enforce_pass": 406, "error": [742, 767, 770, 771], "etching_factor_inst": 453, "exampl": [743, 760, 763], "excit": [9, 534, 675, 744], "explicit": 770, "export": [695, 754, 755], "export_bom": 82, "export_dc_simulation_report": 722, "export_definit": 83, "export_element_data": 723, "export_icepak_project": 724, "export_json": 388, "export_siwave_report": 725, "expos": 745, "extend": 751, "extended_net": 167, "extent": [759, 800], "far": 745, "fetch": 760, "field": 745, "file": [751, 755, 760, 763, 765, 769, 770, 794], "filenam": 389, "fill_materi": 118, "find_by_nam": [134, 146, 168], "find_by_reference_design": 84, "find_dc_short": 169, "find_instance_by_id": 628, "find_or_create_net": 604, "finish": 748, "fix_circle_void_for_clip": 554, "fix_self_intersect": 577, "flip_design": 696, "folder": [748, 755, 757], "from": [749, 750, 763, 769, 770, 781], "fulli": [746, 759], "gapport": 260, "gd": 760, "gener": [751, 753], "generate_excit": 454, "generate_extended_net": 605, "generate_solder_bal": 455, "geometri": [744, 748, 753], "geometry_typ": 178, "get": [768, 781, 782], "get_aedt_pin_nam": 85, "get_closest_arc_midpoint": 356, "get_closest_point": 357, "get_component_by_nam": 86, "get_component_net_connection_info": 87, "get_component_placement_vector": 88, "get_components_from_net": 89, "get_connected_object": [226, 359], "get_connected_object_id_set": [225, 358], "get_dcconnected_net_list": 606, "get_edge_terminal_reference_primit": [268, 305], "get_inst": 629, "get_layout_bounding_box": 535, "get_layout_statist": 555, "get_layout_thick": 697, "get_net_by_nam": 607, "get_nets_from_pin_list": 90, "get_pad_edge_terminal_reference_pin": [269, 306], "get_pad_paramet": 630, "get_padstack_instance_by_net_nam": 631, "get_padstack_instances_intersecting_bounding_box": 632, "get_padstack_instances_rtree_index": 633, "get_padstack_terminal_reference_pin": [270, 307], "get_pin": 93, "get_pin_from_compon": 91, "get_pin_group_terminal_reference_pin": [271, 308], "get_pin_posit": 92, "get_pinlist_from_component_and_net": 634, "get_pins_name_from_net": 94, "get_plot_data": 608, "get_point_terminal_reference_primit": [272, 309], "get_polygon_bounding_box": 556, "get_polygon_point": 557, "get_polygons_by_lay": 558, "get_ports_numb": 536, "get_powertre": 609, "get_primit": [559, 561], "get_primitive_by_layer_and_point": 560, "get_rat": 95, "get_reference_pin": [227, 635], "get_smallest_trace_width": 170, "get_solder_ball_height": 96, "get_termin": 228, "get_through_resistor_list": 97, "get_trace_width_for_traces_with_port": 537, "get_via_instance_from_net": 636, "graphic": [744, 745, 746, 759], "ground": [744, 753, 759], "grpc": [771, 772], "guid": 790, "hard": [742, 767], "height": 337, "hfss": [744, 745, 746, 748, 765, 800, 801], "hfss3dlayout": 751, "hfss_extent_info": 538, "hfss_type": [273, 310], "hole_diamet": 191, "hole_diameter_str": 192, "hole_finished_s": 193, "hole_offset_i": 195, "hole_offset_x": 194, "hole_param": 197, "hole_paramet": 196, "hole_plating_ratio": 198, "hole_plating_thick": 199, "hole_properti": 200, "hole_rang": 201, "hole_rot": 202, "hole_typ": 203, "honor_user_dielectr": 456, "horizontal_extent_factor": 311, "i": 766, "ic": 64, "icepak": 726, "icepak_component_fil": 676, "icepak_use_minimal_comp_default": 677, "id": [26, 119, 229, 274, 312, 360, 770], "identifi": 754, "ignore_non_functional_pad": 407, "illegal_net_nam": 578, "illegal_rlc_valu": 579, "imped": [275, 313, 765], "implement": 747, "import": [744, 745, 747, 750, 751, 753, 756, 757, 759, 760, 763], "import_bom": 98, "import_definit": 99, "import_json": 390, "in_polygon": 230, "in_void": 231, "include_inter_plane_coupl": 408, "include_only_selected_net": 457, "ind_valu": 27, "indic": 773, "inductor": 100, "instal": [769, 771], "instanc": [0, 4, 101, 204, 637, 744, 750, 757, 796], "instances_by_nam": 638, "int_to_geometry_typ": [179, 639], "int_to_pad_typ": [180, 640], "integr": [752, 765, 774], "interfac": 772, "intersect": 361, "intersection_typ": 362, "io": 65, "ipc2581": 755, "ir": 754, "is_arc": 363, "is_ccw": 338, "is_circuit_port": [276, 314], "is_current_sourc": [277, 315], "is_en": 28, "is_intersect": 364, "is_neg": 365, "is_net_in_compon": 610, "is_nul": [29, 135, 147, 158, 171, 232, 278, 316, 366], "is_parallel_rlc": 30, "is_paramet": 508, "is_pin": 233, "is_point": 339, "is_port": [279, 317], "is_power_gound_net": 611, "is_power_ground": 172, "is_reference_termin": [280, 318], "is_seg": 340, "is_stackup_lay": 120, "is_top_mount": 31, "is_via_lay": 121, "is_void": [234, 367], "is_voltage_sourc": [281, 319], "issu": [742, 767, 771], "iterate_materials_in_amat": 589, "json": [763, 765], "kernel": [749, 750], "latest": 769, "launch": [744, 745, 746, 747, 751, 754, 755, 759], "layer": [2, 235, 282, 320, 368, 562, 699, 744, 745, 753, 788, 791, 792, 793], "layer_nam": [236, 369], "layer_range_nam": 237, "layer_typ": 698, "layeredbclass": 116, "layers_by_id": 700, "layout": [744, 745, 749, 750, 753, 754, 759, 761, 763, 765, 781, 782, 783, 791, 793, 794, 795], "layout_defeatur": 539, "layout_inst": 32, "layoutvalid": 574, "legaci": 772, "length": [341, 742, 767], "limit": 701, "line": [742, 767], "linear": 744, "linux": 769, "load": [702, 763, 765, 770, 781, 794, 795], "load_amat": 590, "load_materi": 591, "locat": [33, 283, 321], "lock_fil": 727, "log": [742, 767], "longest_arc": 370, "loss": 748, "lower_elev": [34, 238], "magnitud": [284, 322], "manag": [1, 7, 770], "materi": [205, 580, 593], "material_property_to_id": 592, "matplotlib": [757, 781], "max_arc_point": 409, "max_mag_delta_": 410, "max_num_pass": 411, "max_suf_dev": 412, "maximum": [742, 767], "memori": 770, "merge_nets_polygon": 612, "merge_via_along_lin": 641, "mesh_freq": 413, "mesh_sizefactor": 414, "metal_volum": 239, "mid_point": 342, "min_num_pass": 415, "min_pad_area_to_mesh": 416, "min_plane_area_to_mesh": 417, "min_void_area": 418, "minimum_void_surfac": 419, "mode": [703, 744, 745, 746, 759], "model": [6, 35, 749, 765], "model_typ": 36, "modifi": 763, "modul": 1, "name": [37, 112, 122, 136, 148, 159, 173, 206, 240, 285, 323, 371, 509], "negative_net": 137, "net": [3, 38, 40, 149, 160, 241, 286, 324, 372, 614, 745, 748, 751, 753, 754, 756, 757, 781], "net_nam": [242, 287, 325, 373], "netlist": 613, "netlist_model": 39, "nets_by_compon": 615, "network": 751, "non": [744, 745, 746, 759], "non_stackup_lay": 704, "nport_comp_definit": 102, "num_lay": 705, "numpin": 41, "object": [750, 753], "object_inst": 243, "offlin": 769, "offset_i": 182, "offset_x": 181, "open": [744, 747, 750, 756, 759, 760], "open_edb_after_build": 391, "open_project": 728, "oproject": 729, "origin": 763, "other": 66, "output_aedb": 458, "outsid": [744, 745], "packag": 763, "package_def": 42, "pad_typ": 642, "padstack": [4, 758, 759, 796, 797, 798], "padstack_definit": 244, "padstack_inst": [174, 207], "paramet": [183, 745, 749, 758, 759, 765], "parameter": [748, 750, 761], "parameters_valu": 184, "parameters_values_str": 185, "parametr": [746, 753, 755, 758, 759], "parametrize_polygon": 563, "parametrize_posit": 245, "parametrize_trace_width": 564, "part_nam": 43, "partnam": 44, "passivity_toler": 420, "patch": 744, "path": 565, "pcb": [748, 749], "pec_launch_width": 326, "percentage_error_z0": 421, "perform": [744, 745, 747, 751, 756, 757, 759], "phase": [288, 327], "pin": [46, 246, 644, 744, 747, 749, 754, 777, 778, 779, 781, 788], "pin_group": 678, "pin_numb": 247, "pingroup": [248, 643], "pinlist": 45, "pip": 771, "place": [645, 748, 759], "place_a3dcomp_3d_plac": 706, "place_in_layout": 707, "place_in_layout_3d_plac": 708, "place_inst": 709, "place_voltage_prob": 679, "placement_lay": [47, 249], "plane": [753, 759], "plot": [175, 616, 710, 744, 745, 747, 753, 755, 757, 759, 760, 765, 781], "point": 343, "points_raw": 344, "polygon": 566, "polygon_data": 186, "polygons_by_lay": 567, "port": [5, 744, 751, 756, 759, 765, 784, 785, 787, 788], "posit": [250, 753, 754], "positive_net": 138, "post": [742, 761, 767], "power": [617, 754, 765], "power_net": 459, "prepar": [750, 765], "primit": [6, 176, 568], "primitives_by_lay": 569, "primitives_by_net": 570, "prior": 744, "probe": [540, 680], "process_padstack_definit": 422, "project": [747, 748, 750, 774, 776], "project_fil": 730, "project_nam": 731, "project_path": 732, "properti": [3, 6], "provid": 760, "pyaedt_dir": 733, "pyedb": [10, 742, 750, 757, 766, 767, 769, 770, 771, 773], "pypi": 769, "python": [749, 750, 769, 770, 771], "queri": 783, "quick": 770, "quit_appl": 734, "radiat": 745, "radiation_box": 423, "radiu": 345, "read_materi": 594, "read_syslib_materi": 595, "rectangl": 571, "ref_termin": [289, 328], "refd": 48, "refer": 741, "reference_net_nam": [290, 329], "reference_object": [291, 330], "refresh_compon": 103, "refresh_layer_collect": 711, "relative_error": 424, "releas": [749, 750, 759], "remov": 754, "remove_lay": 712, "remove_pads_from_padstack": 646, "renam": 756, "renorm": 292, "renormalize_z0": 293, "replace_rlc_by_gap_boundari": 104, "report": 744, "repositori": [742, 767], "requir": [744, 745, 747, 751, 756, 757, 759, 763, 769], "res_valu": 49, "residual_copper_area_per_lay": 713, "resistor": [105, 777], "result": [744, 745, 747, 754], "results_directori": 735, "return": 748, "return_current_distribut": 425, "review": 763, "rlc": [150, 778, 779], "rlc_valu": 50, "rotat": [51, 187, 251], "run": [748, 771, 783], "run_dc_simul": 736, "run_icepak_simul": 737, "s_param_model": 52, "save": [744, 747, 748, 753, 756, 759, 765], "save_project": 738, "see": 748, "serial_rlc": 151, "set": [744, 745, 746, 748, 754, 759, 760, 765, 799, 801, 802], "set_all_antipad_valu": 647, "set_backdrill_bottom": 252, "set_backdrill_top": 253, "set_coax_port_attribut": 541, "set_component_model": 106, "set_component_rlc": 107, "set_layer_clon": 714, "set_pad_properti": 648, "set_solder_bal": 108, "set_solderbal": 649, "setup": [744, 746, 747, 749, 759, 765], "setup_nam": 392, "shape": 188, "shape_to_polygon_data": 572, "short_component_pin": 109, "shortest_arc": 374, "shunt_rlc": 152, "shut": 765, "signal": [618, 748, 753, 756, 774], "signal_lay": 715, "signal_layer_etching_inst": 460, "signal_layers_properti": 461, "signal_net": 462, "simul": [8, 746, 747, 748, 750, 760, 776, 801, 802], "simulationconfigur": 379, "simulationconfigurationac": 394, "simulationconfigurationbatch": 438, "simulationconfigurationdc": 474, "siwav": [7, 719, 751, 754, 765, 799], "size": 782, "snap_length_threshold": 426, "solder_ball_diamet": 53, "solder_ball_height": 54, "solder_ball_plac": 55, "solder_ball_shap": 56, "solv": [744, 754, 759], "solver_typ": 393, "sourc": [9, 463, 542, 681, 786, 789], "spice_model": 57, "split_to_microvia": 208, "src_dir": 739, "stackup": [2, 683, 744, 748, 753, 758, 759, 760, 763, 791, 792, 793], "stackup_lay": 716, "standalon": 762, "start": [346, 768], "start_azimuth": 427, "start_freq": 428, "start_lay": 254, "statist": 781, "step_freq": 429, "stitch": 759, "stop_freq": 430, "stop_lay": 255, "style": [742, 767], "subtract": 375, "support": 769, "sweep": 744, "sweep_interpol": 431, "sweep_nam": 432, "sweep_typ": 433, "symmetr": 759, "syslib": 596, "syz": 765, "tabl": 773, "temporari": [745, 748, 749, 753, 755, 757], "termin": 256, "terminal_typ": [294, 331], "them": 781, "thick": 717, "tofloat": 113, "top_bottom_associ": [58, 257], "tostr": 114, "trace": [746, 749, 755, 759], "transpar": 123, "tree": 754, "trim_component_reference_s": 543, "trim_reference_s": 464, "troubleshoot": 771, "truncate_airbox_at_ground": 465, "type": [59, 124, 258, 295, 332, 376], "u1": 756, "unit": 377, "unite_polygons_on_lay": 573, "unus": 754, "up": [745, 748, 749, 753, 754, 755, 760, 765, 799, 801, 802], "updat": [125, 769], "update_layout": 718, "update_materi": 597, "update_rlc_from_bom": 110, "upper_elev": [60, 259], "us": [757, 764, 766, 771], "use_airbox_horizontal_extent_multipl": 466, "use_airbox_negative_vertical_extent_multipl": 467, "use_airbox_positive_vertical_extent_multipl": 468, "use_arc_to_chord_error": 434, "use_default_coax_port_radial_extens": 469, "use_default_cutout": 470, "use_dielectric_extent_multipl": 471, "use_error_z0": 435, "use_pyaedt_cutout": 472, "use_q3d_for_dc": 436, "use_radiation_boundari": 473, "use_s_parameter_model": 61, "user": 790, "valu": [62, 115, 510, 742, 767], "value_object": 511, "value_str": 512, "variabl": [505, 770, 803], "verifi": 747, "version": [769, 772], "version_kei": 740, "vertical_extent_factor": 333, "via": [4, 650, 748, 753, 758, 759], "via_lay": 209, "via_start_lay": 210, "via_stop_lay": 211, "view": [742, 747, 749, 754, 767], "visual": 748, "void": 378, "voltag": 786, "voltage_regulator_modul": 682, "wave": 759, "waveport": 296, "what": 766, "wheelhous": 769, "why": 766, "width": 755, "work": [780, 792, 797], "write": 760, "xml": 760, "xtalk_threshold": 437}})