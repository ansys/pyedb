Search.setIndex({"alltitles": {"3D component in HFSS": [[750, "3D-component-in-HFSS"]], "AEDT integration": [[757, "aedt-integration"]], "API reference": [[746, "api-reference"]], "About PyEDB": [[774, "about-pyedb"]], "Add HFSS simulation setup": [[751, "Add-HFSS-simulation-setup"]], "Add a circuit port between two coordinates": [[769, "Add-a-circuit-port-between-two-coordinates"]], "Add a circuit port between two nets": [[769, "Add-a-circuit-port-between-two-nets"]], "Add a circuit port between two pin groups": [[769, "Add-a-circuit-port-between-two-pin-groups"]], "Add a circuit port between two pins": [[769, "Add-a-circuit-port-between-two-pins"]], "Add a coax port": [[769, "Add-a-coax-port"]], "Add a layer in a layout stackup": [[799, "add-a-layer-in-a-layout-stackup"]], "Add a new material": [[768, "Add-a-new-material"]], "Add a port reference to the neareast pin": [[769, "Add-a-port-reference-to-the-neareast-pin"]], "Add connector ground": [[749, "Add-connector-ground"]], "Add connector pin": [[749, "Add-connector-pin"]], "Add design parameters": [[754, "Add-design-parameters"]], "Add distributed ports": [[769, "Add-distributed-ports"]], "Add excitation port": [[749, "Add-excitation-port"]], "Add ground": [[749, "Add-ground"]], "Add setups in configuration": [[769, "Add-setups-in-configuration"], [770, "Add-setups-in-configuration"]], "Add stackup layers": [[749, "Add-stackup-layers"], [758, "Add-stackup-layers"]], "Adhere to code style": [[747, "adhere-to-code-style"], [775, "adhere-to-code-style"]], "Analyze": [[752, "Analyze"], [773, "Analyze"]], "Assign S-parameter model to capactitors.": [[773, "Assign-S-parameter-model-to-capactitors."]], "Build a signal integrity project": [[782, "build-a-signal-integrity-project"]], "Build simulation projects": [[784, "build-simulation-projects"]], "Check component definition": [[752, "Check-component-definition"]], "Check modified material properties": [[768, "Check-modified-material-properties"]], "Clean up temporary directory": [[758, "Clean-up-temporary-directory"]], "Clean up the temporary directory": [[750, "Clean-up-the-temporary-directory"], [754, "Clean-up-the-temporary-directory"], [760, "Clean-up-the-temporary-directory"]], "Clean up the temporary folder.": [[753, "Clean-up-the-temporary-folder."]], "Cleanup": [[771, "Cleanup"]], "Clip a design": [[783, "clip-a-design"]], "Clone the repository": [[747, "clone-the-repository"], [775, "clone-the-repository"]], "Close AEDT": [[749, "Close-AEDT"], [750, "Close-AEDT"]], "Close EDB": [[760, "Close-EDB"], [765, "Close-EDB"], [768, "Close-EDB"], [769, "Close-EDB"], [770, "Close-EDB"]], "Components": [[0, "components"], [64, "components"]], "Configure EDB": [[756, "Configure-EDB"]], "Configure the simulation setup": [[752, "Configure-the-simulation-setup"]], "Connect to EDB from a Python IDE": [[778, "connect-to-edb-from-a-python-ide"]], "Contribute": [[747, "contribute"], [775, "contribute"]], "Control file": [[765, "Control-file"]], "Create Stackup": [[753, "Create-Stackup"]], "Create a HFSS setup": [[770, "Create-a-HFSS-setup"]], "Create a circuit port": [[792, "create-a-circuit-port"]], "Create a coaxial port": [[793, "create-a-coaxial-port"]], "Create a cutout and plot it.": [[760, "Create-a-cutout-and-plot-it."]], "Create a ground via padstack and place ground stitching vias": [[764, "Create-a-ground-via-padstack-and-place-ground-stitching-vias"]], "Create a padstack instance": [[804, "create-a-padstack-instance"]], "Create a parameterized PCB": [[753, "Create-a-parameterized-PCB"]], "Create a resistor boundary on pins": [[785, "create-a-resistor-boundary-on-pins"]], "Create a trace to plane clearance": [[764, "Create-a-trace-to-plane-clearance"]], "Create an RLC boundary on pins": [[786, "create-an-rlc-boundary-on-pins"]], "Create an RLC component between pins": [[787, "create-an-rlc-component-between-pins"]], "Create an SIwave SYZ setup": [[770, "Create-an-SIwave-SYZ-setup"]], "Create an edge port": [[795, "create-an-edge-port"]], "Create an empty dictionary to host all configurations": [[769, "Create-an-empty-dictionary-to-host-all-configurations"], [773, "Create-an-empty-dictionary-to-host-all-configurations"]], "Create an empty dictionary to host all configurations.": [[770, "Create-an-empty-dictionary-to-host-all-configurations."]], "Create an instance of a pyedb.Edb object.": [[755, "Create-an-instance-of-a-pyedb.Edb-object."]], "Create an instance of the Electronics Database using the pyedb.Edb class.": [[762, "Create-an-instance-of-the-Electronics-Database-using-the-pyedb.Edb-class."]], "Create current and voltage sources": [[794, "create-current-and-voltage-sources"]], "Create cutout": [[766, "Create-cutout"]], "Create data classes": [[750, "Create-data-classes"]], "Create linear array": [[749, "Create-linear-array"]], "Create port between a pin and layer": [[796, "create-port-between-a-pin-and-layer"]], "Create ports": [[756, "Create-ports"]], "Create s symmetric stackup": [[764, "Create-s-symmetric-stackup"]], "Create setup": [[764, "Create-setup"]], "Create setup and sweeps": [[749, "Create-setup-and-sweeps"]], "Create signal net": [[753, "Create-signal-net"]], "Create signal net and ground planes": [[758, "Create-signal-net-and-ground-planes"]], "Create sources": [[797, "create-sources"]], "Create stackup": [[763, "Create-stackup"]], "Create the EDB": [[763, "Create-the-EDB"]], "Create the connector component": [[754, "Create-the-connector-component"]], "Create vias with parametric positions": [[758, "Create-vias-with-parametric-positions"]], "Create wave ports": [[764, "Create-wave-ports"]], "Creating coaxial port on component U1 and all ddr4_dqs nets": [[761, "Creating-coaxial-port-on-component-U1-and-all-ddr4_dqs-nets"]], "Cutout": [[756, "Cutout"]], "Define Cutout": [[773, "Define-Cutout"]], "Define SIwave SYZ analysis setup": [[773, "Define-SIwave-SYZ-analysis-setup"]], "Define an HFSS extent": [[808, "define-an-hfss-extent"]], "Define boundary settings": [[765, "Define-boundary-settings"]], "Define design variables": [[811, "define-design-variables"]], "Define padstacks": [[763, "Define-padstacks"]], "Define parameters": [[763, "Define-parameters"], [764, "Define-parameters"]], "Define pins": [[754, "Define-pins"]], "Define ports": [[773, "Define-ports"]], "Display the cutout": [[752, "Display-the-cutout"]], "Download ANSYS EDB": [[761, "Download-ANSYS-EDB"]], "Download file": [[756, "Download-file"]], "Download the AEDB file and copy it in the temporary folder.": [[760, "Download-the-AEDB-file-and-copy-it-in-the-temporary-folder."]], "Download the EDB and copy it into the temporary folder.": [[762, "Download-the-EDB-and-copy-it-into-the-temporary-folder."]], "Draw a trace": [[764, "Draw-a-trace"]], "Draw parametrized traces": [[751, "Draw-parametrized-traces"]], "Draw planes": [[764, "Draw-planes"]], "EDB manager": [[1, "edb-manager"]], "EDB modules": [[1, "edb-modules"]], "EDB: 5G linear array antenna": [[749, "EDB:-5G-linear-array-antenna"]], "EDB: Edit Control File and import gds": [[765, "EDB:-Edit-Control-File-and-import-gds"]], "EDB: IPC2581 export": [[760, "EDB:-IPC2581-export"]], "EDB: Layout Components": [[750, "EDB:-Layout-Components"]], "EDB: Layout Creation and Setup": [[754, "EDB:-Layout-Creation-and-Setup"]], "EDB: Network Analysis in SIwave": [[756, "EDB:-Network-Analysis-in-SIwave"]], "EDB: Pin to Pin project": [[752, "EDB:-Pin-to-Pin-project"]], "EDB: Rename nets and ports": [[761, "EDB:-Rename-nets-and-ports"]], "EDB: SIwave DC-IR Analysis": [[759, "EDB:-SIwave-DC-IR-Analysis"]], "EDB: fully parametrized CPWG design": [[764, "EDB:-fully-parametrized-CPWG-design"]], "EDB: fully parametrized design": [[751, "EDB:-fully-parametrized-design"]], "EDB: geometry creation": [[753, "EDB:-geometry-creation"], [758, "EDB:-geometry-creation"]], "EDB: parameterized design": [[755, "EDB:-parameterized-design"]], "EDB: parametric via creation": [[763, "EDB:-parametric-via-creation"]], "EDB: plot nets with Matplotlib": [[762, "EDB:-plot-nets-with-Matplotlib"]], "EDB: post-layout parameterization": [[766, "EDB:-post-layout-parameterization"]], "EDBArcs": [[336, "edbarcs"]], "EDBComponent": [[11, "edbcomponent"]], "EDBDifferentialPairData": [[127, "edbdifferentialpairdata"]], "EDBExtendedNetData": [[140, "edbextendednetdata"]], "EDBNetClassData": [[154, "edbnetclassdata"]], "EDBNetsData": [[162, "edbnetsdata"]], "EDBPadProperties": [[178, "edbpadproperties"]], "EDBPadstack": [[190, "edbpadstack"]], "EDBPadstackInstance": [[213, "edbpadstackinstance"]], "EDBPrimitives": [[349, "edbprimitives"]], "EdbHfss": [[516, "edbhfss"]], "EdbNets": [[603, "edbnets"]], "EdbPadstacks": [[624, "edbpadstacks"]], "EdbSiwave": [[656, "edbsiwave"]], "EdbValue": [[112, "edbvalue"]], "Edit a layer stackup in a layout stackup": [[801, "edit-a-layer-stackup-in-a-layout-stackup"]], "Edit a padstack definition": [[806, "edit-a-padstack-definition"]], "Edit airbox extents": [[764, "Edit-airbox-extents"]], "Edit existing material properties": [[768, "Edit-existing-material-properties"]], "Error installing PyEDB using pip": [[779, "error-installing-pyedb-using-pip"]], "Error installing Python or Conda": [[779, "error-installing-python-or-conda"]], "Examples": [[748, "examples"]], "Explicit PyEDB declaration and error management": [[778, "explicit-pyedb-declaration-and-error-management"]], "Export results": [[759, "Export-results"]], "Export the EDB to an IPC2581 file.": [[760, "Export-the-EDB-to-an-IPC2581-file."]], "Expose the component parameters": [[750, "Expose-the-component-parameters"]], "Fetch Example Data": [[765, "Fetch-Example-Data"]], "GapPort": [[262, "gapport"]], "Generate extended nets": [[756, "Generate-extended-nets"]], "Generate geometry plot": [[758, "Generate-geometry-plot"]], "Generate stackup plot": [[758, "Generate-stackup-plot"]], "Get all components and then pins from components connected to a net": [[789, "get-all-components-and-then-pins-from-components-connected-to-a-net"]], "Get layout size": [[790, "get-layout-size"]], "Get layout statistics": [[789, "get-layout-statistics"]], "Get nets and plot them in Matplotlib": [[789, "get-nets-and-plot-them-in-matplotlib"]], "Get statistics": [[789, "get-statistics"]], "Getting started": [[776, "getting-started"]], "Hard-coded values": [[747, "hard-coded-values"], [775, "hard-coded-values"]], "ICs": [[65, "ics"]], "IOs": [[66, "ios"]], "Identify connected nets": [[759, "Identify-connected-nets"]], "Identify nets and components": [[759, "Identify-nets-and-components"]], "Identify pin positions": [[759, "Identify-pin-positions"]], "Implement the setup": [[752, "Implement-the-setup"]], "Import BOM": [[752, "Import-BOM"]], "Import EDB layout object": [[758, "Import-EDB-layout-object"]], "Import Materials": [[768, "Import-Materials"]], "Import Ports": [[769, "Import-Ports"]], "Import Setup AC": [[770, "Import-Setup-AC"]], "Import Stackup": [[771, "Import-Stackup"]], "Import configuration into example layout": [[769, "Import-configuration-into-example-layout"], [770, "Import-configuration-into-example-layout"], [773, "Import-configuration-into-example-layout"]], "Import definitions": [[752, "Import-definitions"]], "Import dependencies.": [[755, "Import-dependencies."]], "Import the EDB as a 3D component": [[750, "Import-the-EDB-as-a-3D-component"]], "Import the required packages": [[768, "Import-the-required-packages"], [769, "Import-the-required-packages"], [770, "Import-the-required-packages"], [771, "Import-the-required-packages"], [773, "Import-the-required-packages"]], "Indices and tables": [[781, "indices-and-tables"]], "Install from a Python file": [[777, "install-from-a-python-file"]], "Install offline from a wheelhouse": [[777, "install-offline-from-a-wheelhouse"]], "Install on CPython from PyPI": [[777, "install-on-cpython-from-pypi"]], "Installation": [[777, "installation"]], "Installation troubleshooting": [[779, "installation-troubleshooting"]], "Instances and definitions": [[0, "instances-and-definitions"], [4, "instances-and-definitions"]], "Issues and discussions": [[779, "issues-and-discussions"]], "Launch Ansys Electronics Database (EDB)": [[759, "Launch-Ansys-Electronics-Database-(EDB)"]], "Launch EDB": [[750, "Launch-EDB"], [752, "Launch-EDB"], [760, "Launch-EDB"], [764, "Launch-EDB"]], "Launch EDB.": [[751, "Launch-EDB."]], "Launch HFSS 3D Layout and open EDB": [[749, "Launch-HFSS-3D-Layout-and-open-EDB"]], "Launch Hfss3dLayout": [[756, "Launch-Hfss3dLayout"]], "LayerEdbClass": [[117, "layeredbclass"]], "LayoutValidation": [[547, "layoutvalidation"]], "Legacy interface": [[780, "legacy-interface"]], "Linux support": [[777, "linux-support"]], "Load a layout": [[789, "load-a-layout"], [803, "load-a-layout"]], "Load a layout file": [[802, "load-a-layout-file"]], "Load an AEDB file into memory": [[778, "load-an-aedb-file-into-memory"]], "Load edb into HFSS 3D Layout.": [[773, "Load-edb-into-HFSS-3D-Layout."]], "Load example layout": [[769, "Load-example-layout"], [773, "Load-example-layout"]], "Load example layout.": [[768, "Load-example-layout."], [770, "Load-example-layout."], [771, "Load-example-layout."]], "Load materials from json configuration file": [[768, "Load-materials-from-json-configuration-file"]], "Load stackup from json configuration file": [[771, "Load-stackup-from-json-configuration-file"]], "Log errors": [[747, "log-errors"], [775, "log-errors"]], "Materials": [[553, "materials"]], "Maximum line length": [[747, "maximum-line-length"], [775, "maximum-line-length"]], "Modeler": [[571, "modeler"]], "Modeler & primitives": [[6, "modeler-primitives"]], "Modify stackup": [[771, "Modify-stackup"]], "Net properties": [[3, "net-properties"]], "Nets": [[3, "nets"]], "Open EDB": [[765, "Open-EDB"]], "Open EDB in AEDT": [[764, "Open-EDB-in-AEDT"]], "Open Electronics Desktop": [[752, "Open-Electronics-Desktop"]], "Open project in AEDT": [[755, "Open-project-in-AEDT"]], "Others": [[67, "others"]], "Parameterize": [[755, "Parameterize"]], "Parametrize the width of a trace.": [[760, "Parametrize-the-width-of-a-trace."]], "Patch linear array": [[749, "Patch-linear-array"]], "Perform required imports": [[749, "Perform-required-imports"], [750, "Perform-required-imports"], [752, "Perform-required-imports"], [756, "Perform-required-imports"], [761, "Perform-required-imports"], [762, "Perform-required-imports"], [764, "Perform-required-imports"]], "Place signal vias": [[753, "Place-signal-vias"]], "Plot E Field on nets and layers": [[750, "Plot-E-Field-on-nets-and-layers"]], "Plot far fields in AEDT": [[750, "Plot-far-fields-in-AEDT"], [750, "id1"]], "Plot far fields outside AEDT": [[750, "Plot-far-fields-outside-AEDT"]], "Plot geometry": [[749, "Plot-geometry"], [749, "id1"]], "Plot impedance": [[773, "Plot-impedance"]], "Plot layout": [[764, "Plot-layout"]], "Plot results": [[752, "Plot-results"]], "Plot results outside AEDT": [[749, "Plot-results-outside-AEDT"], [750, "Plot-results-outside-AEDT"]], "Plot stackup": [[765, "Plot-stackup"]], "Ports": [[5, "ports"]], "Post issues": [[747, "post-issues"], [775, "post-issues"]], "Power Tree": [[759, "Power-Tree"]], "Prepare the layout for the simulation": [[755, "Prepare-the-layout-for-the-simulation"]], "Primitives properties": [[6, "primitives-properties"]], "Provide additional stackup settings": [[765, "Provide-additional-stackup-settings"]], "PyEDB documentation 0.20.0": [[781, "pyedb-documentation-version"]], "Quick code": [[778, "quick-code"]], "Radiation Boundary Assignment": [[750, "Radiation-Boundary-Assignment"]], "Release AEDT": [[764, "Release-AEDT"]], "Release the application from the Python kernel": [[754, "Release-the-application-from-the-Python-kernel"], [755, "Release-the-application-from-the-Python-kernel"]], "Remove unused components": [[759, "Remove-unused-components"]], "Renaming all ports": [[761, "Renaming-all-ports"]], "Renaming all signal nets": [[761, "Renaming-all-signal-nets"]], "Requirements": [[777, "requirements"]], "Review": [[769, "Review"], [770, "Review"]], "Review materials from layout": [[768, "Review-materials-from-layout"], [768, "id1"]], "Review modified materials": [[768, "Review-modified-materials"]], "Review original stackup definition": [[771, "Review-original-stackup-definition"]], "Run PyEDB with gRPC": [[779, "run-pyedb-with-grpc"]], "Run layout queries": [[791, "run-layout-queries"]], "Run simulation": [[753, "Run-simulation"]], "Save AEDT": [[764, "Save-AEDT"]], "Save EDB": [[769, "Save-EDB"], [770, "Save-EDB"]], "Save and close AEDT": [[752, "Save-and-close-AEDT"]], "Save and close EDB": [[752, "Save-and-close-EDB"], [758, "Save-and-close-EDB"], [764, "Save-and-close-EDB"]], "Save and close Edb instance prior to opening it in Electronics Desktop.": [[749, "Save-and-close-Edb-instance-prior-to-opening-it-in-Electronics-Desktop."]], "Save and close the project.": [[753, "Save-and-close-the-project."]], "Saving and closing EDB": [[761, "Saving-and-closing-EDB"]], "See the finished project": [[753, "See-the-finished-project"]], "Set non-graphical mode": [[749, "Set-non-graphical-mode"], [750, "Set-non-graphical-mode"], [751, "Set-non-graphical-mode"], [764, "Set-non-graphical-mode"]], "Set up EDB for Power Integrity Analysis": [[773, "Set-up-EDB-for-Power-Integrity-Analysis"]], "Set up HFSS simulation": [[753, "Set-up-HFSS-simulation"]], "Set up a SIwave analysis": [[807, "set-up-a-siwave-analysis"]], "Set up an HFSS simulation": [[809, "set-up-an-hfss-simulation"]], "Set up analysis": [[750, "Set-up-analysis"]], "Set up for SIwave DCIR analysis": [[759, "Set-up-for-SIwave-DCIR-analysis"]], "Set up simulation": [[765, "Set-up-simulation"]], "Set up simulations": [[810, "set-up-simulations"]], "Shut Down Electronics Desktop": [[773, "Shut-Down-Electronics-Desktop"]], "Simulation configuration": [[8, "simulation-configuration"]], "SimulationConfiguration": [[382, "simulationconfiguration"]], "SimulationConfigurationAc": [[397, "simulationconfigurationac"]], "SimulationConfigurationBatch": [[441, "simulationconfigurationbatch"]], "SimulationConfigurationDc": [[477, "simulationconfigurationdc"]], "Siwave": [[724, "siwave"]], "Siwave manager": [[7, "siwave-manager"]], "Solve": [[759, "Solve"]], "Solve setup and create report": [[749, "Solve-setup-and-create-report"]], "Solve the active design": [[764, "Solve-the-active-design"]], "Sources and excitations": [[9, "sources-and-excitations"]], "Stackup": [[688, "stackup"]], "Stackup & layers": [[2, "stackup-layers"]], "Standalone": [[767, "standalone"]], "Troubleshooting": [[779, "troubleshooting"]], "Update PyEDB to the latest version": [[777, "update-pyedb-to-the-latest-version"]], "Use configuration": [[772, "use-configuration"]], "User guide": [[798, "user-guide"]], "Variable": [[508, "variable"]], "Variables": [[778, "variables"]], "Verify a Component": [[752, "Verify-a-Component"]], "Versions and interfaces": [[780, "versions-and-interfaces"]], "View Layout in SIwave": [[759, "View-Layout-in-SIwave"]], "View PCB trace model": [[754, "View-PCB-trace-model"]], "View PyEDB documentation": [[747, "view-pyedb-documentation"], [775, "view-pyedb-documentation"]], "View results": [[752, "View-results"]], "Visualize the return loss.": [[753, "Visualize-the-return-loss."]], "WavePort": [[298, "waveport"]], "What is EDB?": [[774, "what-is-edb"]], "Why use PyEDB?": [[774, "why-use-pyedb"]], "Work with a layer stackup": [[800, "work-with-a-layer-stackup"]], "Work with a padstack": [[805, "work-with-a-padstack"]], "Working with a component": [[788, "working-with-a-component"]], "Write XML file": [[765, "Write-XML-file"]], "Write configuration into as json file": [[769, "Write-configuration-into-as-json-file"], [770, "Write-configuration-into-as-json-file"], [773, "Write-configuration-into-as-json-file"]], "Write material definition into a json file": [[768, "Write-material-definition-into-a-json-file"]], "ac_settings": [[383, "ac-settings"]], "adaptive_high_freq": [[398, "adaptive-high-freq"]], "adaptive_low_freq": [[399, "adaptive-low-freq"]], "adaptive_type": [[400, "adaptive-type"]], "add_conductor_material": [[554, "add-conductor-material"]], "add_current_source": [[384, "add-current-source"]], "add_dc_ground_source_term": [[385, "add-dc-ground-source-term"]], "add_debye_material": [[555, "add-debye-material"]], "add_dielectric_material": [[556, "add-dielectric-material"]], "add_djordjevicsarkar_dielectric": [[557, "add-djordjevicsarkar-dielectric"]], "add_document_layer": [[689, "add-document-layer"]], "add_frequency_sweep": [[442, "add-frequency-sweep"]], "add_layer": [[690, "add-layer"]], "add_layer_above": [[691, "add-layer-above"]], "add_layer_below": [[692, "add-layer-below"]], "add_layer_bottom": [[693, "add-layer-bottom"]], "add_layer_top": [[694, "add-layer-top"]], "add_material": [[558, "add-material"]], "add_multipole_debye_material": [[559, "add-multipole-debye-material"]], "add_net": [[128, "add-net"], [141, "add-net"], [155, "add-net"]], "add_outline_layer": [[695, "add-outline-layer"]], "add_port_on_rlc_component": [[68, "add-port-on-rlc-component"]], "add_rlc": [[386, "add-rlc"]], "add_rlc_boundary": [[69, "add-rlc-boundary"]], "add_siwave_dc_analysis": [[657, "add-siwave-dc-analysis"]], "add_siwave_syz_analysis": [[658, "add-siwave-syz-analysis"]], "add_source": [[443, "add-source"]], "add_void": [[572, "add-void"]], "add_voltage_source": [[387, "add-voltage-source"]], "adjust_solder_dielectrics": [[696, "adjust-solder-dielectrics"]], "aedt_name": [[214, "aedt-name"]], "airbox_horizontal_extent": [[444, "airbox-horizontal-extent"]], "airbox_negative_vertical_extent": [[445, "airbox-negative-vertical-extent"]], "airbox_positive_vertical_extent": [[446, "airbox-positive-vertical-extent"]], "all_layers": [[697, "all-layers"]], "api_class": [[129, "api-class"], [142, "api-class"], [163, "api-class"]], "api_create": [[130, "api-create"], [143, "api-create"], [156, "api-create"]], "api_negative_net": [[131, "api-negative-net"]], "api_nets": [[132, "api-nets"], [144, "api-nets"], [157, "api-nets"]], "api_object": [[164, "api-object"]], "api_positive_net": [[133, "api-positive-net"]], "arc_angle": [[401, "arc-angle"]], "arc_to_chord_error": [[402, "arc-to-chord-error"]], "arcs": [[350, "arcs"]], "area": [[351, "area"]], "assign_rlc_model": [[12, "assign-rlc-model"]], "assign_s_param_model": [[13, "assign-s-param-model"]], "assign_spice_model": [[14, "assign-spice-model"]], "backdrill_bottom": [[215, "backdrill-bottom"]], "backdrill_top": [[216, "backdrill-top"]], "basis_order": [[403, "basis-order"]], "batch_solve_settings": [[388, "batch-solve-settings"]], "bbox": [[352, "bbox"]], "boundary_type": [[263, "boundary-type"], [299, "boundary-type"]], "bounding_box": [[15, "bounding-box"], [217, "bounding-box"], [264, "bounding-box"], [300, "bounding-box"], [353, "bounding-box"]], "build_simulation_project": [[389, "build-simulation-project"]], "cap_value": [[16, "cap-value"]], "capacitors": [[70, "capacitors"]], "center": [[17, "center"], [337, "center"], [354, "center"]], "check_and_fix_via_plating": [[625, "check-and-fix-via-plating"]], "circles": [[573, "circles"]], "classify_nets": [[604, "classify-nets"]], "close_project": [[725, "close-project"]], "coax_solder_ball_diameter": [[447, "coax-solder-ball-diameter"]], "color": [[118, "color"]], "component": [[18, "component"], [218, "component"], [265, "component"], [301, "component"], [355, "component"]], "component_def": [[19, "component-def"]], "component_instance": [[20, "component-instance"]], "component_pin": [[219, "component-pin"]], "component_property": [[21, "component-property"]], "components": [[145, "components"], [165, "components"], [448, "components"]], "components_by_nets": [[605, "components-by-nets"]], "components_by_partname": [[71, "components-by-partname"]], "configure_hfss_analysis_setup": [[517, "configure-hfss-analysis-setup"]], "configure_hfss_extents": [[518, "configure-hfss-extents"]], "configure_siw_analysis_setup": [[659, "configure-siw-analysis-setup"]], "convert_to_3d_microvias": [[191, "convert-to-3d-microvias"]], "convert_to_polygon": [[356, "convert-to-polygon"]], "coplanar_instances": [[449, "coplanar-instances"]], "couple_ports": [[266, "couple-ports"], [302, "couple-ports"]], "create": [[72, "create"], [166, "create"], [626, "create"]], "create_bondwire": [[574, "create-bondwire"]], "create_bundle_wave_port": [[519, "create-bundle-wave-port"]], "create_circle": [[575, "create-circle"]], "create_circuit_port_on_net": [[520, "create-circuit-port-on-net"], [660, "create-circuit-port-on-net"]], "create_circuit_port_on_pin": [[521, "create-circuit-port-on-pin"], [661, "create-circuit-port-on-pin"]], "create_circuit_port_on_pin_group": [[662, "create-circuit-port-on-pin-group"]], "create_circular_padstack": [[627, "create-circular-padstack"]], "create_clearance_on_component": [[22, "create-clearance-on-component"]], "create_coax_port": [[220, "create-coax-port"], [628, "create-coax-port"]], "create_coax_port_on_component": [[522, "create-coax-port-on-component"]], "create_current_source_on_net": [[523, "create-current-source-on-net"], [663, "create-current-source-on-net"]], "create_current_source_on_pin": [[524, "create-current-source-on-pin"], [664, "create-current-source-on-pin"]], "create_current_source_on_pin_group": [[665, "create-current-source-on-pin-group"]], "create_dc_terminal": [[666, "create-dc-terminal"]], "create_differential_wave_port": [[525, "create-differential-wave-port"]], "create_edge_port_horizontal": [[526, "create-edge-port-horizontal"]], "create_edge_port_on_polygon": [[527, "create-edge-port-on-polygon"]], "create_edge_port_vertical": [[528, "create-edge-port-vertical"]], "create_exec_file": [[667, "create-exec-file"]], "create_hfss_ports_on_padstack": [[529, "create-hfss-ports-on-padstack"]], "create_impedance_crosstalk_scan": [[668, "create-impedance-crosstalk-scan"]], "create_lumped_port_on_net": [[530, "create-lumped-port-on-net"]], "create_package_def": [[23, "create-package-def"]], "create_pin_group": [[576, "create-pin-group"], [669, "create-pin-group"]], "create_pin_group_on_net": [[670, "create-pin-group-on-net"]], "create_pin_group_terminal": [[671, "create-pin-group-terminal"]], "create_pingroup_from_pins": [[73, "create-pingroup-from-pins"]], "create_polygon": [[577, "create-polygon"]], "create_port": [[221, "create-port"]], "create_port_between_pin_and_layer": [[672, "create-port-between-pin-and-layer"]], "create_port_on_component": [[74, "create-port-on-component"]], "create_port_on_pins": [[75, "create-port-on-pins"]], "create_rectangle": [[578, "create-rectangle"]], "create_rectangle_in_pad": [[222, "create-rectangle-in-pad"]], "create_resistor_on_pin": [[531, "create-resistor-on-pin"], [673, "create-resistor-on-pin"]], "create_rlc_boundary_on_pins": [[532, "create-rlc-boundary-on-pins"]], "create_rlc_component": [[76, "create-rlc-component"], [674, "create-rlc-component"]], "create_source_on_component": [[77, "create-source-on-component"]], "create_symmetric_stackup": [[698, "create-symmetric-stackup"]], "create_terminal": [[223, "create-terminal"]], "create_trace": [[579, "create-trace"]], "create_vertical_circuit_port_on_clipped_traces": [[533, "create-vertical-circuit-port-on-clipped-traces"]], "create_voltage_probe_on_pin_group": [[675, "create-voltage-probe-on-pin-group"]], "create_voltage_source_on_net": [[534, "create-voltage-source-on-net"], [676, "create-voltage-source-on-net"]], "create_voltage_source_on_pin": [[535, "create-voltage-source-on-pin"], [677, "create-voltage-source-on-pin"]], "create_voltage_source_on_pin_group": [[678, "create-voltage-source-on-pin-group"]], "create_vrm_module": [[679, "create-vrm-module"]], "create_wave_port": [[536, "create-wave-port"]], "current_version": [[726, "current-version"]], "cutout_subdesign_expansion": [[450, "cutout-subdesign-expansion"]], "cutout_subdesign_round_corner": [[451, "cutout-subdesign-round-corner"]], "cutout_subdesign_type": [[452, "cutout-subdesign-type"]], "db": [[580, "db"], [606, "db"], [629, "db"]], "dc_compute_inductance": [[478, "dc-compute-inductance"]], "dc_contact_radius": [[479, "dc-contact-radius"]], "dc_error_energy": [[480, "dc-error-energy"]], "dc_export_thermal_data": [[481, "dc-export-thermal-data"]], "dc_full_report_path": [[482, "dc-full-report-path"]], "dc_icepak_temp_file": [[483, "dc-icepak-temp-file"]], "dc_import_thermal_data": [[484, "dc-import-thermal-data"]], "dc_max_init_mesh_edge_length": [[485, "dc-max-init-mesh-edge-length"]], "dc_max_num_pass": [[486, "dc-max-num-pass"]], "dc_mesh_bondwires": [[487, "dc-mesh-bondwires"]], "dc_mesh_vias": [[488, "dc-mesh-vias"]], "dc_min_num_pass": [[489, "dc-min-num-pass"]], "dc_min_plane_area_to_mesh": [[490, "dc-min-plane-area-to-mesh"]], "dc_min_void_area_to_mesh": [[491, "dc-min-void-area-to-mesh"]], "dc_num_bondwire_sides": [[492, "dc-num-bondwire-sides"]], "dc_num_via_sides": [[493, "dc-num-via-sides"]], "dc_per_pin_res_path": [[494, "dc-per-pin-res-path"]], "dc_per_pin_use_pin_format": [[495, "dc-per-pin-use-pin-format"]], "dc_percent_local_refinement": [[496, "dc-percent-local-refinement"]], "dc_perform_adaptive_refinement": [[497, "dc-perform-adaptive-refinement"]], "dc_plot_jv": [[498, "dc-plot-jv"]], "dc_refine_bondwires": [[499, "dc-refine-bondwires"]], "dc_refine_vias": [[500, "dc-refine-vias"]], "dc_report_config_file": [[501, "dc-report-config-file"]], "dc_report_show_Active_devices": [[502, "dc-report-show-active-devices"]], "dc_settings": [[390, "dc-settings"]], "dc_shorts": [[548, "dc-shorts"]], "dc_slide_position": [[503, "dc-slide-position"]], "dc_source_terms_to_ground": [[504, "dc-source-terms-to-ground"]], "dc_use_dc_custom_settings": [[505, "dc-use-dc-custom-settings"]], "dc_use_loop_res_for_per_pin": [[506, "dc-use-loop-res-for-per-pin"]], "dc_via_report_path": [[507, "dc-via-report-path"]], "dcir_equipotential_region": [[224, "dcir-equipotential-region"]], "deactivate_rlc_component": [[78, "deactivate-rlc-component"]], "decade_count": [[404, "decade-count"]], "deembed": [[267, "deembed"], [303, "deembed"]], "deembed_length": [[304, "deembed-length"]], "defeature_abs_length": [[405, "defeature-abs-length"]], "defeature_layout": [[406, "defeature-layout"]], "defeature_polygon": [[581, "defeature-polygon"]], "definitions": [[79, "definitions"], [630, "definitions"]], "delete": [[24, "delete"], [80, "delete"], [134, "delete"], [146, "delete"], [158, "delete"], [167, "delete"], [225, "delete"], [268, "delete"], [305, "delete"], [357, "delete"], [509, "delete"], [607, "delete"]], "delete_material": [[560, "delete-material"]], "delete_padstack_instances": [[631, "delete-padstack-instances"]], "delete_primitives": [[582, "delete-primitives"]], "delete_single_pin_rlc": [[81, "delete-single-pin-rlc"]], "description": [[510, "description"]], "dielectric_extent": [[453, "dielectric-extent"]], "dielectric_layers": [[699, "dielectric-layers"]], "disable_rlc_component": [[82, "disable-rlc-component"]], "disjoint_nets": [[549, "disjoint-nets"]], "do_cutout_subdesign": [[454, "do-cutout-subdesign"]], "do_lambda_refinement": [[407, "do-lambda-refinement"]], "do_pingroup": [[455, "do-pingroup"]], "do_renormalize": [[269, "do-renormalize"], [306, "do-renormalize"]], "duplicate": [[561, "duplicate"], [632, "duplicate"]], "eligible_power_nets": [[608, "eligible-power-nets"]], "enabled": [[25, "enabled"]], "end": [[338, "end"]], "enforce_causality": [[408, "enforce-causality"]], "enforce_passivity": [[409, "enforce-passivity"]], "etching_factor_instances": [[456, "etching-factor-instances"]], "excitations": [[537, "excitations"], [680, "excitations"]], "export": [[700, "export"]], "export_bom": [[83, "export-bom"]], "export_dc_simulation_report": [[727, "export-dc-simulation-report"]], "export_definition": [[84, "export-definition"]], "export_element_data": [[728, "export-element-data"]], "export_icepak_project": [[729, "export-icepak-project"]], "export_json": [[391, "export-json"]], "export_siwave_report": [[730, "export-siwave-report"]], "extended_net": [[168, "extended-net"]], "filename": [[392, "filename"]], "fill_material": [[119, "fill-material"]], "find_by_name": [[135, "find-by-name"], [147, "find-by-name"], [169, "find-by-name"]], "find_by_reference_designator": [[85, "find-by-reference-designator"]], "find_dc_short": [[170, "find-dc-short"]], "find_instance_by_id": [[633, "find-instance-by-id"]], "find_or_create_net": [[609, "find-or-create-net"]], "fix_circle_void_for_clipping": [[583, "fix-circle-void-for-clipping"]], "fix_self_intersections": [[550, "fix-self-intersections"]], "flip_design": [[701, "flip-design"]], "gRPC compatibility:": [[779, "id1"]], "gRPC interface": [[780, "grpc-interface"]], "generate_excitations": [[457, "generate-excitations"]], "generate_extended_nets": [[610, "generate-extended-nets"]], "generate_solder_balls": [[458, "generate-solder-balls"]], "geometry_type": [[179, "geometry-type"]], "get_aedt_pin_name": [[86, "get-aedt-pin-name"]], "get_closest_arc_midpoint": [[358, "get-closest-arc-midpoint"]], "get_closest_point": [[359, "get-closest-point"]], "get_component_by_name": [[87, "get-component-by-name"]], "get_component_net_connection_info": [[88, "get-component-net-connection-info"]], "get_component_placement_vector": [[89, "get-component-placement-vector"]], "get_components_from_nets": [[90, "get-components-from-nets"]], "get_connected_object_id_set": [[226, "get-connected-object-id-set"], [360, "get-connected-object-id-set"]], "get_connected_objects": [[227, "get-connected-objects"], [361, "get-connected-objects"]], "get_dcconnected_net_list": [[611, "get-dcconnected-net-list"]], "get_edge_terminal_reference_primitive": [[270, "get-edge-terminal-reference-primitive"], [307, "get-edge-terminal-reference-primitive"]], "get_instances": [[634, "get-instances"]], "get_layout_bounding_box": [[538, "get-layout-bounding-box"]], "get_layout_statistics": [[584, "get-layout-statistics"]], "get_layout_thickness": [[702, "get-layout-thickness"]], "get_net_by_name": [[612, "get-net-by-name"]], "get_nets_from_pin_list": [[91, "get-nets-from-pin-list"]], "get_pad_edge_terminal_reference_pin": [[271, "get-pad-edge-terminal-reference-pin"], [308, "get-pad-edge-terminal-reference-pin"]], "get_pad_parameters": [[635, "get-pad-parameters"]], "get_padstack_instance_by_net_name": [[636, "get-padstack-instance-by-net-name"]], "get_padstack_instances_intersecting_bounding_box": [[637, "get-padstack-instances-intersecting-bounding-box"]], "get_padstack_instances_rtree_index": [[638, "get-padstack-instances-rtree-index"]], "get_padstack_terminal_reference_pin": [[272, "get-padstack-terminal-reference-pin"], [309, "get-padstack-terminal-reference-pin"]], "get_pin_from_component": [[92, "get-pin-from-component"]], "get_pin_group_terminal_reference_pin": [[273, "get-pin-group-terminal-reference-pin"], [310, "get-pin-group-terminal-reference-pin"]], "get_pin_position": [[93, "get-pin-position"]], "get_pinlist_from_component_and_net": [[639, "get-pinlist-from-component-and-net"]], "get_pins": [[94, "get-pins"]], "get_pins_name_from_net": [[95, "get-pins-name-from-net"]], "get_plot_data": [[613, "get-plot-data"]], "get_point_terminal_reference_primitive": [[274, "get-point-terminal-reference-primitive"], [311, "get-point-terminal-reference-primitive"]], "get_polygon_bounding_box": [[585, "get-polygon-bounding-box"]], "get_polygon_points": [[586, "get-polygon-points"]], "get_polygons_by_layer": [[587, "get-polygons-by-layer"]], "get_ports_number": [[539, "get-ports-number"]], "get_powertree": [[614, "get-powertree"]], "get_primitive": [[588, "get-primitive"]], "get_primitive_by_layer_and_point": [[589, "get-primitive-by-layer-and-point"]], "get_primitives": [[590, "get-primitives"]], "get_rats": [[96, "get-rats"]], "get_reference_pins": [[228, "get-reference-pins"], [640, "get-reference-pins"]], "get_smallest_trace_width": [[171, "get-smallest-trace-width"]], "get_solder_ball_height": [[97, "get-solder-ball-height"]], "get_terminal": [[229, "get-terminal"]], "get_through_resistor_list": [[98, "get-through-resistor-list"]], "get_trace_width_for_traces_with_ports": [[540, "get-trace-width-for-traces-with-ports"]], "get_via_instance_from_net": [[641, "get-via-instance-from-net"]], "group_type": [[26, "group-type"]], "height": [[339, "height"]], "hfss_extent_info": [[541, "hfss-extent-info"]], "hfss_type": [[275, "hfss-type"], [312, "hfss-type"]], "hole_diameter": [[192, "hole-diameter"]], "hole_diameter_string": [[193, "hole-diameter-string"]], "hole_finished_size": [[194, "hole-finished-size"]], "hole_offset_x": [[195, "hole-offset-x"]], "hole_offset_y": [[196, "hole-offset-y"]], "hole_parameters": [[197, "hole-parameters"]], "hole_params": [[198, "hole-params"]], "hole_plating_ratio": [[199, "hole-plating-ratio"]], "hole_plating_thickness": [[200, "hole-plating-thickness"]], "hole_properties": [[201, "hole-properties"]], "hole_range": [[202, "hole-range"]], "hole_rotation": [[203, "hole-rotation"]], "hole_type": [[204, "hole-type"]], "honor_user_dielectric": [[459, "honor-user-dielectric"]], "horizontal_extent_factor": [[313, "horizontal-extent-factor"]], "icepak": [[731, "icepak"]], "icepak_component_file": [[681, "icepak-component-file"]], "icepak_use_minimal_comp_defaults": [[682, "icepak-use-minimal-comp-defaults"]], "id": [[27, "id"], [120, "id"], [230, "id"], [276, "id"], [314, "id"], [362, "id"]], "ignore_non_functional_pads": [[410, "ignore-non-functional-pads"]], "illegal_net_names": [[551, "illegal-net-names"]], "illegal_rlc_values": [[552, "illegal-rlc-values"]], "impedance": [[277, "impedance"], [315, "impedance"]], "import_bom": [[99, "import-bom"]], "import_definition": [[100, "import-definition"]], "import_json": [[393, "import-json"]], "in_polygon": [[231, "in-polygon"]], "in_voids": [[232, "in-voids"]], "include_inter_plane_coupling": [[411, "include-inter-plane-coupling"]], "include_only_selected_nets": [[460, "include-only-selected-nets"]], "ind_value": [[28, "ind-value"]], "inductors": [[101, "inductors"]], "instances": [[102, "instances"], [205, "instances"], [642, "instances"]], "instances_by_name": [[643, "instances-by-name"]], "int_to_geometry_type": [[180, "int-to-geometry-type"], [644, "int-to-geometry-type"]], "int_to_pad_type": [[181, "int-to-pad-type"], [645, "int-to-pad-type"]], "intersect": [[363, "intersect"]], "intersection_type": [[364, "intersection-type"]], "is_arc": [[365, "is-arc"]], "is_ccw": [[340, "is-ccw"]], "is_circuit_port": [[278, "is-circuit-port"], [316, "is-circuit-port"]], "is_current_source": [[279, "is-current-source"], [317, "is-current-source"]], "is_enabled": [[29, "is-enabled"]], "is_intersecting": [[366, "is-intersecting"]], "is_negative": [[367, "is-negative"]], "is_net_in_component": [[615, "is-net-in-component"]], "is_null": [[30, "is-null"], [136, "is-null"], [148, "is-null"], [159, "is-null"], [172, "is-null"], [233, "is-null"], [280, "is-null"], [318, "is-null"], [368, "is-null"]], "is_parallel_rlc": [[31, "is-parallel-rlc"]], "is_parameter": [[511, "is-parameter"]], "is_pin": [[234, "is-pin"]], "is_point": [[341, "is-point"]], "is_port": [[281, "is-port"], [319, "is-port"]], "is_power_gound_net": [[616, "is-power-gound-net"]], "is_power_ground": [[173, "is-power-ground"]], "is_reference_terminal": [[282, "is-reference-terminal"], [320, "is-reference-terminal"]], "is_segment": [[342, "is-segment"]], "is_stackup_layer": [[121, "is-stackup-layer"]], "is_top_mounted": [[32, "is-top-mounted"]], "is_via_layer": [[122, "is-via-layer"]], "is_void": [[235, "is-void"], [369, "is-void"]], "is_voltage_source": [[283, "is-voltage-source"], [321, "is-voltage-source"]], "iterate_materials_in_amat": [[562, "iterate-materials-in-amat"]], "layer": [[236, "layer"], [284, "layer"], [322, "layer"], [370, "layer"]], "layer_name": [[237, "layer-name"], [371, "layer-name"]], "layer_range_names": [[238, "layer-range-names"]], "layer_types": [[703, "layer-types"]], "layers": [[591, "layers"], [704, "layers"]], "layers_by_id": [[705, "layers-by-id"]], "layout_defeaturing": [[542, "layout-defeaturing"]], "layout_instance": [[33, "layout-instance"]], "length": [[343, "length"]], "limits": [[706, "limits"]], "load": [[707, "load"]], "load_amat": [[563, "load-amat"]], "load_material": [[564, "load-material"]], "location": [[34, "location"], [285, "location"], [323, "location"]], "lock_file": [[732, "lock-file"]], "longest_arc": [[372, "longest-arc"]], "lower_elevation": [[35, "lower-elevation"], [239, "lower-elevation"]], "magnitude": [[286, "magnitude"], [324, "magnitude"]], "material": [[206, "material"]], "material_property_to_id": [[565, "material-property-to-id"]], "materials": [[566, "materials"]], "max_arc_points": [[412, "max-arc-points"]], "max_mag_delta_s": [[413, "max-mag-delta-s"]], "max_num_passes": [[414, "max-num-passes"]], "max_suf_dev": [[415, "max-suf-dev"]], "merge_nets_polygons": [[617, "merge-nets-polygons"]], "merge_via_along_lines": [[646, "merge-via-along-lines"]], "mesh_freq": [[416, "mesh-freq"]], "mesh_sizefactor": [[417, "mesh-sizefactor"]], "metal_volume": [[240, "metal-volume"]], "mid_point": [[344, "mid-point"]], "min_num_passes": [[418, "min-num-passes"]], "min_pad_area_to_mesh": [[419, "min-pad-area-to-mesh"]], "min_plane_area_to_mesh": [[420, "min-plane-area-to-mesh"]], "min_void_area": [[421, "min-void-area"]], "minimum_void_surface": [[422, "minimum-void-surface"]], "mode": [[708, "mode"]], "model": [[36, "model"]], "model_type": [[37, "model-type"]], "name": [[38, "name"], [113, "name"], [123, "name"], [137, "name"], [149, "name"], [160, "name"], [174, "name"], [207, "name"], [241, "name"], [287, "name"], [325, "name"], [373, "name"], [512, "name"]], "negative_net": [[138, "negative-net"]], "net": [[39, "net"], [242, "net"], [288, "net"], [326, "net"], [374, "net"]], "net_name": [[243, "net-name"], [289, "net-name"], [327, "net-name"], [375, "net-name"]], "netlist": [[618, "netlist"]], "netlist_model": [[40, "netlist-model"]], "nets": [[41, "nets"], [150, "nets"], [161, "nets"], [619, "nets"]], "nets_by_components": [[620, "nets-by-components"]], "non_stackup_layers": [[709, "non-stackup-layers"]], "nport_comp_definition": [[103, "nport-comp-definition"]], "num_layers": [[710, "num-layers"]], "numpins": [[42, "numpins"]], "object_instance": [[244, "object-instance"]], "offset_x": [[182, "offset-x"]], "offset_y": [[183, "offset-y"]], "open_edb_after_build": [[394, "open-edb-after-build"]], "open_project": [[733, "open-project"]], "opening EDB": [[761, "opening-EDB"]], "oproject": [[734, "oproject"]], "output_aedb": [[461, "output-aedb"]], "package_def": [[43, "package-def"]], "pad_type": [[647, "pad-type"]], "padstack_definition": [[245, "padstack-definition"]], "padstack_instances": [[175, "padstack-instances"], [208, "padstack-instances"]], "parameters": [[184, "parameters"]], "parameters_values": [[185, "parameters-values"]], "parameters_values_string": [[186, "parameters-values-string"]], "parametrize_polygon": [[592, "parametrize-polygon"]], "parametrize_position": [[246, "parametrize-position"]], "parametrize_trace_width": [[593, "parametrize-trace-width"]], "part_name": [[44, "part-name"]], "partname": [[45, "partname"]], "passivity_tolerance": [[423, "passivity-tolerance"]], "paths": [[594, "paths"]], "pec_launch_width": [[328, "pec-launch-width"]], "percentage_error_z0": [[424, "percentage-error-z0"]], "phase": [[290, "phase"], [329, "phase"]], "pin": [[247, "pin"]], "pin_groups": [[683, "pin-groups"]], "pin_number": [[248, "pin-number"]], "pingroups": [[249, "pingroups"], [648, "pingroups"]], "pinlist": [[46, "pinlist"]], "pins": [[47, "pins"], [649, "pins"]], "place": [[650, "place"]], "place_a3dcomp_3d_placement": [[711, "place-a3dcomp-3d-placement"]], "place_in_layout": [[712, "place-in-layout"]], "place_in_layout_3d_placement": [[713, "place-in-layout-3d-placement"]], "place_instance": [[714, "place-instance"]], "place_voltage_probe": [[684, "place-voltage-probe"]], "placement_layer": [[48, "placement-layer"], [250, "placement-layer"]], "plot": [[176, "plot"], [621, "plot"], [715, "plot"]], "points": [[345, "points"]], "points_raw": [[346, "points-raw"]], "polygon_data": [[187, "polygon-data"]], "polygons": [[595, "polygons"]], "polygons_by_layer": [[596, "polygons-by-layer"]], "position": [[251, "position"]], "positive_net": [[139, "positive-net"]], "power": [[622, "power"]], "power_nets": [[462, "power-nets"]], "primitive_type": [[252, "primitive-type"], [376, "primitive-type"]], "primitives": [[177, "primitives"], [597, "primitives"]], "primitives_by_layer": [[598, "primitives-by-layer"]], "primitives_by_net": [[599, "primitives-by-net"]], "probes": [[543, "probes"], [685, "probes"]], "process_padstack_definitions": [[425, "process-padstack-definitions"]], "project_file": [[735, "project-file"]], "project_name": [[736, "project-name"]], "project_path": [[737, "project-path"]], "pyaedt_dir": [[738, "pyaedt-dir"]], "pyedb.dotnet.edb": [[10, "module-pyedb.dotnet.edb"]], "quit_application": [[739, "quit-application"]], "radiation_box": [[426, "radiation-box"]], "radius": [[347, "radius"]], "read_materials": [[567, "read-materials"]], "read_syslib_material": [[568, "read-syslib-material"]], "rectangles": [[600, "rectangles"]], "ref_terminal": [[291, "ref-terminal"], [330, "ref-terminal"]], "refdes": [[49, "refdes"]], "reference_net_name": [[292, "reference-net-name"], [331, "reference-net-name"]], "reference_object": [[293, "reference-object"], [332, "reference-object"]], "refresh_components": [[104, "refresh-components"]], "refresh_layer_collection": [[716, "refresh-layer-collection"]], "relative_error": [[427, "relative-error"]], "remove_layer": [[717, "remove-layer"]], "remove_pads_from_padstack": [[651, "remove-pads-from-padstack"]], "renormalize": [[294, "renormalize"]], "renormalize_z0": [[295, "renormalize-z0"]], "replace_rlc_by_gap_boundaries": [[105, "replace-rlc-by-gap-boundaries"]], "res_value": [[50, "res-value"]], "residual_copper_area_per_layer": [[718, "residual-copper-area-per-layer"]], "resistors": [[106, "resistors"]], "results_directory": [[740, "results-directory"]], "return_current_distribution": [[428, "return-current-distribution"]], "rlc": [[151, "rlc"]], "rlc_values": [[51, "rlc-values"]], "rotation": [[52, "rotation"], [188, "rotation"], [253, "rotation"]], "run_dc_simulation": [[741, "run-dc-simulation"]], "run_icepak_simulation": [[742, "run-icepak-simulation"]], "s_param_model": [[53, "s-param-model"]], "save_project": [[743, "save-project"]], "serial_rlc": [[152, "serial-rlc"]], "set_all_antipad_value": [[652, "set-all-antipad-value"]], "set_backdrill_bottom": [[254, "set-backdrill-bottom"]], "set_backdrill_top": [[255, "set-backdrill-top"]], "set_coax_port_attributes": [[544, "set-coax-port-attributes"]], "set_component_model": [[107, "set-component-model"]], "set_component_rlc": [[108, "set-component-rlc"]], "set_layer_clone": [[719, "set-layer-clone"]], "set_pad_property": [[653, "set-pad-property"]], "set_solder_ball": [[109, "set-solder-ball"]], "set_solderball": [[654, "set-solderball"]], "setup_name": [[395, "setup-name"]], "shape": [[189, "shape"]], "shape_to_polygon_data": [[601, "shape-to-polygon-data"]], "short_component_pins": [[110, "short-component-pins"]], "shortest_arc": [[377, "shortest-arc"]], "shunt_rlc": [[153, "shunt-rlc"]], "signal": [[623, "signal"]], "signal_layer_etching_instances": [[463, "signal-layer-etching-instances"]], "signal_layers": [[720, "signal-layers"]], "signal_layers_properties": [[464, "signal-layers-properties"]], "signal_nets": [[465, "signal-nets"]], "snap_length_threshold": [[429, "snap-length-threshold"]], "solder_ball_diameter": [[54, "solder-ball-diameter"]], "solder_ball_height": [[55, "solder-ball-height"]], "solder_ball_placement": [[56, "solder-ball-placement"]], "solder_ball_shape": [[57, "solder-ball-shape"]], "solver_type": [[396, "solver-type"]], "sources": [[466, "sources"], [545, "sources"], [686, "sources"]], "spice_model": [[58, "spice-model"]], "split_to_microvias": [[209, "split-to-microvias"]], "src_dir": [[744, "src-dir"]], "stackup_layers": [[721, "stackup-layers"]], "start": [[348, "start"]], "start_azimuth": [[430, "start-azimuth"]], "start_freq": [[431, "start-freq"]], "start_layer": [[256, "start-layer"]], "step_freq": [[432, "step-freq"]], "stop_freq": [[433, "stop-freq"]], "stop_layer": [[257, "stop-layer"]], "subtract": [[378, "subtract"]], "sweep_interpolating": [[434, "sweep-interpolating"]], "sweep_name": [[435, "sweep-name"]], "sweep_type": [[436, "sweep-type"]], "syslib": [[569, "syslib"]], "terminal": [[258, "terminal"]], "terminal_type": [[296, "terminal-type"], [333, "terminal-type"]], "thickness": [[722, "thickness"]], "tofloat": [[114, "tofloat"]], "top_bottom_association": [[59, "top-bottom-association"], [259, "top-bottom-association"]], "tostring": [[115, "tostring"]], "transparency": [[124, "transparency"]], "trim_component_reference_size": [[546, "trim-component-reference-size"]], "trim_reference_size": [[467, "trim-reference-size"]], "truncate_airbox_at_ground": [[468, "truncate-airbox-at-ground"]], "type": [[60, "type"], [125, "type"], [260, "type"], [297, "type"], [334, "type"], [379, "type"]], "unite": [[380, "unite"]], "unite_polygons_on_layer": [[602, "unite-polygons-on-layer"]], "update": [[126, "update"]], "update_layout": [[723, "update-layout"]], "update_material": [[570, "update-material"]], "update_rlc_from_bom": [[111, "update-rlc-from-bom"]], "upper_elevation": [[61, "upper-elevation"], [261, "upper-elevation"]], "use_airbox_horizontal_extent_multiple": [[469, "use-airbox-horizontal-extent-multiple"]], "use_airbox_negative_vertical_extent_multiple": [[470, "use-airbox-negative-vertical-extent-multiple"]], "use_airbox_positive_vertical_extent_multiple": [[471, "use-airbox-positive-vertical-extent-multiple"]], "use_arc_to_chord_error": [[437, "use-arc-to-chord-error"]], "use_default_coax_port_radial_extension": [[472, "use-default-coax-port-radial-extension"]], "use_default_cutout": [[473, "use-default-cutout"]], "use_dielectric_extent_multiple": [[474, "use-dielectric-extent-multiple"]], "use_error_z0": [[438, "use-error-z0"]], "use_pyaedt_cutout": [[475, "use-pyaedt-cutout"]], "use_q3d_for_dc": [[439, "use-q3d-for-dc"]], "use_radiation_boundary": [[476, "use-radiation-boundary"]], "use_s_parameter_model": [[62, "use-s-parameter-model"]], "value": [[63, "value"], [116, "value"], [513, "value"]], "value_object": [[514, "value-object"]], "value_string": [[515, "value-string"]], "version_keys": [[745, "version-keys"]], "vertical_extent_factor": [[335, "vertical-extent-factor"]], "via_layers": [[210, "via-layers"]], "via_start_layer": [[211, "via-start-layer"]], "via_stop_layer": [[212, "via-stop-layer"]], "vias": [[655, "vias"]], "vias and padstacks": [[4, "vias-and-padstacks"]], "voids": [[381, "voids"]], "voltage_regulator_modules": [[687, "voltage-regulator-modules"]], "xtalk_threshold": [[440, "xtalk-threshold"]]}, "docnames": ["api/ComponentsEdb", "api/CoreEdb", "api/LayerData", "api/NetsEdb", "api/PadstackEdb", "api/PortsEdb", "api/PrimitivesEdb", "api/SiWave", "api/SimulationConfigurationEdb", "api/SourcesEdb", "api/_autosummary/pyedb.dotnet.edb", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.group_type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", "api/_autosummary/pyedb.dotnet.edb_core.components.Components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.primitive_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.primitive_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.add_void", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.circles", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_bondwire", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_circle", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_polygon", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_rectangle", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_trace", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.db", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.defeature_polygon", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.delete_primitives", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.fix_circle_void_for_clipping", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_layout_statistics", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_points", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitive", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitive_by_layer_and_point", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitives", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.layers", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.parametrize_polygon", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.parametrize_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.paths", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.polygons", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_net", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.rectangles", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.shape_to_polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.unite_polygons_on_layer", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout", "api/_autosummary/pyedb.siwave.Siwave", "api/_autosummary/pyedb.siwave.Siwave.close_project", "api/_autosummary/pyedb.siwave.Siwave.current_version", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report", "api/_autosummary/pyedb.siwave.Siwave.export_element_data", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report", "api/_autosummary/pyedb.siwave.Siwave.icepak", "api/_autosummary/pyedb.siwave.Siwave.lock_file", "api/_autosummary/pyedb.siwave.Siwave.open_project", "api/_autosummary/pyedb.siwave.Siwave.oproject", "api/_autosummary/pyedb.siwave.Siwave.project_file", "api/_autosummary/pyedb.siwave.Siwave.project_name", "api/_autosummary/pyedb.siwave.Siwave.project_path", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir", "api/_autosummary/pyedb.siwave.Siwave.quit_application", "api/_autosummary/pyedb.siwave.Siwave.results_directory", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation", "api/_autosummary/pyedb.siwave.Siwave.save_project", "api/_autosummary/pyedb.siwave.Siwave.src_dir", "api/_autosummary/pyedb.siwave.Siwave.version_keys", "api/index", "contributing", "examples/index", "examples/legacy_pyaedt_integration/03_5G_antenna_example", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics", "examples/legacy_pyaedt_integration/04_edb_parametrized_design", "examples/legacy_pyaedt_integration/09_Configuration", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board", "examples/legacy_pyaedt_integration/13_edb_create_component", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design", "examples/legacy_pyaedt_integration/15_ac_analysis", "examples/legacy_pyaedt_integration/index", "examples/legacy_standalone/00_EDB_Create_VIA", "examples/legacy_standalone/01_edb_example", "examples/legacy_standalone/02_edb_to_ipc2581", "examples/legacy_standalone/03_rename_nets_and_ports", "examples/legacy_standalone/05_Plot_nets", "examples/legacy_standalone/06_Advanced_EDB", "examples/legacy_standalone/08_CPWG", "examples/legacy_standalone/10_GDS_workflow", "examples/legacy_standalone/11_post_layout_parameterization", "examples/legacy_standalone/index", "examples/use_configuration/import_material", "examples/use_configuration/import_ports", "examples/use_configuration/import_setup_ac", "examples/use_configuration/import_stackup", "examples/use_configuration/index", "examples/use_configuration/set_up_edb_for_signal_integrity_analysis", "getting_started/about", "getting_started/contributing", "getting_started/index", "getting_started/installation", "getting_started/quickcode", "getting_started/troubleshooting", "getting_started/versioning", "index", "user_guide/build_simulation_project/build_signal_integrity_project", "user_guide/build_simulation_project/cutout", "user_guide/build_simulation_project/index", "user_guide/components/create_resistor_on_pin", "user_guide/components/create_rlc_boundary_on_pins", "user_guide/components/create_rlc_component", "user_guide/components/index", "user_guide/edb_information_queries/edb_queries", "user_guide/edb_information_queries/get_layout_bounding_box", "user_guide/edb_information_queries/index", "user_guide/excitations/create_circuit_ports_on_component", "user_guide/excitations/create_coax_port_on_component", "user_guide/excitations/create_current_source", "user_guide/excitations/create_edge_port_on_polygon", "user_guide/excitations/create_port_between_pin_and_layer", "user_guide/excitations/index", "user_guide/index", "user_guide/layer_stackup/define_layer_stackup", "user_guide/layer_stackup/index", "user_guide/layer_stackup/layer_stackup", "user_guide/load_export_edb/index", "user_guide/load_export_edb/loading_layout", "user_guide/padstacks/create_padsatck_instance", "user_guide/padstacks/index", "user_guide/padstacks/set_all_antipads_value", "user_guide/simulation_setup/add_siwave_analysis", "user_guide/simulation_setup/define_hfss_extent", "user_guide/simulation_setup/define_hfss_simulation_setup", "user_guide/simulation_setup/index", "user_guide/use_design_variables"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api/ComponentsEdb.rst", "api/CoreEdb.rst", "api/LayerData.rst", "api/NetsEdb.rst", "api/PadstackEdb.rst", "api/PortsEdb.rst", "api/PrimitivesEdb.rst", "api/SiWave.rst", "api/SimulationConfigurationEdb.rst", "api/SourcesEdb.rst", "api/_autosummary/pyedb.dotnet.edb.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.group_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.primitive_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.primitive_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.add_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.circles.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_bondwire.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_circle.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_rectangle.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.create_trace.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.defeature_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.delete_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.fix_circle_void_for_clipping.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_layout_statistics.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitive_by_layer_and_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.get_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.parametrize_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.parametrize_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.paths.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.rectangles.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.shape_to_polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.modeler.Modeler.unite_polygons_on_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout.rst", "api/_autosummary/pyedb.siwave.Siwave.rst", "api/_autosummary/pyedb.siwave.Siwave.close_project.rst", "api/_autosummary/pyedb.siwave.Siwave.current_version.rst", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report.rst", "api/_autosummary/pyedb.siwave.Siwave.export_element_data.rst", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project.rst", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report.rst", "api/_autosummary/pyedb.siwave.Siwave.icepak.rst", "api/_autosummary/pyedb.siwave.Siwave.lock_file.rst", "api/_autosummary/pyedb.siwave.Siwave.open_project.rst", "api/_autosummary/pyedb.siwave.Siwave.oproject.rst", "api/_autosummary/pyedb.siwave.Siwave.project_file.rst", "api/_autosummary/pyedb.siwave.Siwave.project_name.rst", "api/_autosummary/pyedb.siwave.Siwave.project_path.rst", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.quit_application.rst", "api/_autosummary/pyedb.siwave.Siwave.results_directory.rst", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.save_project.rst", "api/_autosummary/pyedb.siwave.Siwave.src_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.version_keys.rst", "api/index.rst", "contributing.rst", "examples/index.rst", "examples/legacy_pyaedt_integration/03_5G_antenna_example.py", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics.py", "examples/legacy_pyaedt_integration/04_edb_parametrized_design.py", "examples/legacy_pyaedt_integration/09_Configuration.py", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board.py", "examples/legacy_pyaedt_integration/13_edb_create_component.py", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design.py", "examples/legacy_pyaedt_integration/15_ac_analysis.py", "examples/legacy_pyaedt_integration/index.rst", "examples/legacy_standalone/00_EDB_Create_VIA.py", "examples/legacy_standalone/01_edb_example.py", "examples/legacy_standalone/02_edb_to_ipc2581.py", "examples/legacy_standalone/03_rename_nets_and_ports.py", "examples/legacy_standalone/05_Plot_nets.py", "examples/legacy_standalone/06_Advanced_EDB.py", "examples/legacy_standalone/08_CPWG.py", "examples/legacy_standalone/10_GDS_workflow.py", "examples/legacy_standalone/11_post_layout_parameterization.py", "examples/legacy_standalone/index.rst", "examples/use_configuration/import_material.py", "examples/use_configuration/import_ports.py", "examples/use_configuration/import_setup_ac.py", "examples/use_configuration/import_stackup.py", "examples/use_configuration/index.rst", "examples/use_configuration/set_up_edb_for_signal_integrity_analysis.py", "getting_started/about.rst", "getting_started/contributing.rst", "getting_started/index.rst", "getting_started/installation.rst", "getting_started/quickcode.rst", "getting_started/troubleshooting.rst", "getting_started/versioning.rst", "index.rst", "user_guide/build_simulation_project/build_signal_integrity_project.rst", "user_guide/build_simulation_project/cutout.rst", "user_guide/build_simulation_project/index.rst", "user_guide/components/create_resistor_on_pin.rst", "user_guide/components/create_rlc_boundary_on_pins.rst", "user_guide/components/create_rlc_component.rst", "user_guide/components/index.rst", "user_guide/edb_information_queries/edb_queries.rst", "user_guide/edb_information_queries/get_layout_bounding_box.rst", "user_guide/edb_information_queries/index.rst", "user_guide/excitations/create_circuit_ports_on_component.rst", "user_guide/excitations/create_coax_port_on_component.rst", "user_guide/excitations/create_current_source.rst", "user_guide/excitations/create_edge_port_on_polygon.rst", "user_guide/excitations/create_port_between_pin_and_layer.rst", "user_guide/excitations/index.rst", "user_guide/index.rst", "user_guide/layer_stackup/define_layer_stackup.rst", "user_guide/layer_stackup/index.rst", "user_guide/layer_stackup/layer_stackup.rst", "user_guide/load_export_edb/index.rst", "user_guide/load_export_edb/loading_layout.rst", "user_guide/padstacks/create_padsatck_instance.rst", "user_guide/padstacks/index.rst", "user_guide/padstacks/set_all_antipads_value.rst", "user_guide/simulation_setup/add_siwave_analysis.rst", "user_guide/simulation_setup/define_hfss_extent.rst", "user_guide/simulation_setup/define_hfss_simulation_setup.rst", "user_guide/simulation_setup/index.rst", "user_guide/use_design_variables.rst"], "indexentries": {"ac_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[383, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", false]], "adaptive_high_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[398, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", false]], "adaptive_low_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[399, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", false]], "adaptive_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[400, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", false]], "add_conductor_material() (pyedb.dotnet.edb_core.materials.materials method)": [[554, "pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", false]], "add_current_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[384, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", false]], "add_dc_ground_source_term() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[385, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", false]], "add_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[555, "pyedb.dotnet.edb_core.materials.Materials.add_debye_material", false]], "add_dielectric_material() (pyedb.dotnet.edb_core.materials.materials method)": [[556, "pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", false]], "add_djordjevicsarkar_dielectric() (pyedb.dotnet.edb_core.materials.materials method)": [[557, "pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", false]], "add_document_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[689, "pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", false]], "add_frequency_sweep (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[442, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", false]], "add_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[690, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer", false]], "add_layer_above() (pyedb.dotnet.edb_core.stackup.stackup method)": [[691, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", false]], "add_layer_below() (pyedb.dotnet.edb_core.stackup.stackup method)": [[692, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", false]], "add_layer_bottom() (pyedb.dotnet.edb_core.stackup.stackup method)": [[693, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", false]], "add_layer_top() (pyedb.dotnet.edb_core.stackup.stackup method)": [[694, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", false]], "add_material() (pyedb.dotnet.edb_core.materials.materials method)": [[558, "pyedb.dotnet.edb_core.materials.Materials.add_material", false]], "add_multipole_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[559, "pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[128, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[141, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[155, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", false]], "add_outline_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[695, "pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", false]], "add_port_on_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[68, "pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", false]], "add_rlc() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[386, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", false]], "add_rlc_boundary() (pyedb.dotnet.edb_core.components.components method)": [[69, "pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", false]], "add_siwave_dc_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[657, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", false]], "add_siwave_syz_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[658, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", false]], "add_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch method)": [[443, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", false]], "add_void() (pyedb.dotnet.edb_core.modeler.modeler method)": [[572, "pyedb.dotnet.edb_core.modeler.Modeler.add_void", false]], "add_voltage_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[387, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", false]], "adjust_solder_dielectrics() (pyedb.dotnet.edb_core.stackup.stackup method)": [[696, "pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", false]], "aedt_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[214, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", false]], "airbox_horizontal_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[444, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", false]], "airbox_negative_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[445, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", false]], "airbox_positive_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[446, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", false]], "all_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[697, "pyedb.dotnet.edb_core.stackup.Stackup.all_layers", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[129, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[142, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[163, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[130, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[143, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[156, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", false]], "api_negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[131, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[132, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[144, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[157, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", false]], "api_object (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[164, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", false]], "api_positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[133, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", false]], "arc_angle (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[401, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", false]], "arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[402, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", false]], "arcs (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[350, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", false]], "area() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[351, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", false]], "assign_rlc_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[12, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", false]], "assign_s_param_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[13, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", false]], "assign_spice_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[14, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", false]], "backdrill_bottom (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[215, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", false]], "backdrill_top (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[216, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", false]], "basis_order (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[403, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", false]], "batch_solve_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[388, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", false]], "bbox (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[352, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[263, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[299, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", false]], "bounding_box (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[15, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[217, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[264, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[300, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[353, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", false]], "build_simulation_project() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[389, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", false]], "cap_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[16, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", false]], "capacitors (pyedb.dotnet.edb_core.components.components property)": [[70, "pyedb.dotnet.edb_core.components.Components.capacitors", false]], "center (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[17, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[337, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[354, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", false]], "check_and_fix_via_plating() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[625, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", false]], "circles (pyedb.dotnet.edb_core.modeler.modeler property)": [[573, "pyedb.dotnet.edb_core.modeler.Modeler.circles", false]], "classify_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[604, "pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", false]], "close_project() (pyedb.siwave.siwave method)": [[725, "pyedb.siwave.Siwave.close_project", false]], "coax_solder_ball_diameter (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[447, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", false]], "color (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[118, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", false]], "component (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[18, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", false]], "component (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[218, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[265, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[301, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[355, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", false]], "component_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[19, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", false]], "component_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[20, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", false]], "component_pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[219, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component_pin", false]], "component_property (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[21, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", false]], "components (class in pyedb.dotnet.edb_core.components)": [[64, "pyedb.dotnet.edb_core.components.Components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[145, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[165, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[448, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", false]], "components_by_nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[605, "pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", false]], "components_by_partname (pyedb.dotnet.edb_core.components.components property)": [[71, "pyedb.dotnet.edb_core.components.Components.components_by_partname", false]], "configure_hfss_analysis_setup() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[517, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", false]], "configure_hfss_extents() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[518, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", false]], "configure_siw_analysis_setup() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[659, "pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", false]], "convert_to_3d_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[191, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", false]], "convert_to_polygon() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[356, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", false]], "coplanar_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[449, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[266, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[302, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", false]], "create() (pyedb.dotnet.edb_core.components.components method)": [[72, "pyedb.dotnet.edb_core.components.Components.create", false]], "create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[166, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", false]], "create() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[626, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", false]], "create_bondwire() (pyedb.dotnet.edb_core.modeler.modeler method)": [[574, "pyedb.dotnet.edb_core.modeler.Modeler.create_bondwire", false]], "create_bundle_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[519, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", false]], "create_circle() (pyedb.dotnet.edb_core.modeler.modeler method)": [[575, "pyedb.dotnet.edb_core.modeler.Modeler.create_circle", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[520, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[660, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[521, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[661, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[662, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", false]], "create_circular_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[627, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", false]], "create_clearance_on_component() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[22, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", false]], "create_coax_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[220, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", false]], "create_coax_port() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[628, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", false]], "create_coax_port_on_component() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[522, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[523, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[663, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[524, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[664, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", false]], "create_current_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[665, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", false]], "create_dc_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[666, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", false]], "create_differential_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[525, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", false]], "create_edge_port_horizontal() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[526, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", false]], "create_edge_port_on_polygon() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[527, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", false]], "create_edge_port_vertical() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[528, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", false]], "create_exec_file() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[667, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", false]], "create_hfss_ports_on_padstack() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[529, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", false]], "create_impedance_crosstalk_scan() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[668, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", false]], "create_lumped_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[530, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", false]], "create_package_def() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[23, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", false]], "create_pin_group() (pyedb.dotnet.edb_core.modeler.modeler method)": [[576, "pyedb.dotnet.edb_core.modeler.Modeler.create_pin_group", false]], "create_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[669, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", false]], "create_pin_group_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[670, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", false]], "create_pin_group_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[671, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", false]], "create_pingroup_from_pins() (pyedb.dotnet.edb_core.components.components method)": [[73, "pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", false]], "create_polygon() (pyedb.dotnet.edb_core.modeler.modeler method)": [[577, "pyedb.dotnet.edb_core.modeler.Modeler.create_polygon", false]], "create_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[221, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", false]], "create_port_between_pin_and_layer() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[672, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", false]], "create_port_on_component() (pyedb.dotnet.edb_core.components.components method)": [[74, "pyedb.dotnet.edb_core.components.Components.create_port_on_component", false]], "create_port_on_pins() (pyedb.dotnet.edb_core.components.components method)": [[75, "pyedb.dotnet.edb_core.components.Components.create_port_on_pins", false]], "create_rectangle() (pyedb.dotnet.edb_core.modeler.modeler method)": [[578, "pyedb.dotnet.edb_core.modeler.Modeler.create_rectangle", false]], "create_rectangle_in_pad() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[222, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[531, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[673, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", false]], "create_rlc_boundary_on_pins() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[532, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", false]], "create_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[76, "pyedb.dotnet.edb_core.components.Components.create_rlc_component", false]], "create_rlc_component() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[674, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", false]], "create_source_on_component() (pyedb.dotnet.edb_core.components.components method)": [[77, "pyedb.dotnet.edb_core.components.Components.create_source_on_component", false]], "create_symmetric_stackup() (pyedb.dotnet.edb_core.stackup.stackup method)": [[698, "pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", false]], "create_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[223, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", false]], "create_trace() (pyedb.dotnet.edb_core.modeler.modeler method)": [[579, "pyedb.dotnet.edb_core.modeler.Modeler.create_trace", false]], "create_vertical_circuit_port_on_clipped_traces() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[533, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", false]], "create_voltage_probe_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[675, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[534, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[676, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[535, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[677, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[678, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", false]], "create_vrm_module() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[679, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", false]], "create_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[536, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", false]], "current_version (pyedb.siwave.siwave property)": [[726, "pyedb.siwave.Siwave.current_version", false]], "cutout_subdesign_expansion (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[450, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", false]], "cutout_subdesign_round_corner (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[451, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", false]], "cutout_subdesign_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[452, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", false]], "db (pyedb.dotnet.edb_core.modeler.modeler property)": [[580, "pyedb.dotnet.edb_core.modeler.Modeler.db", false]], "db (pyedb.dotnet.edb_core.nets.edbnets property)": [[606, "pyedb.dotnet.edb_core.nets.EdbNets.db", false]], "db (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[629, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", false]], "dc_compute_inductance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[478, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", false]], "dc_contact_radius (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[479, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", false]], "dc_error_energy (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[480, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", false]], "dc_export_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[481, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", false]], "dc_full_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[482, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", false]], "dc_icepak_temp_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[483, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", false]], "dc_import_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[484, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", false]], "dc_max_init_mesh_edge_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[485, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", false]], "dc_max_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[486, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", false]], "dc_mesh_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[487, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", false]], "dc_mesh_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[488, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", false]], "dc_min_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[489, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", false]], "dc_min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[490, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", false]], "dc_min_void_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[491, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", false]], "dc_num_bondwire_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[492, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", false]], "dc_num_via_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[493, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", false]], "dc_per_pin_res_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[494, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", false]], "dc_per_pin_use_pin_format (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[495, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", false]], "dc_percent_local_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[496, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", false]], "dc_perform_adaptive_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[497, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", false]], "dc_plot_jv (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[498, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", false]], "dc_refine_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[499, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", false]], "dc_refine_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[500, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", false]], "dc_report_config_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[501, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", false]], "dc_report_show_active_devices (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[502, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", false]], "dc_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[390, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", false]], "dc_shorts() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[548, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", false]], "dc_slide_position (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[503, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", false]], "dc_source_terms_to_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[504, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", false]], "dc_use_dc_custom_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[505, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", false]], "dc_use_loop_res_for_per_pin (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[506, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", false]], "dc_via_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[507, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", false]], "dcir_equipotential_region (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[224, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", false]], "deactivate_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[78, "pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", false]], "decade_count (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[404, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[267, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[303, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", false]], "deembed_length (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[304, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", false]], "defeature_abs_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[405, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", false]], "defeature_layout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[406, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", false]], "defeature_polygon() (pyedb.dotnet.edb_core.modeler.modeler method)": [[581, "pyedb.dotnet.edb_core.modeler.Modeler.defeature_polygon", false]], "definitions (pyedb.dotnet.edb_core.components.components property)": [[79, "pyedb.dotnet.edb_core.components.Components.definitions", false]], "definitions (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[630, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", false]], "delete() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[24, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", false]], "delete() (pyedb.dotnet.edb_core.components.components method)": [[80, "pyedb.dotnet.edb_core.components.Components.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[134, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[146, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[158, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[167, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[225, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[268, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[305, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[357, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.variables.variable method)": [[509, "pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", false]], "delete() (pyedb.dotnet.edb_core.nets.edbnets method)": [[607, "pyedb.dotnet.edb_core.nets.EdbNets.delete", false]], "delete_material() (pyedb.dotnet.edb_core.materials.materials method)": [[560, "pyedb.dotnet.edb_core.materials.Materials.delete_material", false]], "delete_padstack_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[631, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", false]], "delete_primitives() (pyedb.dotnet.edb_core.modeler.modeler method)": [[582, "pyedb.dotnet.edb_core.modeler.Modeler.delete_primitives", false]], "delete_single_pin_rlc() (pyedb.dotnet.edb_core.components.components method)": [[81, "pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", false]], "description (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[510, "pyedb.dotnet.edb_core.edb_data.variables.Variable.description", false]], "dielectric_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[453, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", false]], "dielectric_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[699, "pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", false]], "disable_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[82, "pyedb.dotnet.edb_core.components.Components.disable_rlc_component", false]], "disjoint_nets() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[549, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", false]], "do_cutout_subdesign (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[454, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", false]], "do_lambda_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[407, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", false]], "do_pingroup (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[455, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[269, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[306, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", false]], "duplicate() (pyedb.dotnet.edb_core.materials.materials method)": [[561, "pyedb.dotnet.edb_core.materials.Materials.duplicate", false]], "duplicate() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[632, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", false]], "edbarcs (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[336, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", false]], "edbcomponent (class in pyedb.dotnet.edb_core.cell.hierarchy.component)": [[11, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", false]], "edbdifferentialpairdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[127, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", false]], "edbextendednetdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[140, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", false]], "edbhfss (class in pyedb.dotnet.edb_core.hfss)": [[516, "pyedb.dotnet.edb_core.hfss.EdbHfss", false]], "edbnetclassdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[154, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", false]], "edbnets (class in pyedb.dotnet.edb_core.nets)": [[603, "pyedb.dotnet.edb_core.nets.EdbNets", false]], "edbnetsdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[162, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", false]], "edbpadproperties (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[178, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", false]], "edbpadstack (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[190, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", false]], "edbpadstackinstance (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[213, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", false]], "edbpadstacks (class in pyedb.dotnet.edb_core.padstack)": [[624, "pyedb.dotnet.edb_core.padstack.EdbPadstacks", false]], "edbprimitives (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[349, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", false]], "edbsiwave (class in pyedb.dotnet.edb_core.siwave)": [[656, "pyedb.dotnet.edb_core.siwave.EdbSiwave", false]], "edbvalue (class in pyedb.dotnet.edb_core.edb_data.edbvalue)": [[112, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", false]], "eligible_power_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[608, "pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", false]], "enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[25, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", false]], "end (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[338, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", false]], "enforce_causality (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[408, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", false]], "enforce_passivity (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[409, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", false]], "etching_factor_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[456, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", false]], "excitations (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[537, "pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", false]], "excitations (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[680, "pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", false]], "export() (pyedb.dotnet.edb_core.stackup.stackup method)": [[700, "pyedb.dotnet.edb_core.stackup.Stackup.export", false]], "export_bom() (pyedb.dotnet.edb_core.components.components method)": [[83, "pyedb.dotnet.edb_core.components.Components.export_bom", false]], "export_dc_simulation_report() (pyedb.siwave.siwave method)": [[727, "pyedb.siwave.Siwave.export_dc_simulation_report", false]], "export_definition() (pyedb.dotnet.edb_core.components.components method)": [[84, "pyedb.dotnet.edb_core.components.Components.export_definition", false]], "export_element_data() (pyedb.siwave.siwave method)": [[728, "pyedb.siwave.Siwave.export_element_data", false]], "export_icepak_project() (pyedb.siwave.siwave method)": [[729, "pyedb.siwave.Siwave.export_icepak_project", false]], "export_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[391, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", false]], "export_siwave_report() (pyedb.siwave.siwave method)": [[730, "pyedb.siwave.Siwave.export_siwave_report", false]], "extended_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[168, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", false]], "filename (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[392, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", false]], "fill_material (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[119, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[135, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[147, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[169, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", false]], "find_by_reference_designator() (pyedb.dotnet.edb_core.components.components method)": [[85, "pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", false]], "find_dc_short() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[170, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", false]], "find_instance_by_id() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[633, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.find_instance_by_id", false]], "find_or_create_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[609, "pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", false]], "fix_circle_void_for_clipping() (pyedb.dotnet.edb_core.modeler.modeler method)": [[583, "pyedb.dotnet.edb_core.modeler.Modeler.fix_circle_void_for_clipping", false]], "fix_self_intersections() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[550, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", false]], "flip_design() (pyedb.dotnet.edb_core.stackup.stackup method)": [[701, "pyedb.dotnet.edb_core.stackup.Stackup.flip_design", false]], "gapport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[262, "pyedb.dotnet.edb_core.edb_data.ports.GapPort", false]], "generate_excitations (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[457, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", false]], "generate_extended_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[610, "pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", false]], "generate_solder_balls (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[458, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", false]], "geometry_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[179, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", false]], "get_aedt_pin_name() (pyedb.dotnet.edb_core.components.components method)": [[86, "pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", false]], "get_closest_arc_midpoint() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[358, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", false]], "get_closest_point() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[359, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", false]], "get_component_by_name() (pyedb.dotnet.edb_core.components.components method)": [[87, "pyedb.dotnet.edb_core.components.Components.get_component_by_name", false]], "get_component_net_connection_info() (pyedb.dotnet.edb_core.components.components method)": [[88, "pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", false]], "get_component_placement_vector() (pyedb.dotnet.edb_core.components.components method)": [[89, "pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", false]], "get_components_from_nets() (pyedb.dotnet.edb_core.components.components method)": [[90, "pyedb.dotnet.edb_core.components.Components.get_components_from_nets", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[226, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[360, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[227, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[361, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", false]], "get_dcconnected_net_list() (pyedb.dotnet.edb_core.nets.edbnets method)": [[611, "pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[270, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[307, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", false]], "get_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[634, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", false]], "get_layout_bounding_box() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[538, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", false]], "get_layout_statistics() (pyedb.dotnet.edb_core.modeler.modeler method)": [[584, "pyedb.dotnet.edb_core.modeler.Modeler.get_layout_statistics", false]], "get_layout_thickness() (pyedb.dotnet.edb_core.stackup.stackup method)": [[702, "pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", false]], "get_net_by_name() (pyedb.dotnet.edb_core.nets.edbnets method)": [[612, "pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", false]], "get_nets_from_pin_list() (pyedb.dotnet.edb_core.components.components method)": [[91, "pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[271, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[308, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", false]], "get_pad_parameters() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[635, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", false]], "get_padstack_instance_by_net_name() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[636, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", false]], "get_padstack_instances_intersecting_bounding_box() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[637, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", false]], "get_padstack_instances_rtree_index() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[638, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[272, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[309, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", false]], "get_pin_from_component() (pyedb.dotnet.edb_core.components.components method)": [[92, "pyedb.dotnet.edb_core.components.Components.get_pin_from_component", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[273, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[310, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", false]], "get_pin_position() (pyedb.dotnet.edb_core.components.components method)": [[93, "pyedb.dotnet.edb_core.components.Components.get_pin_position", false]], "get_pinlist_from_component_and_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[639, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", false]], "get_pins() (pyedb.dotnet.edb_core.components.components method)": [[94, "pyedb.dotnet.edb_core.components.Components.get_pins", false]], "get_pins_name_from_net() (pyedb.dotnet.edb_core.components.components method)": [[95, "pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", false]], "get_plot_data() (pyedb.dotnet.edb_core.nets.edbnets method)": [[613, "pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[274, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[311, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", false]], "get_polygon_bounding_box() (pyedb.dotnet.edb_core.modeler.modeler method)": [[585, "pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_bounding_box", false]], "get_polygon_points() (pyedb.dotnet.edb_core.modeler.modeler method)": [[586, "pyedb.dotnet.edb_core.modeler.Modeler.get_polygon_points", false]], "get_polygons_by_layer() (pyedb.dotnet.edb_core.modeler.modeler method)": [[587, "pyedb.dotnet.edb_core.modeler.Modeler.get_polygons_by_layer", false]], "get_ports_number() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[539, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", false]], "get_powertree() (pyedb.dotnet.edb_core.nets.edbnets method)": [[614, "pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", false]], "get_primitive() (pyedb.dotnet.edb_core.modeler.modeler method)": [[588, "pyedb.dotnet.edb_core.modeler.Modeler.get_primitive", false]], "get_primitive_by_layer_and_point() (pyedb.dotnet.edb_core.modeler.modeler method)": [[589, "pyedb.dotnet.edb_core.modeler.Modeler.get_primitive_by_layer_and_point", false]], "get_primitives() (pyedb.dotnet.edb_core.modeler.modeler method)": [[590, "pyedb.dotnet.edb_core.modeler.Modeler.get_primitives", false]], "get_rats() (pyedb.dotnet.edb_core.components.components method)": [[96, "pyedb.dotnet.edb_core.components.Components.get_rats", false]], "get_reference_pins() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[228, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", false]], "get_reference_pins() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[640, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", false]], "get_smallest_trace_width() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[171, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", false]], "get_solder_ball_height() (pyedb.dotnet.edb_core.components.components method)": [[97, "pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", false]], "get_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[229, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", false]], "get_through_resistor_list() (pyedb.dotnet.edb_core.components.components method)": [[98, "pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", false]], "get_trace_width_for_traces_with_ports() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[540, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", false]], "get_via_instance_from_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[641, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", false]], "group_type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[26, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.group_type", false]], "height (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[339, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", false]], "hfss_extent_info (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[541, "pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[275, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[312, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", false]], "hole_diameter (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[192, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", false]], "hole_diameter_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[193, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", false]], "hole_finished_size (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[194, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", false]], "hole_offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[195, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", false]], "hole_offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[196, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", false]], "hole_parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[197, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", false]], "hole_params (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[198, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", false]], "hole_plating_ratio (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[199, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", false]], "hole_plating_thickness (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[200, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", false]], "hole_properties (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[201, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", false]], "hole_range (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[202, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", false]], "hole_rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[203, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", false]], "hole_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[204, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", false]], "honor_user_dielectric (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[459, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", false]], "horizontal_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[313, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", false]], "icepak (pyedb.siwave.siwave property)": [[731, "pyedb.siwave.Siwave.icepak", false]], "icepak_component_file (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[681, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", false]], "icepak_use_minimal_comp_defaults (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[682, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", false]], "ics (pyedb.dotnet.edb_core.components.components property)": [[65, "pyedb.dotnet.edb_core.components.Components.ICs", false]], "id (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[27, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", false]], "id (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[120, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", false]], "id (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[230, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[276, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[314, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[362, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", false]], "ignore_non_functional_pads (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[410, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", false]], "illegal_net_names() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[551, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", false]], "illegal_rlc_values() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[552, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[277, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[315, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", false]], "import_bom() (pyedb.dotnet.edb_core.components.components method)": [[99, "pyedb.dotnet.edb_core.components.Components.import_bom", false]], "import_definition() (pyedb.dotnet.edb_core.components.components method)": [[100, "pyedb.dotnet.edb_core.components.Components.import_definition", false]], "import_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[393, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", false]], "in_polygon() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[231, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", false]], "in_voids() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[232, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", false]], "include_inter_plane_coupling (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[411, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", false]], "include_only_selected_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[460, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", false]], "ind_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[28, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", false]], "inductors (pyedb.dotnet.edb_core.components.components property)": [[101, "pyedb.dotnet.edb_core.components.Components.inductors", false]], "instances (pyedb.dotnet.edb_core.components.components property)": [[102, "pyedb.dotnet.edb_core.components.Components.instances", false]], "instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[205, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", false]], "instances (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[642, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", false]], "instances_by_name (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[643, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[180, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[644, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[181, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[645, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", false]], "intersect() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[363, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", false]], "intersection_type() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[364, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", false]], "ios (pyedb.dotnet.edb_core.components.components property)": [[66, "pyedb.dotnet.edb_core.components.Components.IOs", false]], "is_arc() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[365, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", false]], "is_ccw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[340, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[278, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[316, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", false]], "is_current_source (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[279, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_current_source", false]], "is_current_source (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[317, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_current_source", false]], "is_enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[29, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", false]], "is_intersecting() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[366, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", false]], "is_negative (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[367, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", false]], "is_net_in_component() (pyedb.dotnet.edb_core.nets.edbnets method)": [[615, "pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", false]], "is_null (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[30, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[136, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[148, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[159, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[172, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[233, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[280, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[318, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[368, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", false]], "is_parallel_rlc (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[31, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", false]], "is_parameter (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[511, "pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", false]], "is_pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[234, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", false]], "is_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[341, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", false]], "is_port (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[281, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_port", false]], "is_port (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[319, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_port", false]], "is_power_gound_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[616, "pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", false]], "is_power_ground (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[173, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[282, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[320, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", false]], "is_segment (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[342, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", false]], "is_stackup_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[121, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", false]], "is_top_mounted (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[32, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", false]], "is_via_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[122, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", false]], "is_void (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[235, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", false]], "is_void (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[369, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", false]], "is_voltage_source (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[283, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_voltage_source", false]], "is_voltage_source (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[321, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_voltage_source", false]], "iterate_materials_in_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[562, "pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", false]], "layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[236, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[284, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[322, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[370, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[237, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[371, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", false]], "layer_range_names (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[238, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", false]], "layer_types (pyedb.dotnet.edb_core.stackup.stackup property)": [[703, "pyedb.dotnet.edb_core.stackup.Stackup.layer_types", false]], "layeredbclass (class in pyedb.dotnet.edb_core.edb_data.layer_data)": [[117, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", false]], "layers (pyedb.dotnet.edb_core.modeler.modeler property)": [[591, "pyedb.dotnet.edb_core.modeler.Modeler.layers", false]], "layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[704, "pyedb.dotnet.edb_core.stackup.Stackup.layers", false]], "layers_by_id (pyedb.dotnet.edb_core.stackup.stackup property)": [[705, "pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", false]], "layout_defeaturing() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[542, "pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", false]], "layout_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[33, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", false]], "layoutvalidation (class in pyedb.dotnet.edb_core.layout_validation)": [[547, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation", false]], "length (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[343, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", false]], "limits() (pyedb.dotnet.edb_core.stackup.stackup method)": [[706, "pyedb.dotnet.edb_core.stackup.Stackup.limits", false]], "load() (pyedb.dotnet.edb_core.stackup.stackup method)": [[707, "pyedb.dotnet.edb_core.stackup.Stackup.load", false]], "load_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[563, "pyedb.dotnet.edb_core.materials.Materials.load_amat", false]], "load_material() (pyedb.dotnet.edb_core.materials.materials method)": [[564, "pyedb.dotnet.edb_core.materials.Materials.load_material", false]], "location (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[34, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[285, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[323, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", false]], "lock_file (pyedb.siwave.siwave property)": [[732, "pyedb.siwave.Siwave.lock_file", false]], "longest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[372, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", false]], "lower_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[35, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", false]], "lower_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[239, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", false]], "magnitude (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[286, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", false]], "magnitude (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[324, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.magnitude", false]], "material (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[206, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", false]], "material_property_to_id() (pyedb.dotnet.edb_core.materials.materials method)": [[565, "pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", false]], "materials (class in pyedb.dotnet.edb_core.materials)": [[553, "pyedb.dotnet.edb_core.materials.Materials", false]], "materials (pyedb.dotnet.edb_core.materials.materials property)": [[566, "pyedb.dotnet.edb_core.materials.Materials.materials", false]], "max_arc_points (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[412, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", false]], "max_mag_delta_s (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[413, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", false]], "max_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[414, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", false]], "max_suf_dev (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[415, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", false]], "merge_nets_polygons() (pyedb.dotnet.edb_core.nets.edbnets method)": [[617, "pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", false]], "merge_via_along_lines() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[646, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", false]], "mesh_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[416, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", false]], "mesh_sizefactor (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[417, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", false]], "metal_volume (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[240, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", false]], "mid_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[344, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", false]], "min_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[418, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", false]], "min_pad_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[419, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", false]], "min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[420, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", false]], "min_void_area (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[421, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", false]], "minimum_void_surface (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[422, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", false]], "mode (pyedb.dotnet.edb_core.stackup.stackup property)": [[708, "pyedb.dotnet.edb_core.stackup.Stackup.mode", false]], "model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[36, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", false]], "model_type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[37, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", false]], "modeler (class in pyedb.dotnet.edb_core.modeler)": [[571, "pyedb.dotnet.edb_core.modeler.Modeler", false]], "module": [[10, "module-pyedb.dotnet.edb", false]], "name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[38, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", false]], "name (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[113, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", false]], "name (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[123, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[137, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[149, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[160, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[174, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[207, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[241, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[287, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[325, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[373, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", false]], "name (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[512, "pyedb.dotnet.edb_core.edb_data.variables.Variable.name", false]], "negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[138, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", false]], "net (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[39, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", false]], "net (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[242, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[288, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[326, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[374, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", false]], "net_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[243, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[289, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[327, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[375, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", false]], "netlist (pyedb.dotnet.edb_core.nets.edbnets property)": [[618, "pyedb.dotnet.edb_core.nets.EdbNets.netlist", false]], "netlist_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[40, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", false]], "nets (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[41, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[150, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[161, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", false]], "nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[619, "pyedb.dotnet.edb_core.nets.EdbNets.nets", false]], "nets_by_components (pyedb.dotnet.edb_core.nets.edbnets property)": [[620, "pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", false]], "non_stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[709, "pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", false]], "nport_comp_definition (pyedb.dotnet.edb_core.components.components property)": [[103, "pyedb.dotnet.edb_core.components.Components.nport_comp_definition", false]], "num_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[710, "pyedb.dotnet.edb_core.stackup.Stackup.num_layers", false]], "numpins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[42, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", false]], "object_instance (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[244, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", false]], "offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[182, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", false]], "offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[183, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", false]], "open_edb_after_build (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[394, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", false]], "open_project() (pyedb.siwave.siwave method)": [[733, "pyedb.siwave.Siwave.open_project", false]], "oproject (pyedb.siwave.siwave property)": [[734, "pyedb.siwave.Siwave.oproject", false]], "others (pyedb.dotnet.edb_core.components.components property)": [[67, "pyedb.dotnet.edb_core.components.Components.Others", false]], "output_aedb (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[461, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", false]], "package_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[43, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", false]], "pad_type (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[647, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", false]], "padstack_definition (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[245, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[175, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[208, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", false]], "parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[184, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", false]], "parameters_values (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[185, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", false]], "parameters_values_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[186, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", false]], "parametrize_polygon() (pyedb.dotnet.edb_core.modeler.modeler method)": [[592, "pyedb.dotnet.edb_core.modeler.Modeler.parametrize_polygon", false]], "parametrize_position() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[246, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", false]], "parametrize_trace_width() (pyedb.dotnet.edb_core.modeler.modeler method)": [[593, "pyedb.dotnet.edb_core.modeler.Modeler.parametrize_trace_width", false]], "part_name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[44, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", false]], "partname (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[45, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", false]], "passivity_tolerance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[423, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", false]], "paths (pyedb.dotnet.edb_core.modeler.modeler property)": [[594, "pyedb.dotnet.edb_core.modeler.Modeler.paths", false]], "pec_launch_width (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[328, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", false]], "percentage_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[424, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", false]], "phase (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[290, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", false]], "phase (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[329, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.phase", false]], "pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[247, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", false]], "pin_groups (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[683, "pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", false]], "pin_number (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[248, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", false]], "pingroups (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[249, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", false]], "pingroups (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[648, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", false]], "pinlist (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[46, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", false]], "pins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[47, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", false]], "pins (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[649, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", false]], "place() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[650, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", false]], "place_a3dcomp_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[711, "pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", false]], "place_in_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[712, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", false]], "place_in_layout_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[713, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", false]], "place_instance() (pyedb.dotnet.edb_core.stackup.stackup method)": [[714, "pyedb.dotnet.edb_core.stackup.Stackup.place_instance", false]], "place_voltage_probe() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[684, "pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", false]], "placement_layer (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[48, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", false]], "placement_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[250, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", false]], "plot() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[176, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", false]], "plot() (pyedb.dotnet.edb_core.nets.edbnets method)": [[621, "pyedb.dotnet.edb_core.nets.EdbNets.plot", false]], "plot() (pyedb.dotnet.edb_core.stackup.stackup method)": [[715, "pyedb.dotnet.edb_core.stackup.Stackup.plot", false]], "points (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[345, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", false]], "points_raw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[346, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", false]], "polygon_data (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[187, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", false]], "polygons (pyedb.dotnet.edb_core.modeler.modeler property)": [[595, "pyedb.dotnet.edb_core.modeler.Modeler.polygons", false]], "polygons_by_layer (pyedb.dotnet.edb_core.modeler.modeler property)": [[596, "pyedb.dotnet.edb_core.modeler.Modeler.polygons_by_layer", false]], "position (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[251, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", false]], "positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[139, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", false]], "power (pyedb.dotnet.edb_core.nets.edbnets property)": [[622, "pyedb.dotnet.edb_core.nets.EdbNets.power", false]], "power_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[462, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", false]], "primitive_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[252, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.primitive_type", false]], "primitive_type (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[376, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.primitive_type", false]], "primitives (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[177, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", false]], "primitives (pyedb.dotnet.edb_core.modeler.modeler property)": [[597, "pyedb.dotnet.edb_core.modeler.Modeler.primitives", false]], "primitives_by_layer (pyedb.dotnet.edb_core.modeler.modeler property)": [[598, "pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_layer", false]], "primitives_by_net (pyedb.dotnet.edb_core.modeler.modeler property)": [[599, "pyedb.dotnet.edb_core.modeler.Modeler.primitives_by_net", false]], "probes (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[543, "pyedb.dotnet.edb_core.hfss.EdbHfss.probes", false]], "probes (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[685, "pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", false]], "process_padstack_definitions (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[425, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", false]], "project_file (pyedb.siwave.siwave property)": [[735, "pyedb.siwave.Siwave.project_file", false]], "project_name (pyedb.siwave.siwave property)": [[736, "pyedb.siwave.Siwave.project_name", false]], "project_path (pyedb.siwave.siwave property)": [[737, "pyedb.siwave.Siwave.project_path", false]], "pyaedt_dir (pyedb.siwave.siwave property)": [[738, "pyedb.siwave.Siwave.pyaedt_dir", false]], "pyedb.dotnet.edb": [[10, "module-pyedb.dotnet.edb", false]], "quit_application() (pyedb.siwave.siwave method)": [[739, "pyedb.siwave.Siwave.quit_application", false]], "radiation_box (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[426, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", false]], "radius (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[347, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", false]], "read_materials() (pyedb.dotnet.edb_core.materials.materials method)": [[567, "pyedb.dotnet.edb_core.materials.Materials.read_materials", false]], "read_syslib_material() (pyedb.dotnet.edb_core.materials.materials method)": [[568, "pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", false]], "rectangles (pyedb.dotnet.edb_core.modeler.modeler property)": [[600, "pyedb.dotnet.edb_core.modeler.Modeler.rectangles", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[291, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[330, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", false]], "refdes (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[49, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[292, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[331, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[293, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[332, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", false]], "refresh_components() (pyedb.dotnet.edb_core.components.components method)": [[104, "pyedb.dotnet.edb_core.components.Components.refresh_components", false]], "refresh_layer_collection() (pyedb.dotnet.edb_core.stackup.stackup method)": [[716, "pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", false]], "relative_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[427, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", false]], "remove_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[717, "pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", false]], "remove_pads_from_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[651, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", false]], "renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[294, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", false]], "renormalize_z0 (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[295, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", false]], "replace_rlc_by_gap_boundaries() (pyedb.dotnet.edb_core.components.components method)": [[105, "pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", false]], "res_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[50, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", false]], "residual_copper_area_per_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[718, "pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", false]], "resistors (pyedb.dotnet.edb_core.components.components property)": [[106, "pyedb.dotnet.edb_core.components.Components.resistors", false]], "results_directory (pyedb.siwave.siwave property)": [[740, "pyedb.siwave.Siwave.results_directory", false]], "return_current_distribution (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[428, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", false]], "rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[151, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", false]], "rlc_values (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[51, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", false]], "rotation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[52, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[188, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[253, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", false]], "run_dc_simulation() (pyedb.siwave.siwave method)": [[741, "pyedb.siwave.Siwave.run_dc_simulation", false]], "run_icepak_simulation() (pyedb.siwave.siwave method)": [[742, "pyedb.siwave.Siwave.run_icepak_simulation", false]], "s_param_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[53, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", false]], "save_project() (pyedb.siwave.siwave method)": [[743, "pyedb.siwave.Siwave.save_project", false]], "serial_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[152, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", false]], "set_all_antipad_value() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[652, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", false]], "set_backdrill_bottom() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[254, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", false]], "set_backdrill_top() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[255, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", false]], "set_coax_port_attributes() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[544, "pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", false]], "set_component_model() (pyedb.dotnet.edb_core.components.components method)": [[107, "pyedb.dotnet.edb_core.components.Components.set_component_model", false]], "set_component_rlc() (pyedb.dotnet.edb_core.components.components method)": [[108, "pyedb.dotnet.edb_core.components.Components.set_component_rlc", false]], "set_layer_clone() (pyedb.dotnet.edb_core.stackup.stackup method)": [[719, "pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", false]], "set_pad_property() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[653, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", false]], "set_solder_ball() (pyedb.dotnet.edb_core.components.components method)": [[109, "pyedb.dotnet.edb_core.components.Components.set_solder_ball", false]], "set_solderball() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[654, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", false]], "setup_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[395, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", false]], "shape (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[189, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", false]], "shape_to_polygon_data() (pyedb.dotnet.edb_core.modeler.modeler method)": [[601, "pyedb.dotnet.edb_core.modeler.Modeler.shape_to_polygon_data", false]], "short_component_pins() (pyedb.dotnet.edb_core.components.components method)": [[110, "pyedb.dotnet.edb_core.components.Components.short_component_pins", false]], "shortest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[377, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", false]], "shunt_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[153, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", false]], "signal (pyedb.dotnet.edb_core.nets.edbnets property)": [[623, "pyedb.dotnet.edb_core.nets.EdbNets.signal", false]], "signal_layer_etching_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[463, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", false]], "signal_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[720, "pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", false]], "signal_layers_properties (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[464, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", false]], "signal_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[465, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", false]], "simulationconfiguration (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[382, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", false]], "simulationconfigurationac (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[397, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", false]], "simulationconfigurationbatch (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[441, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", false]], "simulationconfigurationdc (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[477, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", false]], "siwave (class in pyedb.siwave)": [[724, "pyedb.siwave.Siwave", false]], "snap_length_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[429, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", false]], "solder_ball_diameter (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[54, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", false]], "solder_ball_height (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[55, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", false]], "solder_ball_placement (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[56, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", false]], "solder_ball_shape (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[57, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", false]], "solver_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[396, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", false]], "sources (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[466, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", false]], "sources (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[545, "pyedb.dotnet.edb_core.hfss.EdbHfss.sources", false]], "sources (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[686, "pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", false]], "spice_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[58, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", false]], "split_to_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[209, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", false]], "src_dir (pyedb.siwave.siwave property)": [[744, "pyedb.siwave.Siwave.src_dir", false]], "stackup (class in pyedb.dotnet.edb_core.stackup)": [[688, "pyedb.dotnet.edb_core.stackup.Stackup", false]], "stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[721, "pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", false]], "start (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[348, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", false]], "start_azimuth (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[430, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", false]], "start_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[431, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", false]], "start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[256, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", false]], "step_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[432, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", false]], "stop_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[433, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", false]], "stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[257, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", false]], "subtract() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[378, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", false]], "sweep_interpolating (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[434, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", false]], "sweep_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[435, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", false]], "sweep_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[436, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", false]], "syslib (pyedb.dotnet.edb_core.materials.materials property)": [[569, "pyedb.dotnet.edb_core.materials.Materials.syslib", false]], "terminal (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[258, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[296, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[333, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", false]], "thickness (pyedb.dotnet.edb_core.stackup.stackup property)": [[722, "pyedb.dotnet.edb_core.stackup.Stackup.thickness", false]], "tofloat (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[114, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", false]], "top_bottom_association (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[59, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", false]], "top_bottom_association (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[259, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", false]], "tostring (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[115, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", false]], "transparency (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[124, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", false]], "trim_component_reference_size() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[546, "pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", false]], "trim_reference_size (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[467, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", false]], "truncate_airbox_at_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[468, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", false]], "type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[60, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", false]], "type (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[125, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", false]], "type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[260, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[297, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[334, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[379, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", false]], "unite() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[380, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", false]], "unite_polygons_on_layer() (pyedb.dotnet.edb_core.modeler.modeler method)": [[602, "pyedb.dotnet.edb_core.modeler.Modeler.unite_polygons_on_layer", false]], "update() (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass method)": [[126, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", false]], "update_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[723, "pyedb.dotnet.edb_core.stackup.Stackup.update_layout", false]], "update_material() (pyedb.dotnet.edb_core.materials.materials method)": [[570, "pyedb.dotnet.edb_core.materials.Materials.update_material", false]], "update_rlc_from_bom() (pyedb.dotnet.edb_core.components.components method)": [[111, "pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", false]], "upper_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[61, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", false]], "upper_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[261, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", false]], "use_airbox_horizontal_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[469, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", false]], "use_airbox_negative_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[470, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", false]], "use_airbox_positive_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[471, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", false]], "use_arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[437, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", false]], "use_default_coax_port_radial_extension (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[472, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", false]], "use_default_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[473, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", false]], "use_dielectric_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[474, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", false]], "use_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[438, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", false]], "use_pyaedt_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[475, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", false]], "use_q3d_for_dc (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[439, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", false]], "use_radiation_boundary (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[476, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", false]], "use_s_parameter_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[62, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", false]], "value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[63, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", false]], "value (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[116, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", false]], "value (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[513, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value", false]], "value_object (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[514, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", false]], "value_string (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[515, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", false]], "variable (class in pyedb.dotnet.edb_core.edb_data.variables)": [[508, "pyedb.dotnet.edb_core.edb_data.variables.Variable", false]], "version_keys (pyedb.siwave.siwave property)": [[745, "pyedb.siwave.Siwave.version_keys", false]], "vertical_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[335, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", false]], "via_layers (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[210, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", false]], "via_start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[211, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", false]], "via_stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[212, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", false]], "vias (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[655, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", false]], "voids (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[381, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", false]], "voltage_regulator_modules (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[687, "pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", false]], "waveport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[298, "pyedb.dotnet.edb_core.edb_data.ports.WavePort", false]], "xtalk_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[440, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", false]]}, "objects": {"pyedb.dotnet": [[10, 0, 0, "-", "edb"]], "pyedb.dotnet.edb_core.cell.hierarchy.component": [[11, 1, 1, "", "EDBComponent"]], "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent": [[12, 2, 1, "", "assign_rlc_model"], [13, 2, 1, "", "assign_s_param_model"], [14, 2, 1, "", "assign_spice_model"], [15, 3, 1, "", "bounding_box"], [16, 3, 1, "", "cap_value"], [17, 3, 1, "", "center"], [18, 3, 1, "", "component"], [19, 3, 1, "", "component_def"], [20, 3, 1, "", "component_instance"], [21, 3, 1, "", "component_property"], [22, 2, 1, "", "create_clearance_on_component"], [23, 2, 1, "", "create_package_def"], [24, 2, 1, "", "delete"], [25, 3, 1, "", "enabled"], [26, 3, 1, "", "group_type"], [27, 3, 1, "", "id"], [28, 3, 1, "", "ind_value"], [29, 3, 1, "", "is_enabled"], [30, 3, 1, "", "is_null"], [31, 3, 1, "", "is_parallel_rlc"], [32, 3, 1, "", "is_top_mounted"], [33, 3, 1, "", "layout_instance"], [34, 3, 1, "", "location"], [35, 3, 1, "", "lower_elevation"], [36, 3, 1, "", "model"], [37, 3, 1, "", "model_type"], [38, 3, 1, "", "name"], [39, 3, 1, "", "net"], [40, 3, 1, "", "netlist_model"], [41, 3, 1, "", "nets"], [42, 3, 1, "", "numpins"], [43, 3, 1, "", "package_def"], [44, 3, 1, "", "part_name"], [45, 3, 1, "", "partname"], [46, 3, 1, "", "pinlist"], [47, 3, 1, "", "pins"], [48, 3, 1, "", "placement_layer"], [49, 3, 1, "", "refdes"], [50, 3, 1, "", "res_value"], [51, 3, 1, "", "rlc_values"], [52, 3, 1, "", "rotation"], [53, 3, 1, "", "s_param_model"], [54, 3, 1, "", "solder_ball_diameter"], [55, 3, 1, "", "solder_ball_height"], [56, 3, 1, "", "solder_ball_placement"], [57, 3, 1, "", "solder_ball_shape"], [58, 3, 1, "", "spice_model"], [59, 3, 1, "", "top_bottom_association"], [60, 3, 1, "", "type"], [61, 3, 1, "", "upper_elevation"], [62, 2, 1, "", "use_s_parameter_model"], [63, 3, 1, "", "value"]], "pyedb.dotnet.edb_core.components": [[64, 1, 1, "", "Components"]], "pyedb.dotnet.edb_core.components.Components": [[65, 3, 1, "", "ICs"], [66, 3, 1, "", "IOs"], [67, 3, 1, "", "Others"], [68, 2, 1, "", "add_port_on_rlc_component"], [69, 2, 1, "", "add_rlc_boundary"], [70, 3, 1, "", "capacitors"], [71, 3, 1, "", "components_by_partname"], [72, 2, 1, "", "create"], [73, 2, 1, "", "create_pingroup_from_pins"], [74, 2, 1, "", "create_port_on_component"], [75, 2, 1, "", "create_port_on_pins"], [76, 2, 1, "", "create_rlc_component"], [77, 2, 1, "", "create_source_on_component"], [78, 2, 1, "", "deactivate_rlc_component"], [79, 3, 1, "", "definitions"], [80, 2, 1, "", "delete"], [81, 2, 1, "", "delete_single_pin_rlc"], [82, 2, 1, "", "disable_rlc_component"], [83, 2, 1, "", "export_bom"], [84, 2, 1, "", "export_definition"], [85, 2, 1, "", "find_by_reference_designator"], [86, 2, 1, "", "get_aedt_pin_name"], [87, 2, 1, "", "get_component_by_name"], [88, 2, 1, "", "get_component_net_connection_info"], [89, 2, 1, "", "get_component_placement_vector"], [90, 2, 1, "", "get_components_from_nets"], [91, 2, 1, "", "get_nets_from_pin_list"], [92, 2, 1, "", "get_pin_from_component"], [93, 2, 1, "", "get_pin_position"], [94, 2, 1, "", "get_pins"], [95, 2, 1, "", "get_pins_name_from_net"], [96, 2, 1, "", "get_rats"], [97, 2, 1, "", "get_solder_ball_height"], [98, 2, 1, "", "get_through_resistor_list"], [99, 2, 1, "", "import_bom"], [100, 2, 1, "", "import_definition"], [101, 3, 1, "", "inductors"], [102, 3, 1, "", "instances"], [103, 3, 1, "", "nport_comp_definition"], [104, 2, 1, "", "refresh_components"], [105, 2, 1, "", "replace_rlc_by_gap_boundaries"], [106, 3, 1, "", "resistors"], [107, 2, 1, "", "set_component_model"], [108, 2, 1, "", "set_component_rlc"], [109, 2, 1, "", "set_solder_ball"], [110, 2, 1, "", "short_component_pins"], [111, 2, 1, "", "update_rlc_from_bom"]], "pyedb.dotnet.edb_core.edb_data.edbvalue": [[112, 1, 1, "", "EdbValue"]], "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue": [[113, 3, 1, "", "name"], [114, 3, 1, "", "tofloat"], [115, 3, 1, "", "tostring"], [116, 3, 1, "", "value"]], "pyedb.dotnet.edb_core.edb_data.layer_data": [[117, 1, 1, "", "LayerEdbClass"]], "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass": [[118, 3, 1, "", "color"], [119, 3, 1, "", "fill_material"], [120, 3, 1, "", "id"], [121, 3, 1, "", "is_stackup_layer"], [122, 3, 1, "", "is_via_layer"], [123, 3, 1, "", "name"], [124, 3, 1, "", "transparency"], [125, 3, 1, "", "type"], [126, 2, 1, "", "update"]], "pyedb.dotnet.edb_core.edb_data.nets_data": [[127, 1, 1, "", "EDBDifferentialPairData"], [140, 1, 1, "", "EDBExtendedNetData"], [154, 1, 1, "", "EDBNetClassData"], [162, 1, 1, "", "EDBNetsData"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData": [[128, 2, 1, "", "add_net"], [129, 3, 1, "", "api_class"], [130, 2, 1, "", "api_create"], [131, 3, 1, "", "api_negative_net"], [132, 3, 1, "", "api_nets"], [133, 3, 1, "", "api_positive_net"], [134, 2, 1, "", "delete"], [135, 2, 1, "", "find_by_name"], [136, 3, 1, "", "is_null"], [137, 3, 1, "", "name"], [138, 3, 1, "", "negative_net"], [139, 3, 1, "", "positive_net"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData": [[141, 2, 1, "", "add_net"], [142, 3, 1, "", "api_class"], [143, 2, 1, "", "api_create"], [144, 3, 1, "", "api_nets"], [145, 3, 1, "", "components"], [146, 2, 1, "", "delete"], [147, 2, 1, "", "find_by_name"], [148, 3, 1, "", "is_null"], [149, 3, 1, "", "name"], [150, 3, 1, "", "nets"], [151, 3, 1, "", "rlc"], [152, 3, 1, "", "serial_rlc"], [153, 3, 1, "", "shunt_rlc"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData": [[155, 2, 1, "", "add_net"], [156, 2, 1, "", "api_create"], [157, 3, 1, "", "api_nets"], [158, 2, 1, "", "delete"], [159, 3, 1, "", "is_null"], [160, 3, 1, "", "name"], [161, 3, 1, "", "nets"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData": [[163, 3, 1, "", "api_class"], [164, 3, 1, "", "api_object"], [165, 3, 1, "", "components"], [166, 2, 1, "", "create"], [167, 2, 1, "", "delete"], [168, 3, 1, "", "extended_net"], [169, 2, 1, "", "find_by_name"], [170, 2, 1, "", "find_dc_short"], [171, 2, 1, "", "get_smallest_trace_width"], [172, 3, 1, "", "is_null"], [173, 3, 1, "", "is_power_ground"], [174, 3, 1, "", "name"], [175, 3, 1, "", "padstack_instances"], [176, 2, 1, "", "plot"], [177, 3, 1, "", "primitives"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data": [[178, 1, 1, "", "EDBPadProperties"], [190, 1, 1, "", "EDBPadstack"], [213, 1, 1, "", "EDBPadstackInstance"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties": [[179, 3, 1, "", "geometry_type"], [180, 2, 1, "", "int_to_geometry_type"], [181, 2, 1, "", "int_to_pad_type"], [182, 3, 1, "", "offset_x"], [183, 3, 1, "", "offset_y"], [184, 3, 1, "", "parameters"], [185, 3, 1, "", "parameters_values"], [186, 3, 1, "", "parameters_values_string"], [187, 3, 1, "", "polygon_data"], [188, 3, 1, "", "rotation"], [189, 3, 1, "", "shape"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack": [[191, 2, 1, "", "convert_to_3d_microvias"], [192, 3, 1, "", "hole_diameter"], [193, 3, 1, "", "hole_diameter_string"], [194, 3, 1, "", "hole_finished_size"], [195, 3, 1, "", "hole_offset_x"], [196, 3, 1, "", "hole_offset_y"], [197, 3, 1, "", "hole_parameters"], [198, 3, 1, "", "hole_params"], [199, 3, 1, "", "hole_plating_ratio"], [200, 3, 1, "", "hole_plating_thickness"], [201, 3, 1, "", "hole_properties"], [202, 3, 1, "", "hole_range"], [203, 3, 1, "", "hole_rotation"], [204, 3, 1, "", "hole_type"], [205, 3, 1, "", "instances"], [206, 3, 1, "", "material"], [207, 3, 1, "", "name"], [208, 3, 1, "", "padstack_instances"], [209, 2, 1, "", "split_to_microvias"], [210, 3, 1, "", "via_layers"], [211, 3, 1, "", "via_start_layer"], [212, 3, 1, "", "via_stop_layer"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance": [[214, 3, 1, "", "aedt_name"], [215, 3, 1, "", "backdrill_bottom"], [216, 3, 1, "", "backdrill_top"], [217, 3, 1, "", "bounding_box"], [218, 3, 1, "", "component"], [219, 3, 1, "", "component_pin"], [220, 2, 1, "", "create_coax_port"], [221, 2, 1, "", "create_port"], [222, 2, 1, "", "create_rectangle_in_pad"], [223, 2, 1, "", "create_terminal"], [224, 3, 1, "", "dcir_equipotential_region"], [225, 2, 1, "", "delete"], [226, 2, 1, "", "get_connected_object_id_set"], [227, 2, 1, "", "get_connected_objects"], [228, 2, 1, "", "get_reference_pins"], [229, 2, 1, "", "get_terminal"], [230, 3, 1, "", "id"], [231, 2, 1, "", "in_polygon"], [232, 2, 1, "", "in_voids"], [233, 3, 1, "", "is_null"], [234, 3, 1, "", "is_pin"], [235, 3, 1, "", "is_void"], [236, 3, 1, "", "layer"], [237, 3, 1, "", "layer_name"], [238, 3, 1, "", "layer_range_names"], [239, 3, 1, "", "lower_elevation"], [240, 3, 1, "", "metal_volume"], [241, 3, 1, "", "name"], [242, 3, 1, "", "net"], [243, 3, 1, "", "net_name"], [244, 3, 1, "", "object_instance"], [245, 3, 1, "", "padstack_definition"], [246, 2, 1, "", "parametrize_position"], [247, 3, 1, "", "pin"], [248, 3, 1, "", "pin_number"], [249, 3, 1, "", "pingroups"], [250, 3, 1, "", "placement_layer"], [251, 3, 1, "", "position"], [252, 3, 1, "", "primitive_type"], [253, 3, 1, "", "rotation"], [254, 2, 1, "", "set_backdrill_bottom"], [255, 2, 1, "", "set_backdrill_top"], [256, 3, 1, "", "start_layer"], [257, 3, 1, "", "stop_layer"], [258, 3, 1, "", "terminal"], [259, 3, 1, "", "top_bottom_association"], [260, 3, 1, "", "type"], [261, 3, 1, "", "upper_elevation"]], "pyedb.dotnet.edb_core.edb_data.ports": [[262, 1, 1, "", "GapPort"], [298, 1, 1, "", "WavePort"]], "pyedb.dotnet.edb_core.edb_data.ports.GapPort": [[263, 3, 1, "", "boundary_type"], [264, 3, 1, "", "bounding_box"], [265, 3, 1, "", "component"], [266, 2, 1, "", "couple_ports"], [267, 3, 1, "", "deembed"], [268, 2, 1, "", "delete"], [269, 3, 1, "", "do_renormalize"], [270, 2, 1, "", "get_edge_terminal_reference_primitive"], [271, 2, 1, "", "get_pad_edge_terminal_reference_pin"], [272, 2, 1, "", "get_padstack_terminal_reference_pin"], [273, 2, 1, "", "get_pin_group_terminal_reference_pin"], [274, 2, 1, "", "get_point_terminal_reference_primitive"], [275, 3, 1, "", "hfss_type"], [276, 3, 1, "", "id"], [277, 3, 1, "", "impedance"], [278, 3, 1, "", "is_circuit_port"], [279, 3, 1, "", "is_current_source"], [280, 3, 1, "", "is_null"], [281, 3, 1, "", "is_port"], [282, 3, 1, "", "is_reference_terminal"], [283, 3, 1, "", "is_voltage_source"], [284, 3, 1, "", "layer"], [285, 3, 1, "", "location"], [286, 3, 1, "", "magnitude"], [287, 3, 1, "", "name"], [288, 3, 1, "", "net"], [289, 3, 1, "", "net_name"], [290, 3, 1, "", "phase"], [291, 3, 1, "", "ref_terminal"], [292, 3, 1, "", "reference_net_name"], [293, 3, 1, "", "reference_object"], [294, 3, 1, "", "renormalize"], [295, 3, 1, "", "renormalize_z0"], [296, 3, 1, "", "terminal_type"], [297, 3, 1, "", "type"]], "pyedb.dotnet.edb_core.edb_data.ports.WavePort": [[299, 3, 1, "", "boundary_type"], [300, 3, 1, "", "bounding_box"], [301, 3, 1, "", "component"], [302, 2, 1, "", "couple_ports"], [303, 3, 1, "", "deembed"], [304, 3, 1, "", "deembed_length"], [305, 2, 1, "", "delete"], [306, 3, 1, "", "do_renormalize"], [307, 2, 1, "", "get_edge_terminal_reference_primitive"], [308, 2, 1, "", "get_pad_edge_terminal_reference_pin"], [309, 2, 1, "", "get_padstack_terminal_reference_pin"], [310, 2, 1, "", "get_pin_group_terminal_reference_pin"], [311, 2, 1, "", "get_point_terminal_reference_primitive"], [312, 3, 1, "", "hfss_type"], [313, 3, 1, "", "horizontal_extent_factor"], [314, 3, 1, "", "id"], [315, 3, 1, "", "impedance"], [316, 3, 1, "", "is_circuit_port"], [317, 3, 1, "", "is_current_source"], [318, 3, 1, "", "is_null"], [319, 3, 1, "", "is_port"], [320, 3, 1, "", "is_reference_terminal"], [321, 3, 1, "", "is_voltage_source"], [322, 3, 1, "", "layer"], [323, 3, 1, "", "location"], [324, 3, 1, "", "magnitude"], [325, 3, 1, "", "name"], [326, 3, 1, "", "net"], [327, 3, 1, "", "net_name"], [328, 3, 1, "", "pec_launch_width"], [329, 3, 1, "", "phase"], [330, 3, 1, "", "ref_terminal"], [331, 3, 1, "", "reference_net_name"], [332, 3, 1, "", "reference_object"], [333, 3, 1, "", "terminal_type"], [334, 3, 1, "", "type"], [335, 3, 1, "", "vertical_extent_factor"]], "pyedb.dotnet.edb_core.edb_data.primitives_data": [[336, 1, 1, "", "EDBArcs"], [349, 1, 1, "", "EDBPrimitives"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs": [[337, 3, 1, "", "center"], [338, 3, 1, "", "end"], [339, 3, 1, "", "height"], [340, 3, 1, "", "is_ccw"], [341, 3, 1, "", "is_point"], [342, 3, 1, "", "is_segment"], [343, 3, 1, "", "length"], [344, 3, 1, "", "mid_point"], [345, 3, 1, "", "points"], [346, 3, 1, "", "points_raw"], [347, 3, 1, "", "radius"], [348, 3, 1, "", "start"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives": [[350, 3, 1, "", "arcs"], [351, 2, 1, "", "area"], [352, 3, 1, "", "bbox"], [353, 3, 1, "", "bounding_box"], [354, 3, 1, "", "center"], [355, 3, 1, "", "component"], [356, 2, 1, "", "convert_to_polygon"], [357, 2, 1, "", "delete"], [358, 2, 1, "", "get_closest_arc_midpoint"], [359, 2, 1, "", "get_closest_point"], [360, 2, 1, "", "get_connected_object_id_set"], [361, 2, 1, "", "get_connected_objects"], [362, 3, 1, "", "id"], [363, 2, 1, "", "intersect"], [364, 2, 1, "", "intersection_type"], [365, 2, 1, "", "is_arc"], [366, 2, 1, "", "is_intersecting"], [367, 3, 1, "", "is_negative"], [368, 3, 1, "", "is_null"], [369, 3, 1, "", "is_void"], [370, 3, 1, "", "layer"], [371, 3, 1, "", "layer_name"], [372, 3, 1, "", "longest_arc"], [373, 3, 1, "", "name"], [374, 3, 1, "", "net"], [375, 3, 1, "", "net_name"], [376, 3, 1, "", "primitive_type"], [377, 3, 1, "", "shortest_arc"], [378, 2, 1, "", "subtract"], [379, 3, 1, "", "type"], [380, 2, 1, "", "unite"], [381, 3, 1, "", "voids"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration": [[382, 1, 1, "", "SimulationConfiguration"], [397, 1, 1, "", "SimulationConfigurationAc"], [441, 1, 1, "", "SimulationConfigurationBatch"], [477, 1, 1, "", "SimulationConfigurationDc"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration": [[383, 3, 1, "", "ac_settings"], [384, 2, 1, "", "add_current_source"], [385, 2, 1, "", "add_dc_ground_source_term"], [386, 2, 1, "", "add_rlc"], [387, 2, 1, "", "add_voltage_source"], [388, 3, 1, "", "batch_solve_settings"], [389, 2, 1, "", "build_simulation_project"], [390, 3, 1, "", "dc_settings"], [391, 2, 1, "", "export_json"], [392, 3, 1, "", "filename"], [393, 2, 1, "", "import_json"], [394, 3, 1, "", "open_edb_after_build"], [395, 3, 1, "", "setup_name"], [396, 3, 1, "", "solver_type"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc": [[398, 3, 1, "", "adaptive_high_freq"], [399, 3, 1, "", "adaptive_low_freq"], [400, 3, 1, "", "adaptive_type"], [401, 3, 1, "", "arc_angle"], [402, 3, 1, "", "arc_to_chord_error"], [403, 3, 1, "", "basis_order"], [404, 3, 1, "", "decade_count"], [405, 3, 1, "", "defeature_abs_length"], [406, 3, 1, "", "defeature_layout"], [407, 3, 1, "", "do_lambda_refinement"], [408, 3, 1, "", "enforce_causality"], [409, 3, 1, "", "enforce_passivity"], [410, 3, 1, "", "ignore_non_functional_pads"], [411, 3, 1, "", "include_inter_plane_coupling"], [412, 3, 1, "", "max_arc_points"], [413, 3, 1, "", "max_mag_delta_s"], [414, 3, 1, "", "max_num_passes"], [415, 3, 1, "", "max_suf_dev"], [416, 3, 1, "", "mesh_freq"], [417, 3, 1, "", "mesh_sizefactor"], [418, 3, 1, "", "min_num_passes"], [419, 3, 1, "", "min_pad_area_to_mesh"], [420, 3, 1, "", "min_plane_area_to_mesh"], [421, 3, 1, "", "min_void_area"], [422, 3, 1, "", "minimum_void_surface"], [423, 3, 1, "", "passivity_tolerance"], [424, 3, 1, "", "percentage_error_z0"], [425, 3, 1, "", "process_padstack_definitions"], [426, 3, 1, "", "radiation_box"], [427, 3, 1, "", "relative_error"], [428, 3, 1, "", "return_current_distribution"], [429, 3, 1, "", "snap_length_threshold"], [430, 3, 1, "", "start_azimuth"], [431, 3, 1, "", "start_freq"], [432, 3, 1, "", "step_freq"], [433, 3, 1, "", "stop_freq"], [434, 3, 1, "", "sweep_interpolating"], [435, 3, 1, "", "sweep_name"], [436, 3, 1, "", "sweep_type"], [437, 3, 1, "", "use_arc_to_chord_error"], [438, 3, 1, "", "use_error_z0"], [439, 3, 1, "", "use_q3d_for_dc"], [440, 3, 1, "", "xtalk_threshold"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch": [[442, 3, 1, "", "add_frequency_sweep"], [443, 2, 1, "", "add_source"], [444, 3, 1, "", "airbox_horizontal_extent"], [445, 3, 1, "", "airbox_negative_vertical_extent"], [446, 3, 1, "", "airbox_positive_vertical_extent"], [447, 3, 1, "", "coax_solder_ball_diameter"], [448, 3, 1, "", "components"], [449, 3, 1, "", "coplanar_instances"], [450, 3, 1, "", "cutout_subdesign_expansion"], [451, 3, 1, "", "cutout_subdesign_round_corner"], [452, 3, 1, "", "cutout_subdesign_type"], [453, 3, 1, "", "dielectric_extent"], [454, 3, 1, "", "do_cutout_subdesign"], [455, 3, 1, "", "do_pingroup"], [456, 3, 1, "", "etching_factor_instances"], [457, 3, 1, "", "generate_excitations"], [458, 3, 1, "", "generate_solder_balls"], [459, 3, 1, "", "honor_user_dielectric"], [460, 3, 1, "", "include_only_selected_nets"], [461, 3, 1, "", "output_aedb"], [462, 3, 1, "", "power_nets"], [463, 3, 1, "", "signal_layer_etching_instances"], [464, 3, 1, "", "signal_layers_properties"], [465, 3, 1, "", "signal_nets"], [466, 3, 1, "", "sources"], [467, 3, 1, "", "trim_reference_size"], [468, 3, 1, "", "truncate_airbox_at_ground"], [469, 3, 1, "", "use_airbox_horizontal_extent_multiple"], [470, 3, 1, "", "use_airbox_negative_vertical_extent_multiple"], [471, 3, 1, "", "use_airbox_positive_vertical_extent_multiple"], [472, 3, 1, "", "use_default_coax_port_radial_extension"], [473, 3, 1, "", "use_default_cutout"], [474, 3, 1, "", "use_dielectric_extent_multiple"], [475, 3, 1, "", "use_pyaedt_cutout"], [476, 3, 1, "", "use_radiation_boundary"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc": [[478, 3, 1, "", "dc_compute_inductance"], [479, 3, 1, "", "dc_contact_radius"], [480, 3, 1, "", "dc_error_energy"], [481, 3, 1, "", "dc_export_thermal_data"], [482, 3, 1, "", "dc_full_report_path"], [483, 3, 1, "", "dc_icepak_temp_file"], [484, 3, 1, "", "dc_import_thermal_data"], [485, 3, 1, "", "dc_max_init_mesh_edge_length"], [486, 3, 1, "", "dc_max_num_pass"], [487, 3, 1, "", "dc_mesh_bondwires"], [488, 3, 1, "", "dc_mesh_vias"], [489, 3, 1, "", "dc_min_num_pass"], [490, 3, 1, "", "dc_min_plane_area_to_mesh"], [491, 3, 1, "", "dc_min_void_area_to_mesh"], [492, 3, 1, "", "dc_num_bondwire_sides"], [493, 3, 1, "", "dc_num_via_sides"], [494, 3, 1, "", "dc_per_pin_res_path"], [495, 3, 1, "", "dc_per_pin_use_pin_format"], [496, 3, 1, "", "dc_percent_local_refinement"], [497, 3, 1, "", "dc_perform_adaptive_refinement"], [498, 3, 1, "", "dc_plot_jv"], [499, 3, 1, "", "dc_refine_bondwires"], [500, 3, 1, "", "dc_refine_vias"], [501, 3, 1, "", "dc_report_config_file"], [502, 3, 1, "", "dc_report_show_Active_devices"], [503, 3, 1, "", "dc_slide_position"], [504, 3, 1, "", "dc_source_terms_to_ground"], [505, 3, 1, "", "dc_use_dc_custom_settings"], [506, 3, 1, "", "dc_use_loop_res_for_per_pin"], [507, 3, 1, "", "dc_via_report_path"]], "pyedb.dotnet.edb_core.edb_data.variables": [[508, 1, 1, "", "Variable"]], "pyedb.dotnet.edb_core.edb_data.variables.Variable": [[509, 2, 1, "", "delete"], [510, 3, 1, "", "description"], [511, 3, 1, "", "is_parameter"], [512, 3, 1, "", "name"], [513, 3, 1, "", "value"], [514, 3, 1, "", "value_object"], [515, 3, 1, "", "value_string"]], "pyedb.dotnet.edb_core.hfss": [[516, 1, 1, "", "EdbHfss"]], "pyedb.dotnet.edb_core.hfss.EdbHfss": [[517, 2, 1, "", "configure_hfss_analysis_setup"], [518, 2, 1, "", "configure_hfss_extents"], [519, 2, 1, "", "create_bundle_wave_port"], [520, 2, 1, "", "create_circuit_port_on_net"], [521, 2, 1, "", "create_circuit_port_on_pin"], [522, 2, 1, "", "create_coax_port_on_component"], [523, 2, 1, "", "create_current_source_on_net"], [524, 2, 1, "", "create_current_source_on_pin"], [525, 2, 1, "", "create_differential_wave_port"], [526, 2, 1, "", "create_edge_port_horizontal"], [527, 2, 1, "", "create_edge_port_on_polygon"], [528, 2, 1, "", "create_edge_port_vertical"], [529, 2, 1, "", "create_hfss_ports_on_padstack"], [530, 2, 1, "", "create_lumped_port_on_net"], [531, 2, 1, "", "create_resistor_on_pin"], [532, 2, 1, "", "create_rlc_boundary_on_pins"], [533, 2, 1, "", "create_vertical_circuit_port_on_clipped_traces"], [534, 2, 1, "", "create_voltage_source_on_net"], [535, 2, 1, "", "create_voltage_source_on_pin"], [536, 2, 1, "", "create_wave_port"], [537, 3, 1, "", "excitations"], [538, 2, 1, "", "get_layout_bounding_box"], [539, 2, 1, "", "get_ports_number"], [540, 2, 1, "", "get_trace_width_for_traces_with_ports"], [541, 3, 1, "", "hfss_extent_info"], [542, 2, 1, "", "layout_defeaturing"], [543, 3, 1, "", "probes"], [544, 2, 1, "", "set_coax_port_attributes"], [545, 3, 1, "", "sources"], [546, 2, 1, "", "trim_component_reference_size"]], "pyedb.dotnet.edb_core.layout_validation": [[547, 1, 1, "", "LayoutValidation"]], "pyedb.dotnet.edb_core.layout_validation.LayoutValidation": [[548, 2, 1, "", "dc_shorts"], [549, 2, 1, "", "disjoint_nets"], [550, 2, 1, "", "fix_self_intersections"], [551, 2, 1, "", "illegal_net_names"], [552, 2, 1, "", "illegal_rlc_values"]], "pyedb.dotnet.edb_core.materials": [[553, 1, 1, "", "Materials"]], "pyedb.dotnet.edb_core.materials.Materials": [[554, 2, 1, "", "add_conductor_material"], [555, 2, 1, "", "add_debye_material"], [556, 2, 1, "", "add_dielectric_material"], [557, 2, 1, "", "add_djordjevicsarkar_dielectric"], [558, 2, 1, "", "add_material"], [559, 2, 1, "", "add_multipole_debye_material"], [560, 2, 1, "", "delete_material"], [561, 2, 1, "", "duplicate"], [562, 2, 1, "", "iterate_materials_in_amat"], [563, 2, 1, "", "load_amat"], [564, 2, 1, "", "load_material"], [565, 2, 1, "", "material_property_to_id"], [566, 3, 1, "", "materials"], [567, 2, 1, "", "read_materials"], [568, 2, 1, "", "read_syslib_material"], [569, 3, 1, "", "syslib"], [570, 2, 1, "", "update_material"]], "pyedb.dotnet.edb_core.modeler": [[571, 1, 1, "", "Modeler"]], "pyedb.dotnet.edb_core.modeler.Modeler": [[572, 2, 1, "", "add_void"], [573, 3, 1, "", "circles"], [574, 2, 1, "", "create_bondwire"], [575, 2, 1, "", "create_circle"], [576, 2, 1, "", "create_pin_group"], [577, 2, 1, "", "create_polygon"], [578, 2, 1, "", "create_rectangle"], [579, 2, 1, "", "create_trace"], [580, 3, 1, "", "db"], [581, 2, 1, "", "defeature_polygon"], [582, 2, 1, "", "delete_primitives"], [583, 2, 1, "", "fix_circle_void_for_clipping"], [584, 2, 1, "", "get_layout_statistics"], [585, 2, 1, "", "get_polygon_bounding_box"], [586, 2, 1, "", "get_polygon_points"], [587, 2, 1, "", "get_polygons_by_layer"], [588, 2, 1, "", "get_primitive"], [589, 2, 1, "", "get_primitive_by_layer_and_point"], [590, 2, 1, "", "get_primitives"], [591, 3, 1, "", "layers"], [592, 2, 1, "", "parametrize_polygon"], [593, 2, 1, "", "parametrize_trace_width"], [594, 3, 1, "", "paths"], [595, 3, 1, "", "polygons"], [596, 3, 1, "", "polygons_by_layer"], [597, 3, 1, "", "primitives"], [598, 3, 1, "", "primitives_by_layer"], [599, 3, 1, "", "primitives_by_net"], [600, 3, 1, "", "rectangles"], [601, 2, 1, "", "shape_to_polygon_data"], [602, 2, 1, "", "unite_polygons_on_layer"]], "pyedb.dotnet.edb_core.nets": [[603, 1, 1, "", "EdbNets"]], "pyedb.dotnet.edb_core.nets.EdbNets": [[604, 2, 1, "", "classify_nets"], [605, 3, 1, "", "components_by_nets"], [606, 3, 1, "", "db"], [607, 2, 1, "", "delete"], [608, 2, 1, "", "eligible_power_nets"], [609, 2, 1, "", "find_or_create_net"], [610, 2, 1, "", "generate_extended_nets"], [611, 2, 1, "", "get_dcconnected_net_list"], [612, 2, 1, "", "get_net_by_name"], [613, 2, 1, "", "get_plot_data"], [614, 2, 1, "", "get_powertree"], [615, 2, 1, "", "is_net_in_component"], [616, 2, 1, "", "is_power_gound_net"], [617, 2, 1, "", "merge_nets_polygons"], [618, 3, 1, "", "netlist"], [619, 3, 1, "", "nets"], [620, 3, 1, "", "nets_by_components"], [621, 2, 1, "", "plot"], [622, 3, 1, "", "power"], [623, 3, 1, "", "signal"]], "pyedb.dotnet.edb_core.padstack": [[624, 1, 1, "", "EdbPadstacks"]], "pyedb.dotnet.edb_core.padstack.EdbPadstacks": [[625, 2, 1, "", "check_and_fix_via_plating"], [626, 2, 1, "", "create"], [627, 2, 1, "", "create_circular_padstack"], [628, 2, 1, "", "create_coax_port"], [629, 3, 1, "", "db"], [630, 3, 1, "", "definitions"], [631, 2, 1, "", "delete_padstack_instances"], [632, 2, 1, "", "duplicate"], [633, 2, 1, "", "find_instance_by_id"], [634, 2, 1, "", "get_instances"], [635, 2, 1, "", "get_pad_parameters"], [636, 2, 1, "", "get_padstack_instance_by_net_name"], [637, 2, 1, "", "get_padstack_instances_intersecting_bounding_box"], [638, 2, 1, "", "get_padstack_instances_rtree_index"], [639, 2, 1, "", "get_pinlist_from_component_and_net"], [640, 2, 1, "", "get_reference_pins"], [641, 2, 1, "", "get_via_instance_from_net"], [642, 3, 1, "", "instances"], [643, 3, 1, "", "instances_by_name"], [644, 2, 1, "", "int_to_geometry_type"], [645, 2, 1, "", "int_to_pad_type"], [646, 2, 1, "", "merge_via_along_lines"], [647, 3, 1, "", "pad_type"], [648, 3, 1, "", "pingroups"], [649, 3, 1, "", "pins"], [650, 2, 1, "", "place"], [651, 2, 1, "", "remove_pads_from_padstack"], [652, 2, 1, "", "set_all_antipad_value"], [653, 2, 1, "", "set_pad_property"], [654, 2, 1, "", "set_solderball"], [655, 3, 1, "", "vias"]], "pyedb.dotnet.edb_core.siwave": [[656, 1, 1, "", "EdbSiwave"]], "pyedb.dotnet.edb_core.siwave.EdbSiwave": [[657, 2, 1, "", "add_siwave_dc_analysis"], [658, 2, 1, "", "add_siwave_syz_analysis"], [659, 2, 1, "", "configure_siw_analysis_setup"], [660, 2, 1, "", "create_circuit_port_on_net"], [661, 2, 1, "", "create_circuit_port_on_pin"], [662, 2, 1, "", "create_circuit_port_on_pin_group"], [663, 2, 1, "", "create_current_source_on_net"], [664, 2, 1, "", "create_current_source_on_pin"], [665, 2, 1, "", "create_current_source_on_pin_group"], [666, 2, 1, "", "create_dc_terminal"], [667, 2, 1, "", "create_exec_file"], [668, 2, 1, "", "create_impedance_crosstalk_scan"], [669, 2, 1, "", "create_pin_group"], [670, 2, 1, "", "create_pin_group_on_net"], [671, 2, 1, "", "create_pin_group_terminal"], [672, 2, 1, "", "create_port_between_pin_and_layer"], [673, 2, 1, "", "create_resistor_on_pin"], [674, 2, 1, "", "create_rlc_component"], [675, 2, 1, "", "create_voltage_probe_on_pin_group"], [676, 2, 1, "", "create_voltage_source_on_net"], [677, 2, 1, "", "create_voltage_source_on_pin"], [678, 2, 1, "", "create_voltage_source_on_pin_group"], [679, 2, 1, "", "create_vrm_module"], [680, 3, 1, "", "excitations"], [681, 3, 1, "", "icepak_component_file"], [682, 3, 1, "", "icepak_use_minimal_comp_defaults"], [683, 3, 1, "", "pin_groups"], [684, 2, 1, "", "place_voltage_probe"], [685, 3, 1, "", "probes"], [686, 3, 1, "", "sources"], [687, 3, 1, "", "voltage_regulator_modules"]], "pyedb.dotnet.edb_core.stackup": [[688, 1, 1, "", "Stackup"]], "pyedb.dotnet.edb_core.stackup.Stackup": [[689, 2, 1, "", "add_document_layer"], [690, 2, 1, "", "add_layer"], [691, 2, 1, "", "add_layer_above"], [692, 2, 1, "", "add_layer_below"], [693, 2, 1, "", "add_layer_bottom"], [694, 2, 1, "", "add_layer_top"], [695, 2, 1, "", "add_outline_layer"], [696, 2, 1, "", "adjust_solder_dielectrics"], [697, 3, 1, "", "all_layers"], [698, 2, 1, "", "create_symmetric_stackup"], [699, 3, 1, "", "dielectric_layers"], [700, 2, 1, "", "export"], [701, 2, 1, "", "flip_design"], [702, 2, 1, "", "get_layout_thickness"], [703, 3, 1, "", "layer_types"], [704, 3, 1, "", "layers"], [705, 3, 1, "", "layers_by_id"], [706, 2, 1, "", "limits"], [707, 2, 1, "", "load"], [708, 3, 1, "", "mode"], [709, 3, 1, "", "non_stackup_layers"], [710, 3, 1, "", "num_layers"], [711, 2, 1, "", "place_a3dcomp_3d_placement"], [712, 2, 1, "", "place_in_layout"], [713, 2, 1, "", "place_in_layout_3d_placement"], [714, 2, 1, "", "place_instance"], [715, 2, 1, "", "plot"], [716, 2, 1, "", "refresh_layer_collection"], [717, 2, 1, "", "remove_layer"], [718, 2, 1, "", "residual_copper_area_per_layer"], [719, 2, 1, "", "set_layer_clone"], [720, 3, 1, "", "signal_layers"], [721, 3, 1, "", "stackup_layers"], [722, 3, 1, "", "thickness"], [723, 2, 1, "", "update_layout"]], "pyedb.siwave": [[724, 1, 1, "", "Siwave"]], "pyedb.siwave.Siwave": [[725, 2, 1, "", "close_project"], [726, 3, 1, "", "current_version"], [727, 2, 1, "", "export_dc_simulation_report"], [728, 2, 1, "", "export_element_data"], [729, 2, 1, "", "export_icepak_project"], [730, 2, 1, "", "export_siwave_report"], [731, 3, 1, "", "icepak"], [732, 3, 1, "", "lock_file"], [733, 2, 1, "", "open_project"], [734, 3, 1, "", "oproject"], [735, 3, 1, "", "project_file"], [736, 3, 1, "", "project_name"], [737, 3, 1, "", "project_path"], [738, 3, 1, "", "pyaedt_dir"], [739, 2, 1, "", "quit_application"], [740, 3, 1, "", "results_directory"], [741, 2, 1, "", "run_dc_simulation"], [742, 2, 1, "", "run_icepak_simulation"], [743, 2, 1, "", "save_project"], [744, 3, 1, "", "src_dir"], [745, 3, 1, "", "version_keys"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "terms": {"": [13, 15, 53, 62, 119, 264, 300, 353, 413, 592, 639, 727, 730, 747, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 765, 766, 770, 774, 775], "0": [6, 8, 22, 59, 74, 75, 99, 109, 110, 124, 180, 181, 191, 213, 220, 222, 228, 254, 255, 259, 336, 338, 339, 348, 349, 364, 382, 384, 385, 386, 387, 480, 496, 503, 504, 519, 521, 523, 524, 525, 527, 528, 531, 532, 534, 535, 536, 549, 559, 581, 585, 586, 608, 611, 625, 626, 635, 640, 644, 645, 646, 650, 651, 653, 654, 658, 661, 663, 664, 665, 672, 673, 674, 676, 677, 678, 679, 708, 711, 712, 713, 714, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 780, 782, 783, 786, 787, 794, 795, 801, 804, 806, 808, 809], "00": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "000": [753, 768], "000000": 759, "0000000000000001e": 752, "0000001": 809, "000017": 771, "00002": 771, "000035": 771, "00005": 771, "000088": 771, "0001": [22, 654], "00010": 771, "000100": 771, "0002": 809, "0005": 808, "001": [110, 382, 581, 611, 678, 782, 808], "001000": 771, "0015": 750, "002": 760, "003": 752, "005": [228, 640, 646, 753, 768], "006": 768, "00m": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766], "01": [8, 382, 754, 783, 809], "015": 768, "015622377395629883": 753, "015625953674316406": 749, "016139999279999998": 756, "017mm": [754, 763], "018999997560000002": 759, "018999997560000006": 759, "01899999756000001": 759, "018999997560000013": 759, "018999997560000016": 759, "01ghz": 765, "01mm": [519, 525, 528, 536], "02": [382, 750, 753, 768, 770, 808], "020": 768, "025": 559, "026": 559, "027": 559, "028": 559, "029": 559, "030": 559, "031": [762, 764], "031249284744262695": 751, "03255000329": 756, "032913065429500635": 766, "03304936212434437": 766, "03325121473069015": 766, "03333596078699098": 766, "03335982576863652": 766, "033708330282207793": 766, "034204733727292984": 766, "034713399917353435": 766, "03503044372649857": 766, "03504474631880416": 766, "04": 808, "04183735396100174": 766, "04185485402368393": 766, "046828269958496094": 773, "046877145767211914": 756, "04830834906256023": 766, "048318457999324806": 766, "04833361583642983": 766, "0483566751331029": 766, "04839217710290317": 766, "048427348957554184": 766, "048476096302053164": 766, "04853182672022683": 766, "048586150580908885": 766, "048672445716054995": 766, "04868479628064163": 766, "04883555655902538": 766, "04900629973182032": 766, "04915820200547062": 766, "04935457314629638": 766, "04953634065667003": 766, "05": [771, 786, 808], "050289214965552706": 766, "05046879970844227": 766, "05067176818706848": 766, "050691511158220036": 766, "050769291930717185": 766, "050887072320460844": 766, "05114842692016208": 766, "05120289468443713": 766, "05170565396058174": 766, "051806832872544235": 766, "05419999847": 756, "05e": 786, "05mm": [749, 750, 753, 754, 758, 763], "06": 387, "062": 751, "06250524520874023": 752, "0639458794927306": 766, "0641094442946288": 766, "0643703064923304": 766, "06441781932138024": 766, "06442086996903659": 766, "06478179608814026": 766, "0648000049584815": 766, "06491330967510935": 766, "06505647431452988": 766, "06520837658818007": 766, "06643486577187402": 766, "06654755746655197": 766, "06730942192276895": 766, "06733197520160766": 766, "06738594842571934": 766, "06743856277022901": 766, "06754969080651728": 766, "06762130958381865": 766, "06764934763029656": 766, "06767288408064792": 766, "06767415242192924": 766, "06776080406509359": 766, "06797637324983577": 766, "06820646420842003": 766, "06845950802472248": 766, "06872046150414503": 766, "06875000112": 756, "0690144173068744": 766, "0692563340940017": 766, "06950305012843623": 766, "06974350703807211": 766, "06999824426118566": 766, "07": 752, "07019126140982673": 766, "07036200458262161": 766, "070486667556885": 766, "07061787855828856": 766, "07071397723210866": 766, "0710178513978896": 766, "07107143900497076": 766, "07111573906668872": 766, "07112987171313323": 766, "07113500016000002": 766, "078": [749, 750, 758], "08580812308064588": 766, "08581990776977562": 766, "08602704906993228": 766, "08636336408365564": 766, "08658597244333009": 766, "08667866067063877": 766, "08676294623404525": 766, "08679664168378841": 766, "08720212328418347": 766, "08735511697746182": 766, "0877047359472929": 766, "08788643646933333": 766, "0880208395789273": 766, "0882134021373534": 766, "08878659946264658": 766, "08924732876262124": 766, "08929526565270708": 766, "08937199173688463": 766, "0895555258600598": 766, "08970628997324057": 766, "0897676295798525": 766, "08978637017721422": 766, "08979166909779229": 766, "09": 674, "09016403859300909": 766, "09045063725565565": 766, "09048926753190141": 766, "09048967107082366": 766, "09058683166450263": 766, "09058693395049935": 766, "094": 749, "0_bom": 752, "0deg": [578, 750, 764], "0ghz": 754, "0h": [749, 750, 751, 752, 753, 756, 773], "0m": [749, 750, 751, 752, 753, 755, 756, 760, 764, 766, 773], "0mm": [519, 525, 536, 578, 764, 766, 808], "0sec": [749, 750, 751, 752, 753, 755, 756, 760, 764, 766, 773], "0x0000020b0193d2c0": 763, "0x00000328eede7d00": 754, "0x190d0ebb370": 773, "0x1b98a78b330": 758, "0x1b98a92e2a0": 758, "0x1b98d79ef80": 758, "0x1d3cde66140": 756, "0x1d3d5170900": 756, "0x1e209b3f200": 751, "0x1e20a10afb0": 751, "0x1e20a10e0f0": 751, "0x1e20a10fef0": 751, "0x1e20a113af0": 751, "0x1e20a2670b0": 751, "0x1e5374af730": 770, "0x1e5374b0130": 770, "0x1e9ce6d1480": 771, "0x1f0c5294940": 769, "0x1f0c5295600": 769, "0x1f0c52964c0": 769, "0x1f0c5296f40": 769, "0x1f0c5297880": 769, "0x1f0c5297e80": 769, "0x1f0c52981c0": 769, "0x1f0c5298380": 769, "0x1f0c5299140": 769, "0x1f0c52993c0": 769, "0x1f0c5299400": 769, "0x1f0c5299500": 769, "0x1f0c5299c00": 769, "0x1f0c529a600": 769, "0x1f0c529aac0": 769, "0x1f0c529acc0": 769, "0x1f0c529b240": 769, "0x1f0c52a6a00": 769, "0x1f0c52a6e80": 769, "0x1f0c52a80c0": 769, "0x1f0c52a82c0": 769, "0x1f0c52a9580": 769, "0x1f0c52b1400": 769, "0x1f0c52b3b40": 769, "0x1f0c52b3d40": 769, "0x1f0c52b3fc0": 769, "0x205992f07a0": 749, "0x20599480e10": 749, "0x2059e12f200": 749, "0x2059e3ce790": 749, "0x207dcdbe0d0": 764, "0x207e0579cc0": 764, "0x20b01aa87c0": 763, "0x20b02028740": 763, "0x216595182d0": 753, "0x216599adbb0": 753, "0x21659b941b0": 753, "0x2165cbde6f0": 753, "0x2165cbef0b0": 753, "0x2165cbf15f0": 753, "0x2165e72b280": 753, "0x21c2244d470": 768, "0x21c2244d6b0": 768, "0x21c2244d730": 768, "0x21c2244d8f0": 768, "0x21c2244da70": 768, "0x21c2244dcb0": 768, "0x21c2244dd30": 768, "0x25cc2ea45f0": 768, "0x289bf8877c0": 750, "0x289c0556200": 750, "0x289c06e36f0": 750, "0x289c07583f0": 750, "0x289c500e740": 750, "0x289c5346060": 750, "0x2d3aa43f950": 765, "0x328ee767ff0": 754, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 59, 74, 89, 98, 99, 259, 338, 339, 348, 364, 382, 384, 385, 386, 387, 503, 504, 519, 521, 523, 524, 525, 531, 535, 559, 579, 610, 658, 661, 663, 664, 665, 673, 674, 677, 678, 679, 708, 712, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 778, 780, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 804, 806, 807, 809, 811], "10": [610, 658, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 779, 785, 794, 809], "100": [124, 382, 753, 765], "1000": [176, 621, 758, 759, 760, 762, 763, 765, 766, 809], "1000000": [658, 675], "1000000000": 658, "1001": [749, 751, 764], "100e": 758, "100hz": [8, 752], "100mhz": 753, "100um": [698, 749, 750, 804], "1010": 755, "104mm": 769, "1075": [758, 759, 760, 761, 762, 763, 765, 766], "10e": [749, 750, 754, 758, 795, 804], "10e6": 782, "10ghz": [382, 756, 807, 809], "10mhz": [8, 382, 752, 755, 807], "10mm": [753, 764, 795], "10nm": 765, "10um": 799, "11": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 787, 809], "110": [758, 759, 760, 761, 762, 763, 765, 766], "111": 214, "115": [758, 759, 760, 761, 762, 763, 765, 766], "1150": 768, "1189763028": 762, "11nf": 752, "11sec": [752, 755, 756, 760, 773], "12": [108, 749, 750, 751, 752, 753, 754, 756, 759, 763, 764, 768, 769, 770, 771, 773, 786, 809], "120": [747, 775], "1240618542": 766, "12699999746": 759, "12749999646000001": 759, "12799999800000003": 759, "128": [758, 759, 760, 761, 762, 763, 765, 766], "12849999700000003": 759, "12899999854000002": 759, "12949999754000002": 759, "12999999654000002": 759, "12sec": 766, "13": [749, 750, 751, 752, 753, 754, 756, 759, 763, 764, 768, 769, 771, 773, 786, 787], "13049999808": 759, "13099999708": 759, "1310": 773, "13149999608000001": 759, "1328": [758, 759, 760, 762, 763, 765, 766], "1345": [758, 759, 763], "1367": 766, "13e": [527, 795], "13mm": 754, "14": [749, 750, 751, 752, 753, 754, 756, 758, 759, 763, 764, 769, 771, 773], "141": 752, "144": [749, 750, 751, 752, 758, 759, 760, 762, 764, 766], "1440": 764, "1442418163": 758, "15": [191, 749, 750, 751, 752, 753, 754, 755, 756, 759, 763, 764, 769, 771, 773], "1500": 715, "1537379181": 762, "15deg": 809, "15e": 758, "15mm": [751, 753, 754, 763], "15um": 804, "16": [222, 749, 750, 751, 752, 753, 754, 755, 756, 759, 762, 763, 764, 769, 771, 773], "1617624986": 758, "1658113231": 766, "16_bottom": [759, 766, 770, 771, 796, 809], "17": [527, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 795], "179": [758, 759, 760, 761, 762, 763, 765, 766], "17um": 698, "18": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 771, 773], "180": [753, 763], "1822": 760, "1840": [759, 760, 766], "19": [228, 527, 640, 749, 750, 751, 753, 759, 764, 771, 773, 795], "1900": 768, "1907": 756, "1909": [758, 759, 760, 761, 762, 763, 764, 765, 766], "1926": [760, 766], "1929": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "195": [758, 759, 760, 761, 762, 763, 765, 766], "196": [758, 759, 760, 761, 762, 763, 764, 765, 766], "1981": 766, "1984": 752, "1_comp_definit": 752, "1_top": [759, 762, 769, 770, 771, 801, 804, 809], "1a": 679, "1cm": 783, "1e": [108, 382, 387, 674, 749, 750, 756, 758, 787, 801, 808, 809], "1e3": [759, 808], "1e6": [658, 770, 773], "1e7": 801, "1e9": [559, 658, 770, 773], "1ghz": [753, 754, 756, 765, 770, 773, 809], "1khz": [753, 756, 809], "1mhz": [770, 773], "1mm": [382, 711, 713, 714, 751, 753, 754, 758, 763, 764, 771, 778, 795, 804, 811], "1sec": [752, 755, 756, 760, 766, 773], "1um": 809, "1v0": [759, 766, 773, 786, 787, 792], "2": [59, 69, 74, 76, 89, 99, 105, 127, 140, 154, 162, 178, 190, 191, 194, 213, 222, 246, 259, 336, 349, 364, 382, 385, 436, 480, 496, 503, 504, 527, 559, 571, 586, 603, 624, 625, 656, 657, 658, 701, 708, 711, 712, 713, 714, 718, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 787, 795, 809], "20": [496, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 809], "200": 809, "2000": [176, 621, 715, 766, 809], "2000x1000": [749, 750, 752], "200um": [749, 750, 754, 799, 801, 804], "2021": [89, 127, 140, 154, 162, 178, 190, 213, 222, 336, 349, 571, 603, 624, 656, 657, 701, 711, 712, 713, 714, 718], "2022": [755, 777, 779], "2023": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 779], "2024": [7, 338, 339, 348, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 778, 779, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "205": [758, 759, 760, 761, 762, 763, 765, 766], "2075340592": 764, "20e9": 782, "20ghz": [749, 750, 755], "20ghz_to_50ghz": 750, "20mm": [753, 764], "20um": [698, 801], "21": [749, 750, 751, 753, 759, 764, 771], "2104": 751, "211": 765, "214": 765, "2162": [760, 766], "22": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 771, 773, 795], "222": 765, "2222": [760, 766], "223": 765, "2266": [760, 766], "22pf": 111, "23": [749, 750, 751, 759, 771, 795], "2300580511": 762, "233": 765, "2349": [760, 766], "236": 765, "2370": [760, 766], "2379": [760, 766], "2381": [760, 766], "2382": [760, 766], "2387": [760, 766], "24": [749, 750, 751, 759, 771], "2410814316": 763, "246": [758, 763], "25": [749, 750, 751, 756, 759, 771, 795], "250um": 808, "251": [759, 760, 761, 762, 766], "2517840524": 766, "253": [758, 759, 760, 761, 762, 763, 765, 766], "255": [749, 751, 764], "2581": 760, "25mm": 764, "26": [749, 750, 751, 759], "265": 773, "267": 764, "27": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 773], "275um": 751, "28": [750, 751, 759, 765, 768], "2884": [758, 762, 763, 764, 765, 771], "29": [750, 773], "293": [758, 759, 760, 761, 762, 763, 765, 766], "294": 768, "2948": 752, "2951509181": 758, "2999416059": 760, "29e": [749, 750], "29mm": 795, "2d": [176, 613, 621], "2e": [749, 750, 753, 754, 801], "2e9": 559, "2f": [758, 759, 760, 762, 763, 765, 766], "2mm": [519, 525, 711, 713, 714, 751, 753, 754, 763, 809], "2v5": 759, "2v_avddl": 759, "2v_avdll_pll": 759, "2v_dvddl": 759, "3": [74, 99, 110, 228, 364, 426, 519, 525, 527, 528, 534, 535, 536, 559, 608, 640, 646, 668, 676, 677, 715, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 779, 795, 801, 804, 808, 809], "30": [382, 753, 763, 768], "300um": [626, 627], "301": 794, "302": 785, "3036": 755, "3075": [758, 759, 760, 761, 762, 763, 765, 766], "30um": [804, 808], "3130": [758, 759, 760, 761, 762, 763, 765, 766], "318": [758, 759, 760, 761, 762, 763, 765, 766], "32": [753, 758, 759, 760, 761, 762, 763, 765, 766, 769], "3204": 773, "325": 753, "326": 753, "33": [382, 752, 759, 769, 809], "3334": [758, 759, 760, 761, 762, 763, 765, 766], "34": [758, 759, 760, 761, 762, 763, 764, 765, 766], "346": [758, 759, 760, 761, 762, 763, 765, 766], "348": 759, "35": [753, 759, 801], "350um": 804, "3517": [758, 759, 760, 761, 762, 763, 765, 766], "3577": [758, 759, 760, 761, 762, 763, 765, 766], "3588321624": [759, 760, 762, 765], "359427503": 760, "35e": 758, "35um": [690, 751], "36": 759, "3601094185": 763, "362": [758, 759, 760, 761, 762, 763, 765, 766], "3691860644": 760, "37": 759, "372": [760, 766], "379806575": 758, "37mm": 769, "38": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "3814241137": 759, "39": [749, 750, 751, 752, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771], "3_10": 779, "3d": [10, 68, 69, 105, 191, 382, 711, 713, 714, 751, 752, 753, 754, 755, 756, 761, 764, 774], "3dlayout": 628, "3e": [749, 750], "3e11": 753, "3e9": 559, "3ghz": 764, "3mm": [751, 753, 754, 761, 763, 764, 770, 811], "3rd": 754, "3sec": 760, "3v": 679, "3v_avddh": 759, "4": [59, 74, 259, 364, 403, 559, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 801], "40": [746, 768, 785], "400um": [626, 627, 804], "40e": 801, "40ghz": 382, "40um": 801, "424968329": [649, 655], "425": 760, "4279114658": 766, "4321mm": 760, "437": [758, 759, 760, 761, 762, 763, 765, 766], "438": 756, "442901903": 763, "444": 752, "446": 755, "449": [758, 759, 760, 761, 762, 763, 765, 766], "453": 766, "45e": 758, "460": 750, "4624": [753, 756], "464": 760, "47": 768, "470": 752, "472": 755, "474": 766, "485": 762, "4e": [749, 750], "4mm": [382, 751, 764, 808], "4sec": [752, 755, 756, 760, 766, 773], "5": [74, 519, 525, 528, 536, 559, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 809], "50": [75, 108, 520, 521, 524, 526, 527, 528, 531, 535, 536, 544, 660, 661, 662, 664, 672, 673, 677, 749, 750, 792], "50000000": 384, "500um": 804, "5068": 754, "509": 759, "50ghz": 750, "50mm": [519, 525, 536], "50um": 698, "52335": 749, "52737": 750, "529": [759, 760, 761, 762, 765, 766], "53107": 751, "532": 750, "534": [758, 759, 760, 761, 762, 763, 765, 766], "53583": 752, "53673": 753, "539": [759, 760, 761, 762, 765, 766], "53968": 754, "54": 760, "54057": 755, "54147": 756, "542": [759, 760, 761, 762, 765, 766], "545": [758, 759, 760, 761, 762, 763, 765, 766], "54514": 764, "54877": 773, "549": [758, 759, 760, 761, 762, 763, 765, 766], "55": [749, 750, 751, 752, 753, 756, 773], "55mm": 795, "56": 760, "5716": 749, "57m": [752, 755], "58": 760, "58000000": 768, "58m": 754, "5e": [228, 640, 646, 749, 750, 758, 769, 771], "5e7": 382, "5e9": [559, 753], "5ghz": [753, 754, 765, 770, 809], "5mm": [382, 646, 749, 750, 751, 753, 754, 763, 764, 766], "5sec": [755, 760, 773], "5um": 809, "5v": 759, "6": [3, 345, 382, 530, 538, 559, 646, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 801, 809], "600um": [626, 627], "603": [758, 759, 760, 761, 762, 763, 764, 765, 766], "60db": 440, "61": 760, "621440271": 759, "63": 760, "63e": [527, 795], "64": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "643": 765, "645": 765, "65": 760, "65e": [527, 795], "65mm": 804, "65um": 765, "665mm": 804, "67": [760, 787], "678": 760, "680x175": 759, "681": 760, "686": 760, "687": 760, "69": 760, "6e9": 559, "6ghz": [8, 752], "6mm": 751, "6sec": [752, 756, 766], "7": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "700um": 804, "702": 773, "725": [758, 759, 760, 761, 762, 763, 765, 766], "731": [758, 759, 760, 761, 762, 763, 765, 766], "732": [758, 759, 760, 761, 762, 763, 765, 766], "733": [758, 759, 760, 761, 762, 763, 765, 766], "739": [758, 759, 760, 761, 762, 763, 765, 766], "74": [758, 759, 760, 761, 762, 763, 765, 766], "75": [191, 759], "759": [758, 759, 760, 762, 766], "77": 768, "778": [758, 759, 760, 761, 762, 763, 765, 766], "78e": 786, "7d4cc5a": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "7e": 795, "7mm": [751, 754, 763], "8": [382, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 795, 801, 809], "80": [758, 759, 760, 761, 762, 763, 764, 765, 766], "800um": 804, "81": 765, "824": [758, 759, 760, 761, 762, 763, 765, 766], "84": 765, "841830643": 765, "843": [758, 759, 760, 762, 766], "844": 759, "858674284": 761, "86": [758, 759, 760, 761, 762, 763, 764, 765, 766], "863075063": 762, "875": 760, "891": [762, 766], "899852019": 759, "8_n": 759, "8mm": 750, "8v_dvddh": 759, "9": [108, 110, 749, 750, 751, 752, 753, 754, 755, 756, 759, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777], "90": 751, "928": 760, "968": 756, "978": 752, "9e": [749, 750], "A": [749, 750, 758, 761, 765, 777], "AND": [749, 761], "AS": [749, 761], "At": 783, "BE": [749, 761], "BUT": [749, 761], "FOR": [749, 761], "For": [75, 111, 382, 527, 586, 747, 753, 755, 773, 774, 775, 777, 779], "IN": [749, 761], "IT": 779, "If": [68, 74, 75, 78, 110, 170, 176, 191, 222, 241, 254, 255, 382, 548, 549, 550, 586, 593, 613, 621, 628, 637, 638, 641, 646, 651, 653, 657, 682, 700, 707, 711, 712, 713, 714, 715, 746, 748, 750, 754, 755, 758, 763, 773, 779], "In": [254, 255, 382, 613, 747, 751, 752, 754, 756, 757, 762, 765, 769, 770, 775, 777, 779], "It": [1, 7, 76, 110, 127, 140, 154, 162, 222, 293, 332, 336, 349, 382, 460, 520, 608, 660, 715, 747, 750, 754, 755, 765, 774, 775, 779], "Its": 774, "NO": [749, 761], "NOT": [749, 761, 773], "No": [59, 259, 654, 752], "Not": 609, "OF": [749, 761], "OR": [749, 761], "On": [761, 777, 779], "One": [607, 750], "Or": 75, "THE": [749, 761], "TO": [749, 761], "The": [0, 3, 4, 12, 68, 69, 73, 74, 75, 78, 81, 83, 90, 92, 95, 98, 99, 107, 108, 109, 111, 119, 128, 141, 155, 191, 221, 222, 228, 231, 254, 255, 351, 382, 385, 397, 404, 413, 414, 416, 418, 423, 427, 432, 433, 435, 436, 438, 441, 450, 467, 473, 477, 479, 480, 490, 491, 494, 496, 501, 503, 507, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 538, 575, 577, 578, 579, 581, 586, 592, 602, 609, 610, 611, 625, 626, 627, 628, 634, 636, 639, 640, 641, 646, 650, 653, 658, 660, 663, 664, 666, 667, 670, 672, 673, 676, 677, 682, 689, 690, 691, 692, 693, 694, 698, 700, 702, 706, 707, 711, 712, 713, 714, 715, 724, 725, 727, 728, 730, 733, 743, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 772, 773, 774, 775, 777, 778, 779, 780, 793], "There": [750, 751, 755], "These": [0, 2, 4, 5, 6, 8, 9, 105, 382, 747, 775], "To": [86, 214, 382, 527, 747, 775, 777, 778, 779], "WITH": [749, 761], "Will": [382, 460], "_": [628, 750, 756, 766, 796], "__init__": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766], "__version__": [758, 759, 760, 761, 762, 763, 765, 766], "_active_cel": [759, 760, 761, 762, 765, 766], "_arg": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_callback": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_clr": 766, "_context": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_create_cutout_multithread": [760, 766], "_definit": 773, "_dw": 766, "_global": [758, 759, 760, 761, 762, 763, 765, 766], "_hierarchi": 89, "_log_on_handl": [758, 759, 760, 761, 762, 763, 765, 766], "_logger": [758, 759, 760, 761, 762, 763, 765, 766], "_pedb": [74, 97, 213, 759, 760, 766], "_pseudo_sync_runn": [758, 759, 760, 761, 762, 763, 765, 766], "_renam": 761, "_run": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_run_cel": [758, 759, 760, 761, 762, 763, 765, 766], "_run_cod": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_run_module_as_main": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_run_onc": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_test": 761, "_tool": [758, 759, 760, 761, 762, 763, 764, 765, 766], "_work": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "a0_n": [760, 811], "a0_n_r": 811, "a1": [72, 80, 82, 107, 109], "a12": [89, 712], "a14": [89, 712], "a1new": 72, "a2": 755, "a27": [794, 796], "a28": 794, "a3": 755, "a3dcomp": [711, 753], "a3dcomp_path": 711, "a5": 755, "a6": 755, "aaa111": 0, "ab28": 759, "ab29": 759, "about": [759, 776, 781, 798], "abov": [691, 749, 750, 761], "absolut": [392, 444, 445, 446, 453, 461, 469, 470, 471, 474, 732, 735, 737, 738, 740, 744, 809], "ac": [383, 397, 658, 667], "ac_set": [8, 752, 754], "accept": 546, "access": [7, 64, 262, 298, 508, 516, 553, 571, 603, 624, 656, 688, 746, 749, 752, 758, 759, 760, 761, 762, 763, 765, 766, 777, 779], "accord": [707, 779], "account": 240, "accur": 549, "accuraci": [382, 503, 530, 658, 750, 770, 773, 809], "accuracy_level": 658, "across": [610, 774], "act": 754, "action": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "activ": [25, 74, 208, 294, 303, 363, 378, 380, 382, 389, 406, 407, 411, 425, 428, 429, 437, 442, 457, 459, 463, 468, 476, 478, 481, 484, 487, 488, 497, 498, 499, 500, 502, 505, 546, 679, 682, 724, 747, 749, 751, 752, 753, 754, 755, 756, 773, 775], "active_cel": [712, 713], "activedsoconfigur": [749, 750, 751, 752, 753, 756, 773], "actual": [191, 209, 364, 366, 577, 657, 780], "ad": [128, 141, 155, 266, 302, 442, 646, 696, 707, 713, 714, 750, 751, 752, 754, 755, 765, 766, 811], "ad11": 759, "ad28": 759, "ad29": 759, "adapt": [382, 398, 399, 400, 414, 416, 418, 486, 489, 497, 750, 753, 770, 809], "adapt_typ": 809, "adaptive_sampl": 809, "adaptive_set": 809, "adaptivefrequ": [749, 764], "adaptivefrequencydata": [749, 751], "adaptiveset": [749, 751], "adaptivetyp": 400, "add": [69, 128, 141, 155, 384, 385, 386, 387, 434, 443, 554, 555, 556, 557, 558, 559, 563, 572, 626, 657, 658, 667, 689, 691, 692, 693, 694, 695, 747, 750, 753, 765, 771, 775, 800, 807, 808, 809], "add_ac": 667, "add_adaptive_frequency_data": 809, "add_at_elev": 690, "add_compon": 765, "add_current_sourc": 382, "add_dc": 667, "add_dc_ground_source_term": 382, "add_default_lay": 626, "add_design_vari": [753, 754, 763, 811], "add_dielectric_materi": 753, "add_ext": 765, "add_frequency_sweep": [753, 756, 808, 809], "add_lay": [749, 750, 751, 753, 758, 799, 801, 804, 808], "add_length_mesh_oper": [753, 809], "add_materi": 801, "add_n_port_model": 62, "add_on_bottom": 690, "add_on_top": 690, "add_pin": 765, "add_port": 765, "add_project_vari": [751, 764, 811], "add_setup": 765, "add_siwave_ac_analysi": 657, "add_siwave_dc_analysi": [759, 807], "add_siwave_dc_analysis2": 657, "add_siwave_syz_analysi": 807, "add_skin_depth_mesh_oper": 809, "add_source_terminal_to_ground": 759, "add_sweep": [750, 765], "add_syz": 667, "add_void": [753, 764, 766], "add_voltage_sourc": [382, 384, 386], "addit": [748, 752, 755, 756, 760, 766, 773, 777], "addition": 774, "address": [382, 774], "adjust": [544, 696], "administr": 779, "advanc": [778, 809], "advanced_mesh_set": 809, "advis": 382, "ae23": 759, "aedb": [1, 78, 262, 298, 382, 461, 649, 655, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 798, 801, 802, 803, 806, 807, 809, 811], "aedb_path": [749, 750, 751, 753, 754, 758, 763, 764], "aedt": [86, 178, 190, 213, 214, 241, 254, 255, 576, 724, 726, 745, 747, 751, 753, 754, 756, 758, 759, 761, 773, 774, 775, 776, 777, 778, 779], "aedt_fil": 759, "aedt_path": 764, "aedt_vers": [752, 764, 768, 769, 770, 771, 773], "aedtresult": 740, "aedtroot": 777, "af13": 759, "af23": 759, "af28": 759, "af29": 759, "affili": [749, 761], "after": [382, 394, 586, 711, 716, 749, 750, 754, 755, 759, 765, 773, 777], "ag19": 759, "ah16": 759, "ah28": 759, "ah29": 759, "air": [382, 444, 445, 446, 468, 469, 749, 750, 799, 804, 808], "air_box_horizontal_ext": 753, "air_box_negative_vertical_ext": 753, "air_box_positive_vertical_ext": 753, "air_lin": 690, "air_vertical_negative_pad": 764, "air_vertical_positive_pad": 764, "airbox": [382, 444, 445, 446, 470, 471], "airbox_horizontal_ext": [382, 808], "airbox_negative_vertical_ext": [382, 808], "airbox_positive_vertical_ext": [382, 808], "airlin": 771, "aj6": 75, "ak28": 759, "ak29": 759, "algorithm": [110, 549, 550, 608], "align": [526, 713, 714, 759], "all": [6, 7, 75, 81, 95, 102, 110, 170, 176, 191, 208, 226, 238, 360, 382, 397, 441, 455, 460, 477, 520, 537, 543, 545, 546, 547, 548, 549, 550, 593, 602, 605, 609, 610, 613, 617, 620, 621, 637, 638, 641, 642, 643, 646, 648, 649, 651, 652, 653, 655, 660, 680, 683, 685, 686, 687, 716, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 759, 762, 765, 774, 775, 777, 801, 805, 806], "all_net": 756, "allow": [382, 750, 752, 754, 763, 774, 777, 779, 780, 789], "along": [646, 751, 753], "alreadi": [74, 628, 777], "also": [382, 460, 527, 711, 747, 749, 759, 774, 775, 777, 778, 781], "altern": [92, 658, 771], "although": 803, "altr": 759, "am": [747, 775], "am17": 769, "am28": 759, "am29": 759, "am4": 75, "am7": 75, "amat": [562, 563, 567, 568, 749, 750], "amat_fil": [562, 563, 567], "amd64": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "among": [252, 260, 376, 379], "amper": [384, 387], "amplitud": [384, 387], "an": [1, 16, 28, 31, 50, 63, 72, 76, 92, 108, 124, 180, 181, 345, 365, 382, 527, 529, 530, 533, 562, 563, 567, 577, 625, 641, 644, 645, 652, 667, 695, 712, 713, 729, 742, 747, 749, 750, 752, 753, 754, 756, 759, 761, 765, 774, 775, 776, 777, 779, 782, 784, 788, 793, 797, 802, 803, 810], "an26": 755, "analysi": [7, 397, 441, 477, 517, 657, 658, 659, 752, 753, 770, 810], "analyz": [668, 749, 750, 751, 753, 756, 764], "angl": [191, 401, 711, 712, 713, 714], "ani": [1, 232, 271, 308, 382, 527, 549, 565, 749, 761, 774, 776, 777, 779], "anoth": [364, 366, 592, 696, 712, 713, 714, 758, 759, 760, 761, 762, 763, 765, 766], "ansi": [129, 142, 163, 164, 244, 262, 298, 711, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 760, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 775, 777, 778, 779, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "ansoft": [129, 142, 163, 164, 244, 262, 298, 749, 750, 751, 752, 753, 754, 755, 756, 763, 764, 773], "ansys_fr4": 753, "ansys_hsd": 760, "ansys_vers": [782, 783, 793, 795, 796, 806, 809], "ansys_via": 753, "ansysem": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 773, 777, 779], "ansysem_root222": 777, "antenna": 750, "anti": [625, 652, 805, 806], "anti_pad_diam": 751, "anti_pad_x_s": [626, 804], "anti_pad_y_s": [626, 804], "antipad": [626, 627, 653, 755], "antipad_param": 653, "antipad_polygon": 626, "antipad_rot": 653, "antipad_shap": [626, 653, 751, 804], "antipad_x_offset": 653, "antipad_y_offset": 653, "antipaddiam": [4, 626, 627, 749, 750, 751, 754, 763], "antipads_always_on": 753, "ap25": 755, "ap26": 755, "ap28": 759, "ap29": 759, "api": [0, 2, 3, 4, 7, 130, 131, 133, 134, 135, 136, 137, 143, 146, 147, 148, 149, 156, 158, 159, 160, 166, 167, 169, 172, 173, 174, 382, 755, 757, 764, 767, 774, 778, 779, 780, 781], "api_object": 127, "app": [168, 336, 610, 746, 758, 759, 760, 761, 762, 763, 765, 766, 778], "appdata": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773], "appear": [747, 775], "appedb": [338, 339, 348], "append": [751, 756, 760, 766, 768], "appli": [22, 228, 382, 424, 454, 458, 461, 520, 583, 589, 637, 638, 640, 660, 711, 712, 713, 714, 751, 752, 755, 756, 773], "applic": [0, 3, 4, 109, 229, 382, 626, 739, 750, 753, 758, 759, 760, 761, 762, 763, 765, 766, 774], "apply_fil": [768, 771], "apply_to_al": 773, "approach": 749, "approx": 750, "approxim": [222, 809], "apr": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "ar": [0, 2, 4, 5, 6, 8, 9, 69, 75, 76, 81, 95, 105, 107, 109, 111, 202, 270, 307, 382, 396, 436, 444, 445, 446, 453, 455, 457, 460, 469, 470, 471, 474, 526, 528, 533, 578, 579, 583, 601, 602, 610, 611, 613, 621, 625, 626, 637, 638, 646, 653, 658, 668, 682, 689, 690, 691, 692, 693, 694, 700, 707, 711, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 762, 765, 768, 769, 770, 773, 774, 775, 777, 779, 783], "ar25": 755, "arang": [753, 763, 764], "arc": [6, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 358, 365, 372, 377, 401, 402, 405, 410, 412, 421, 425, 428, 437, 577, 586], "arc_angl": 809, "arc_height": 339, "arc_seg": 345, "arc_to_chord_error": 809, "architectur": 774, "area": [222, 419, 420, 421, 490, 491, 549, 608, 718, 777, 779], "arg": [758, 759, 760, 761, 762, 763, 765, 766], "argument": [626, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 777], "aris": [749, 761], "around": [711, 753, 774, 777], "arrai": 750, "array_antenna": [749, 750], "array_length": [749, 750], "array_width": [749, 750], "ascii": 382, "asi": [758, 759, 760, 761, 762, 763, 765, 766], "aspect": [191, 809], "assembli": 690, "asset": 777, "assign": [12, 13, 14, 23, 37, 40, 53, 58, 73, 75, 107, 111, 221, 293, 332, 382, 385, 520, 522, 523, 527, 530, 534, 575, 604, 625, 652, 660, 663, 676, 751, 752, 754, 756, 764, 766, 774], "assign_radiation_boundary_to_object": 750, "associ": [59, 168, 259, 382, 456, 610, 749, 752, 761], "ast": 613, "async_": [758, 759, 760, 761, 762, 763, 765, 766], "async_help": [758, 759, 760, 761, 762, 763, 765, 766], "asyncio": [758, 759, 760, 761, 762, 763, 764, 765, 766], "asyncio_loop": [758, 759, 760, 761, 762, 763, 765, 766], "at_bounding_box": 530, "attempt": [747, 775, 780], "attent": 775, "attribut": [11, 64, 112, 117, 127, 140, 154, 162, 178, 190, 213, 262, 298, 336, 349, 382, 397, 441, 477, 508, 516, 544, 553, 570, 571, 603, 624, 656, 688, 724], "author": [749, 761], "auto": [74, 271, 308, 447], "auto_identify_sign": 756, "auto_parametrize_design": 755, "auto_reference_s": 109, "autom": [382, 774], "automat": [75, 109, 221, 522, 527, 747, 754, 755, 756, 763, 775], "automated_via": 751, "avail": [55, 56, 382, 668, 752, 777, 779, 780], "avcc_1v3": [759, 762, 769], "avoid": [382, 584], "awai": 750, "await": [758, 759, 760, 761, 762, 763, 765, 766], "ax": [749, 750, 752], "axi": [182, 183, 195, 196, 575, 711], "azimuth": 430, "b1": 765, "back": 751, "backdril": [215, 216, 254, 255], "background": [727, 730], "background_color": 727, "balanc": [503, 770, 773], "ball": [54, 55, 56, 57, 74, 97, 109, 382, 447, 458, 628, 654, 696, 713, 714, 756], "balldiam": [654, 749, 750], "bar": [747, 775], "base": [74, 231, 382, 461, 542, 577, 579, 581, 592, 604, 646, 690, 691, 692, 724, 763, 770, 783, 784, 809], "base_ev": [758, 759, 760, 761, 762, 763, 764, 765, 766], "base_lay": [690, 751, 799, 801, 804, 808], "base_layer_nam": [691, 692], "basefilenam": [758, 759, 760, 761, 762, 763, 765, 766], "basi": [382, 809], "basis_ord": 382, "basisord": [382, 403], "batch": [388, 441, 759, 774], "batch_solve_set": [8, 752, 754], "bbox": 382, "becaus": [217, 758, 759, 760, 761, 762, 763, 765, 766, 774, 780], "becom": 779, "been": [406, 530, 711, 749, 750, 751, 752, 753, 754, 755, 756, 760, 764, 773, 777], "befor": [530, 586, 628, 712, 713, 714, 725, 747, 749, 750, 775, 776], "begin": [778, 795], "begin_on_upper_pad": [202, 626], "behavior": [754, 755], "being": [111, 124, 755, 758, 759, 760, 761, 762, 763, 765, 766, 779], "belong": [74, 90, 95, 161, 175, 177, 191, 208, 238, 249, 292, 331, 382, 520, 527, 613, 615, 621, 639, 649, 655, 660], "below": [422, 440, 625, 692, 747, 751, 775], "best": [747, 774, 775, 777], "beta": 779, "better": 780, "between": [68, 75, 78, 89, 124, 364, 382, 527, 531, 577, 662, 665, 672, 673, 675, 678, 684, 773, 776, 788, 794, 797], "bga": [89, 712, 713, 714, 765], "bill": 752, "binari": 779, "bit": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "bkground_color": 730, "black": [747, 775], "blacken": [747, 775], "blank": 382, "block": 779, "board": [751, 769, 770], "bodi": [758, 759, 760, 761, 762, 763, 765, 766], "bollean": 654, "bom": [83, 99, 111, 760], "bom_fil": [83, 99, 111], "bond": [382, 499], "bondwir": [252, 260, 376, 379, 382, 487, 574], "bondwire_typ": 574, "bondwiredotnet": 574, "bondwiretyp": 574, "bool": [12, 22, 23, 29, 31, 32, 62, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 87, 89, 97, 99, 105, 107, 108, 109, 110, 111, 121, 122, 170, 176, 191, 221, 222, 224, 228, 229, 231, 234, 235, 254, 255, 340, 341, 342, 351, 356, 365, 366, 367, 369, 384, 386, 387, 389, 391, 393, 394, 406, 407, 408, 409, 411, 424, 429, 434, 437, 439, 442, 451, 454, 455, 457, 458, 459, 460, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 481, 484, 487, 488, 495, 497, 498, 499, 500, 502, 505, 506, 509, 517, 518, 522, 529, 530, 532, 542, 544, 546, 548, 549, 550, 563, 577, 581, 582, 583, 584, 590, 592, 593, 602, 604, 610, 613, 615, 616, 617, 621, 625, 626, 628, 631, 640, 646, 650, 651, 652, 653, 654, 658, 659, 662, 665, 667, 674, 675, 678, 679, 690, 695, 696, 698, 700, 701, 706, 707, 711, 712, 713, 714, 715, 725, 727, 728, 729, 730, 733, 739, 742, 743], "boolean": [382, 406, 407, 408, 409, 410, 411, 424, 425, 428, 429, 434, 437, 439, 451, 454, 458, 459, 468, 472, 476, 478, 527, 530], "border": 533, "bot": [753, 759], "bot_el": 759, "bot_layer_obj": 764, "both": [5, 9, 382, 747, 751, 754, 755, 774, 775, 778, 779], "bottom": [32, 59, 191, 215, 254, 259, 613, 621, 627, 654, 693, 696, 707, 711, 712, 713, 714, 715, 751, 759, 764, 771], "bound": [15, 22, 217, 231, 264, 300, 352, 353, 354, 382, 530, 538, 585, 637, 756, 773, 790], "boundari": [68, 69, 75, 78, 105, 263, 299, 382, 476, 531, 532, 673, 753, 788], "boundaryobject": 750, "bounding_box": 637, "boundingbox": 426, "box": [15, 22, 217, 231, 264, 300, 352, 353, 354, 382, 426, 444, 445, 446, 468, 469, 518, 530, 538, 546, 585, 637, 790, 808], "brief": [776, 778], "broadband": [398, 399, 753, 770, 773, 809], "bst_v3p3_s5": 168, "bug": [583, 747, 775, 779], "build": [382, 389, 394, 396, 424, 442, 454, 457, 461, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773, 774, 798, 803, 808], "build_simul": 755, "build_simulation_project": [8, 382, 752, 754, 755, 782, 808], "builder": [749, 750, 752, 755, 756, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 773], "bullet": [626, 653, 751], "bump": [713, 714], "bundl": [266, 302, 519], "bundlewaveport": [266, 302, 751], "bypass": 610, "c": [62, 78, 382, 391, 393, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 773, 780], "c1": [0, 752], "c100": 111, "c100hn140": 762, "c110": 773, "c128": 759, "c129": 759, "c130": 759, "c131": 759, "c132": 759, "c133": 759, "c134": 759, "c135": 759, "c136": 759, "c137": 759, "c138": 759, "c139": 759, "c140": 759, "c141": 759, "c142": 759, "c143": 759, "c144": 759, "c145": 759, "c200": 62, "c205": 759, "c206": 773, "c238": 759, "c35": 762, "c375": 769, "c379": 756, "c380": [752, 756, 759], "c45": 759, "c46": 759, "c52": 759, "c53": 759, "c54": 759, "c55": 759, "c56": 759, "c57": 759, "c58": 759, "c60": 759, "c68": 759, "c69": 759, "c73": 759, "c_0": 750, "c_file_in": 765, "c_map": 765, "c_valu": [72, 76, 386, 674, 787], "cach": 777, "cad": 750, "calcul": [608, 682, 750, 751, 759], "call": [0, 1, 2, 3, 4, 5, 7, 9, 75, 254, 255, 396, 628, 754, 755, 758, 759, 760, 761, 762, 763, 765, 766, 779], "can": [1, 7, 75, 76, 293, 332, 382, 426, 440, 527, 577, 584, 707, 747, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 771, 773, 774, 775, 777, 778, 779, 780, 803], "cannot": [749, 750, 751, 752, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771], "cap": [12, 579, 752], "cap_valu": 108, "capabl": [547, 781], "capacit": [12, 16, 72, 76, 386, 532, 674], "capacitor": [105, 108, 610, 752, 756], "capacitor_abov": [610, 756], "capc0603x33x15ll03t05": [759, 773], "capc1005x05n": 752, "capc1005x33x10ll5": 759, "capc1005x55x25ll05t10": 752, "capc1608x08n": 759, "capc3216x180x20ml20": 752, "capc3216x180x55ml20t25": [62, 752], "capit": 777, "capmp7343x31n": 759, "carri": 530, "case": [73, 75, 81, 95, 221, 228, 404, 473, 520, 523, 534, 575, 592, 602, 609, 613, 627, 640, 646, 660, 663, 676, 724, 754, 762, 779, 783], "caus": [382, 440, 527], "causal": [382, 408], "cautious": 382, "cd": [747, 775], "cell": [11, 65, 66, 67, 70, 89, 101, 102, 106, 165, 262, 298, 527, 532, 618, 628, 641, 654, 674, 712, 713, 714, 749, 750, 751, 752, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 773], "cell_2bc56c": 764, "cell_4mz08n": 749, "cell_7h53k2": 753, "cell_ankhbp": 751, "cell_avg6fi": 750, "cell_nam": [758, 759, 760, 761, 762, 763, 765, 766], "cell_yalwb6": 754, "center": [231, 336, 577, 578, 592], "center_point": [578, 808], "centerwidthheight": [578, 808], "central": 749, "cfg": [769, 770, 773], "cfg_data": [768, 771, 773], "cfgdata": [768, 771, 773], "chang": [382, 464, 583, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 773, 795, 801, 809], "channel": [7, 756], "charact": [747, 754, 763, 775], "charg": [749, 761], "chart": [176, 613, 621], "cheat": 778, "check": [32, 95, 224, 231, 232, 270, 307, 366, 533, 549, 550, 610, 615, 625, 747, 755, 771, 775, 779], "chip": [109, 765], "chip_down": 109, "chip_orient": 109, "chip_up": 109, "choic": [750, 754, 758, 774], "chord": [402, 405, 410, 421, 425, 428, 437], "chosen": 426, "circl": [6, 252, 260, 376, 379, 575, 583, 626, 651, 653, 804], "circport": 74, "circuit": [65, 66, 68, 69, 74, 75, 78, 221, 278, 316, 382, 449, 520, 521, 527, 660, 661, 672, 751, 773, 795, 797], "circuit_port": 68, "circuit_typ": 69, "circuitport": [74, 671, 769], "circular": 627, "circumfer": 753, "ciruict": 773, "claim": [749, 761], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 64, 75, 112, 117, 127, 129, 140, 142, 154, 161, 162, 163, 168, 178, 190, 213, 221, 262, 298, 336, 349, 382, 383, 388, 389, 390, 396, 397, 400, 403, 441, 442, 457, 477, 508, 516, 547, 553, 571, 586, 603, 624, 656, 657, 658, 674, 679, 688, 724, 746, 749, 751, 752, 753, 754, 755, 756, 759, 760, 763, 764, 773, 774, 808], "classif": 608, "clean": [549, 751, 752, 755, 756, 759, 763, 765, 766, 773], "clean_disjoints_less_than": 549, "cleanup": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 765, 766, 773], "clearanc": [22, 753, 766], "click": 746, "client": 779, "clip": [382, 424, 450, 451, 452, 454, 533, 583, 784], "clip_plan": 764, "clippingext": 382, "clockwis": [340, 711], "clone": 6, "close": [382, 519, 525, 724, 725, 751, 754, 755, 756, 759, 762, 763, 766, 771, 773, 782, 783, 786, 799, 801, 804, 806, 807, 808, 809], "close_desktop": [754, 755, 773], "close_edb": [75, 78, 105, 701, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 783, 785, 786, 787, 792, 793, 794, 795, 796], "close_on_exit": 750, "close_project": [7, 754, 755, 759], "closest": [74, 271, 308, 358, 359, 382], "clr": [753, 766], "cluster": 774, "cmp": [74, 78, 97, 105], "co": [753, 763], "coars": 382, "coax": [220, 272, 309, 749, 750, 756, 773], "coaxial": [382, 472, 522, 544, 628, 797], "coaxport": [74, 769], "coberg": 382, "code": [753, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774, 776, 777, 783, 793], "code_ast": [758, 759, 760, 761, 762, 763, 765, 766], "code_obj": [758, 759, 760, 761, 762, 763, 765, 766], "codebas": 781, "codespel": [747, 775], "coil": 759, "collabor": [774, 777], "collect": [716, 723], "color": [613, 621, 727, 730], "color_by_net": [613, 621, 758, 760, 762, 764], "column": 99, "com": [747, 775, 779], "combin": [74, 382, 750, 774], "come": 111, "command": [105, 382, 530, 641, 747, 749, 750, 754, 758, 759, 774, 777, 778, 779], "comment": [747, 775], "commit": [747, 775], "common": [364, 546, 751, 777, 779], "commonfil": 779, "commun": 779, "comp": [0, 1, 752, 753, 765], "comp1": 382, "comp2": 382, "comp_def": 62, "comp_n": 756, "comp_nam": 756, "comp_obj": 756, "comp_p": 756, "comp_type_col": [99, 752], "comp_u1": 761, "compani": [777, 779], "compat": [68, 69, 105, 386, 776, 780], "complet": [382, 749, 750, 752, 755, 756, 760, 765, 766, 773, 774], "complex": 774, "compliant": [747, 775], "compon": [1, 3, 8, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 25, 32, 36, 41, 42, 44, 45, 46, 47, 51, 52, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 151, 152, 153, 168, 219, 228, 264, 300, 328, 353, 382, 384, 386, 387, 449, 455, 520, 521, 522, 523, 524, 531, 534, 535, 546, 605, 610, 613, 615, 620, 621, 628, 634, 639, 640, 649, 655, 660, 661, 663, 664, 666, 669, 670, 672, 673, 674, 676, 677, 681, 711, 712, 713, 714, 746, 753, 755, 756, 760, 765, 766, 769, 773, 774, 782, 785, 786, 792, 793, 794, 796, 797, 798], "component1_pin": 754, "component2_pin": 754, "component_3d": 753, "component_definit": 773, "component_edb": 714, "component_exampl": 754, "component_list_column": 759, "component_nam": [72, 76, 80, 82, 110, 615, 666, 672, 674, 753, 796], "component_onli": [228, 640], "component_part_nam": [23, 72], "component_partnam": 759, "component_path": 753, "component_pin": 634, "component_reference_design": 634, "component_typ": 752, "componentnam": [107, 108, 241], "componentproperti": 21, "comptyp": 111, "comput": [17, 52, 110, 271, 308, 351, 382, 439, 440, 478, 498, 592, 752, 755, 759, 783, 784], "con_pin": [749, 750], "con_ref1": [749, 750], "con_ref2": [749, 750], "con_ref3": [749, 750], "con_ref4": [749, 750], "concept": 754, "cond_thickness_inn": [754, 763], "cond_thickness_out": [754, 763], "conda": 776, "condit": [382, 590, 634, 749, 761, 765], "conduct": [554, 690, 751, 768, 801], "conduction_max_pass": 809, "conduction_min_converged_pass": 809, "conduction_min_pass": 809, "conduction_per_error": 809, "conduction_per_refin": 809, "conductor": [554, 698, 714, 750, 751, 753, 763], "conectors_posit": 754, "config": [391, 758, 759, 760, 761, 762, 763, 765, 766], "config_fil": [769, 770, 773], "configur": [382, 443, 501, 516, 517, 518, 659, 746, 747, 754, 755, 757, 775], "conform": [382, 426, 773], "conintu": 754, "connect": [18, 88, 226, 227, 265, 271, 273, 301, 308, 310, 355, 360, 361, 382, 549, 611, 617, 749, 751, 754, 756, 761, 780], "connector": [711, 750, 753], "connector_1": 754, "connector_2": 754, "connector_pin": [749, 750], "connector_s": 754, "connedt": [270, 307], "consecut": [382, 586], "consid": [176, 421, 422, 440, 610, 611, 613, 621, 759], "consist": 756, "consolid": [774, 777], "constant": [382, 396], "constraint": 774, "constructor": 8, "consum": 584, "contact": [479, 804], "contain": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 111, 222, 338, 348, 397, 441, 477, 519, 525, 536, 609, 646, 696, 752, 759, 762, 774, 777], "content": 777, "context": [751, 756], "continu": [755, 766], "contour": 364, "contract": [749, 761], "contribut": 781, "control": [406, 646, 707], "control_fil": 765, "control_fn": 765, "controlfil": 765, "controlfilesweep": 765, "conveni": 382, "convent": [74, 628], "converg": [382, 413, 416, 418, 427, 750, 770], "convert": [78, 180, 181, 191, 209, 345, 356, 565, 601, 613, 617, 644, 645], "convert_only_signal_via": 191, "convexhul": [382, 426, 760, 773], "cool": [747, 775], "coordin": [15, 34, 251, 264, 300, 338, 348, 353, 354, 519, 525, 526, 527, 528, 536, 577, 585, 586, 589, 759, 773], "copi": [461, 749, 752, 756, 761, 765, 777, 782, 783, 793, 795, 796, 806, 809], "coplanar": [527, 764, 766], "coplanar_plane_net_nam": 766, "copper": [690, 718, 749, 750, 751, 753, 754, 758, 762, 763, 764, 768, 771], "copy2": 765, "copyright": [749, 761], "core": [1, 67, 72, 86, 111, 214, 747, 753, 756, 758, 759, 760, 761, 762, 763, 765, 766, 774, 775, 779, 781], "core_app": [127, 140, 154, 162, 349], "core_compon": 746, "corner": [15, 264, 300, 352, 353, 382, 451, 527, 538, 578, 579, 747, 775], "corner_rad": 751, "corner_radiu": [578, 626, 751], "corner_styl": 579, "coro": [758, 759, 760, 761, 762, 763, 765, 766], "corpor": 779, "correctli": [111, 749, 750, 751, 752, 753, 754, 755, 756, 758, 763, 764, 765, 773], "correspond": [382, 752, 761], "could": 613, "count": [404, 658, 698, 749, 751, 753, 756, 759, 764, 809], "counter": [340, 759], "coupl": [270, 307, 411, 440], "cover": 546, "cp_name": 764, "cpython": [749, 750, 751, 752, 753, 756, 773, 779], "creat": [22, 23, 68, 73, 74, 75, 76, 77, 78, 130, 143, 156, 220, 221, 222, 223, 229, 246, 266, 302, 382, 386, 442, 455, 457, 461, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 549, 574, 575, 576, 577, 578, 579, 592, 593, 609, 627, 628, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 698, 751, 752, 759, 765, 776, 779, 788, 798, 805, 807, 808, 809, 810], "create_air_region": 750, "create_circuit_port": 78, "create_circuit_port_on_net": 792, "create_circuit_port_on_pin_group": 792, "create_coax_port": [749, 750], "create_coax_port_on_compon": [761, 793], "create_current_source_on_net": [759, 794], "create_current_source_on_pin": 794, "create_current_source_on_pin_group": 794, "create_differential_wave_port": 751, "create_edge_port": [753, 764, 795], "create_edge_port_on_polygon": 795, "create_fieldplot_cutplan": 764, "create_fieldplot_layers_net": 750, "create_ground_plan": 763, "create_hfss_setup": [753, 809], "create_linear_count_sweep": [749, 751, 764], "create_new_termin": 229, "create_padstack": [4, 754, 804], "create_physical_rlc": 386, "create_pin_group": 794, "create_pin_group_on_net": [792, 794, 796], "create_polygon": [749, 750, 751, 754, 758, 763], "create_port": 796, "create_port_between_pin_and_lay": 796, "create_port_on_compon": 756, "create_rectangl": [6, 753, 764, 808], "create_report": [749, 753, 756], "create_resistor_on_pin": 785, "create_rlc_boundary_on_pin": 786, "create_setup": [749, 750, 751, 764], "create_siwave_syz_setup": 756, "create_symmetric_stackup": [754, 763, 764], "create_trac": [751, 753, 758, 763, 764, 766, 795, 804, 808], "create_via": 758, "create_via_f": 804, "create_via_group": 765, "create_voltage_probe_on_pin_group": 794, "create_voltage_source_on_net": 759, "create_voltage_source_on_pin_group": 794, "created_port": 792, "createedgeport": 764, "creation": [74, 442, 527, 628, 750, 752, 755, 756, 760, 766, 773, 808], "criteria": [228, 382, 413, 423, 427, 542, 581, 640, 770, 809], "cross": 440, "crosstalk": 668, "csv": [700, 707, 752, 753, 758], "cubic": 240, "current": [29, 30, 76, 77, 279, 317, 382, 384, 386, 387, 428, 498, 523, 524, 586, 611, 663, 664, 665, 679, 701, 711, 712, 713, 714, 715, 725, 726, 780, 797, 798, 799, 800, 801], "current_patch": [749, 750], "current_posit": [749, 750], "current_valu": [382, 384, 523, 524, 663, 664], "currentsourc": 671, "curv": 809, "curve_approx_set": 809, "custom": 505, "cut": [752, 755], "cutout": [382, 388, 424, 441, 454, 461, 473, 475, 530, 755, 783, 808], "cutout_subdesign_expans": [8, 382, 752, 754, 782], "cutout_subdesign_round_corn": 382, "cutout_subdesign_typ": 382, "cutoutsubdesigntyp": [382, 452], "cvalu": [532, 786], "cylind": [109, 492, 493, 765], "cylindr": 109, "d": [750, 753, 754, 756, 758, 765], "d1": 753, "d2": 753, "d28": 759, "d29": 759, "d3": [753, 759], "d4": 753, "d5": 753, "d7": 769, "damag": [749, 761], "data": [0, 3, 4, 6, 231, 336, 350, 358, 359, 364, 366, 382, 481, 484, 540, 601, 613, 728, 749, 751, 752, 753, 755, 756, 768, 769, 770, 771, 773], "data_cfg": [768, 771], "data_typ": 728, "databas": [1, 130, 134, 135, 136, 137, 143, 146, 147, 148, 149, 156, 158, 159, 160, 166, 167, 169, 172, 173, 174, 560, 561, 633, 749, 750, 752, 755, 756, 758, 760, 761, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774], "datafram": [768, 771], "date": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "db": [749, 750, 751, 753, 756], "db20": 752, "dc": [170, 382, 385, 390, 439, 457, 477, 478, 479, 480, 490, 503, 505, 548, 611, 657, 666, 667, 682, 727, 729, 741, 742, 753, 774, 807, 809], "dc_compute_induct": 382, "dc_conduct": 557, "dc_connected_net_list": 759, "dc_error_energi": 382, "dc_export_thermal_data": 382, "dc_full_report_path": 382, "dc_icepak_temp_fil": 382, "dc_import_thermal_data": 382, "dc_max_num_pass": 382, "dc_mesh_bondwir": 382, "dc_min_num_pass": 382, "dc_num_bondwire_sid": 382, "dc_per_pin_res_path": 382, "dc_per_pin_use_pin_format": 382, "dc_permitt": 557, "dc_pin_res_fil": 382, "dc_plot_jv": 382, "dc_refine_via": 382, "dc_report_show_active_devic": 382, "dc_simulation_nam": [729, 742], "dc_slide_posit": 382, "dc_use_loop_res_for_per_pin": 382, "dc_via_report_path": 382, "dcir": 224, "dcir_equipotential_region": 804, "dcr_set": 809, "dctermin": 671, "ddr4_a0": 782, "ddr4_a1": 782, "ddr4_a2": 782, "ddr4_a3": 782, "ddr4_a4": 782, "ddr4_a5": 782, "ddr4_alert3": 766, "ddr4_dq0": 783, "ddr4_dq1": 783, "ddr4_dq2": 783, "ddr4_dq3": 783, "ddr4_dq4": 783, "ddr4_dq5": 783, "ddr4_dq6": 783, "ddr4_dq7": 783, "ddr4_dqs0_n": 793, "ddr4_dqs0_p": 793, "ddr4_dsq0_n": 793, "ddr4_dsq0_p": 793, "de": 111, "de1": 771, "de2": 771, "de3": 771, "de5": 771, "de6": 771, "de7": 771, "deactiv": [68, 78, 81, 382, 406, 407, 411, 429, 437, 459, 468, 476, 478, 481, 484, 487, 488, 497, 498, 499, 500, 502, 505, 752], "deactivate_onli": 81, "deal": [749, 761], "debug": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "deby": [555, 559], "decad": [382, 404, 658], "decade_count": [382, 658], "decreas": 440, "deemb": 304, "def": [749, 750, 763], "default": [12, 68, 69, 73, 74, 75, 78, 81, 83, 90, 92, 95, 98, 99, 102, 107, 108, 109, 111, 170, 176, 191, 221, 222, 228, 231, 232, 246, 254, 255, 271, 308, 345, 351, 382, 385, 442, 457, 460, 472, 473, 475, 480, 496, 498, 519, 520, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 538, 544, 548, 549, 575, 577, 578, 579, 581, 590, 592, 602, 604, 609, 610, 611, 613, 621, 625, 626, 627, 628, 637, 638, 639, 640, 646, 650, 653, 654, 658, 660, 662, 663, 664, 666, 667, 668, 670, 672, 673, 676, 677, 679, 682, 689, 690, 691, 692, 693, 694, 698, 700, 706, 711, 714, 715, 724, 725, 727, 728, 730, 733, 743, 749, 750, 751, 752, 754, 755, 756, 764, 779, 780], "default_plating_ratio": 625, "defeatur": [406, 415, 422, 542, 581, 809], "defeature_abs_length": 809, "defeature_ratio": 809, "defeature_set": 809, "defin": [31, 68, 69, 75, 78, 112, 191, 382, 426, 434, 435, 519, 525, 526, 527, 528, 536, 586, 626, 628, 679, 750, 751, 753, 755, 756, 766, 774, 779, 783, 795, 798, 810], "definit": [19, 23, 38, 43, 47, 62, 76, 84, 100, 103, 178, 190, 191, 202, 205, 207, 208, 209, 245, 287, 325, 373, 425, 574, 626, 634, 635, 649, 650, 652, 655, 679, 700, 715, 746, 753, 754, 755, 760, 763, 798, 805], "definition_nam": [574, 634, 650, 751, 804], "degre": [191, 650, 751, 753], "delai": [754, 755], "delcross": 777, "delet": [3, 81, 191, 549, 582, 602, 631, 657, 707, 750, 752, 754, 755, 756, 759, 760, 766, 773], "delete_existing_setup": 659, "delete_padstack_def": 191, "delete_padstack_gemometri": 602, "delete_single_pin_rlc": [759, 760, 766], "deleted_comp": [759, 760, 766], "deleted_net": 607, "delimit": [83, 99, 111], "deliveri": [7, 382], "delta": [413, 750, 766, 770], "demand": 716, "demo_3dcomp": 750, "demonstr": [752, 754, 759, 762, 765, 775], "dens": 382, "densiti": 498, "depend": [753, 777, 779], "deploi": 774, "deprec": [749, 750, 751, 752, 753, 754, 755, 756, 764], "depth": [191, 798, 809], "describ": [746, 779], "descript": 562, "design": [0, 49, 68, 69, 72, 75, 78, 85, 88, 94, 96, 99, 105, 111, 382, 424, 450, 451, 452, 454, 522, 584, 639, 646, 669, 670, 701, 712, 713, 714, 749, 750, 752, 753, 756, 761, 763, 769, 773, 774, 778, 784, 798], "design_opt": 753, "design_typ": [758, 759, 760, 761, 762, 763, 765, 766], "design_vari": 509, "designnam": 750, "desktop": [711, 750, 751, 753, 754, 755, 756, 764, 774, 777], "desktop_vers": [799, 804], "dest": [758, 759, 760, 761, 762, 763, 765, 766], "destin": [712, 713, 714, 752, 753, 755, 756, 759, 760, 761, 762, 765, 766, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "detail": [752, 798], "detect": 646, "determin": [121, 122, 234, 269, 306, 367, 511, 592, 616], "develop": [406, 747, 775, 779, 780], "deviat": [406, 415, 542, 581], "devic": [7, 502, 759], "df": [768, 771], "dfn": [758, 759, 760, 761, 762, 763, 765, 766], "diamet": [54, 74, 109, 191, 192, 193, 215, 216, 254, 255, 447, 626, 627, 654, 755], "dic": [47, 649, 655], "dict": [65, 66, 67, 70, 71, 79, 88, 101, 102, 106, 165, 184, 208, 540, 562, 564, 567, 568, 591, 596, 598, 599, 605, 619, 620, 622, 623, 630, 639, 642, 643, 699, 704, 718, 720, 769, 770, 773], "dictionari": [5, 9, 47, 65, 66, 67, 70, 71, 88, 96, 101, 102, 104, 106, 132, 144, 145, 150, 151, 152, 153, 157, 504, 540, 591, 596, 598, 599, 619, 622, 623, 639, 642, 643, 649, 655, 699, 704, 709, 720, 721, 749, 768, 771], "diel": [559, 753, 758], "diel1": 799, "diel2": 799, "diel_1": 751, "diel_2": 751, "diel_3": 751, "diel_material_nam": [754, 763], "diel_t": 753, "diel_thick": [754, 763], "dielectr": [191, 382, 453, 459, 474, 555, 556, 557, 559, 689, 690, 691, 692, 693, 694, 696, 698, 699, 707, 721, 749, 750, 751, 753, 758, 771], "dielectric_ext": [382, 808], "dielectric_lay": 801, "dielectric_loss_tang": [556, 768, 801], "dielectric_materi": [698, 754, 763], "dielectric_model_frequ": 557, "dielectric_thick": [698, 754, 763], "dielectrics_base_elev": 765, "diff_n": 756, "diff_nam": [751, 756], "diff_p": 756, "diff_pair": 127, "differ": [74, 111, 527, 777, 781], "differenti": [3, 525, 751, 756], "differential_mod": [751, 756], "differential_pair": [3, 127], "differentialpair": [130, 135], "differeti": 756, "difficult": [747, 775], "digit": [530, 538], "digit_resolut": [530, 538], "dim": 778, "dimens": [444, 445, 446, 453, 469, 470, 471, 474, 653, 760], "dimeson": 763, "dir": [773, 777], "direct": [592, 611, 626], "directli": [0, 3, 4, 270, 307, 382, 762, 774, 781], "directori": [738, 740, 744, 751, 752, 756, 759, 762, 763, 779], "dirnam": 759, "disabl": [74, 82, 549, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773, 808], "discov": 776, "discret": [63, 109, 382, 434, 492, 493, 658, 770, 773], "discrete_sweep": 658, "disjoint": [549, 550], "dispatch": [758, 759, 760, 761, 762, 763, 765, 766], "dispatch_queu": [758, 759, 760, 761, 762, 763, 765, 766], "dispatch_shel": [758, 759, 760, 761, 762, 763, 765, 766], "displai": [747, 750, 757, 762, 763, 768, 771, 775], "dissip": 682, "distanc": [382, 440, 640, 646, 783], "distance_threshold": 646, "distribut": [428, 498, 749, 761, 770, 773], "divid": 646, "djordjev": 557, "do": [364, 455, 747, 749, 750, 761, 775, 779, 780], "do214aa": 759, "do_cutout": 460, "do_cutout_subdesign": [8, 382, 752, 754, 755, 782, 808], "do_execut": [758, 759, 760, 761, 762, 763, 765, 766], "do_lambda_refin": 382, "do_pin_group": 382, "do_pingroup": 74, "doc": [747, 775], "document": [689, 746, 749, 750, 761, 779], "doe": [74, 99, 222, 254, 255, 628, 639, 749, 750, 751, 753, 754, 758, 763, 764, 774], "doesn": 763, "domain": [668, 750, 753], "don": [527, 774], "dorollov": [758, 759, 760, 761, 762, 763, 765, 766], "dotnet": [11, 18, 39, 47, 64, 65, 66, 67, 70, 76, 101, 102, 106, 112, 117, 127, 130, 134, 135, 136, 137, 140, 143, 146, 147, 148, 149, 154, 156, 158, 159, 160, 162, 165, 166, 167, 168, 169, 172, 173, 174, 175, 177, 178, 190, 209, 213, 221, 222, 228, 229, 242, 262, 265, 266, 270, 271, 272, 273, 274, 288, 293, 298, 301, 302, 307, 308, 309, 310, 311, 326, 332, 336, 349, 355, 356, 363, 374, 378, 380, 382, 383, 388, 390, 391, 393, 396, 397, 400, 441, 443, 466, 477, 508, 514, 516, 525, 536, 547, 553, 554, 555, 556, 557, 558, 559, 561, 571, 573, 574, 575, 577, 578, 579, 586, 588, 589, 594, 595, 597, 600, 601, 603, 608, 619, 622, 623, 624, 630, 634, 636, 640, 642, 643, 649, 650, 655, 656, 657, 658, 674, 679, 688, 690, 699, 704, 715, 720, 746, 749, 750, 751, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 780], "doubl": [74, 97, 382, 403, 654, 711, 712, 713, 714], "down": [32, 751], "download": [748, 751, 752, 753, 755, 759, 765, 766, 768, 769, 770, 771, 773, 777, 778, 779, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "download_fil": [752, 753, 755, 756, 759, 760, 761, 762, 765, 766, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "dq4": 127, "draw": [22, 763], "drill": [215, 216, 254, 255, 760], "drill_depth": [254, 255], "drill_diamet": [254, 255], "driver": 756, "due": [583, 751], "dummy_layermap": 765, "dump": [768, 769, 770, 771, 773], "dure": [74, 382, 396, 424, 440, 454, 765, 779], "duroid": [749, 750], "e": [546, 711, 714, 747, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 775], "e_lay": 750, "each": [382, 455, 559, 577, 586, 620, 750, 751, 754, 759, 763, 766], "earlier": 779, "eas": 777, "easi": [382, 777], "edb": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 20, 33, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 116, 117, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 146, 147, 148, 149, 154, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 178, 180, 181, 190, 213, 214, 222, 228, 236, 244, 247, 262, 297, 298, 334, 336, 338, 339, 346, 348, 349, 363, 370, 378, 380, 382, 384, 386, 387, 389, 394, 473, 475, 508, 509, 516, 519, 520, 521, 523, 524, 525, 527, 530, 531, 532, 533, 534, 535, 536, 538, 548, 549, 553, 559, 563, 571, 581, 582, 583, 603, 607, 610, 624, 628, 631, 635, 640, 641, 644, 645, 649, 654, 655, 656, 657, 658, 660, 661, 663, 664, 666, 673, 674, 676, 677, 688, 700, 701, 707, 711, 712, 713, 714, 716, 718, 723, 746, 771, 777, 779, 780, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811], "edb1": [89, 711, 712, 713, 714], "edb2": [89, 712, 713, 714], "edb_3dedbapp": 516, "edb_class": [64, 656], "edb_configur": [768, 769, 770, 771, 773], "edb_cor": [11, 18, 39, 47, 64, 65, 66, 67, 70, 76, 101, 102, 106, 112, 117, 127, 140, 154, 162, 165, 168, 175, 177, 178, 190, 209, 213, 221, 222, 228, 229, 242, 262, 265, 266, 270, 271, 272, 273, 274, 288, 293, 298, 301, 302, 307, 308, 309, 310, 311, 326, 332, 336, 349, 355, 356, 363, 364, 366, 374, 378, 380, 382, 383, 388, 390, 391, 393, 397, 400, 441, 443, 466, 477, 508, 514, 516, 519, 525, 536, 547, 553, 554, 555, 556, 557, 558, 559, 561, 571, 573, 574, 575, 577, 578, 579, 585, 586, 588, 589, 594, 595, 597, 600, 601, 603, 607, 608, 619, 622, 623, 624, 630, 634, 636, 640, 642, 643, 649, 650, 655, 656, 657, 658, 674, 679, 688, 690, 699, 704, 715, 720, 749, 750, 751, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771], "edb_data": [18, 39, 47, 76, 77, 112, 117, 127, 140, 154, 162, 168, 175, 177, 178, 190, 213, 221, 222, 228, 229, 242, 262, 265, 270, 271, 272, 273, 274, 288, 293, 298, 301, 307, 308, 309, 310, 311, 326, 332, 336, 349, 355, 356, 363, 364, 366, 374, 378, 380, 382, 383, 388, 390, 391, 393, 397, 400, 441, 443, 466, 477, 508, 514, 517, 518, 519, 525, 536, 542, 544, 546, 573, 575, 577, 578, 579, 586, 588, 589, 594, 595, 597, 600, 608, 619, 622, 623, 630, 634, 636, 640, 642, 643, 649, 650, 655, 657, 658, 659, 679, 690, 699, 704, 715, 720, 749, 750, 751, 753, 758, 763, 764, 765, 769], "edb_edge_port": 795, "edb_extended_net": 140, "edb_fil": [78, 105, 548, 778], "edb_full_path": 756, "edb_hfss": 516, "edb_layout": [222, 571], "edb_logg": [758, 759, 760, 761, 762, 763, 765, 766], "edb_net": [162, 603], "edb_obj": 112, "edb_object": [11, 117, 262, 298, 688], "edb_pad_properti": 178, "edb_padstack": [178, 190, 624], "edb_padstack_inst": 213, "edb_padstackinst": 213, "edb_path": [527, 766], "edb_prim": 349, "edb_siwav": 656, "edb_termin": 298, "edb_vers": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766], "edbapp": [6, 8, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 80, 81, 82, 86, 88, 91, 92, 93, 95, 96, 98, 101, 102, 106, 107, 108, 109, 110, 214, 222, 228, 516, 520, 521, 523, 524, 531, 534, 535, 571, 603, 624, 640, 649, 655, 656, 660, 661, 663, 664, 666, 673, 676, 677, 752, 756, 761, 764, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "edbarc": [337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "edbcompon": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 70, 75, 101, 102, 106, 165, 265, 301, 355, 754], "edbcomponentdef": 79, "edbdifferentialpairdata": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "edbdotnet": [758, 759, 760, 761, 762, 763, 765, 766], "edbextendednetdata": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 168], "edbhfss": [1, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546], "edblay": [2, 117, 699], "edblib": [262, 298], "edbnet": [1, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 746], "edbnetclassdata": [155, 156, 157, 158, 159, 160, 161], "edbnetsdata": [39, 138, 139, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 221, 242, 288, 326, 374, 608, 619, 622, 623], "edbpadproperti": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "edbpadstack": [1, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 746], "edbpadstackinst": [47, 75, 76, 95, 175, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 271, 272, 273, 274, 293, 308, 309, 310, 311, 332, 634, 636, 640, 642, 643, 649, 650, 655, 679, 751, 753, 758, 763], "edbpath": [89, 701, 711, 712, 713, 714, 718, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "edbpolygon": [749, 750, 758], "edbprimit": [177, 222, 270, 274, 293, 307, 311, 332, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 525, 536, 573, 575, 577, 578, 579, 586, 588, 589, 594, 595, 597, 600], "edbsiwav": [1, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "edbstatist": 584, "edbvalu": [113, 114, 115, 116, 514, 746], "edbvers": [0, 1, 2, 3, 4, 5, 6, 8, 9, 89, 127, 140, 154, 162, 178, 190, 213, 222, 336, 338, 339, 348, 349, 571, 603, 624, 656, 657, 701, 711, 712, 713, 714, 718, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 799, 801, 803, 804, 806, 807, 809, 811], "edc": 111, "edg": [262, 270, 271, 298, 307, 308, 485, 519, 525, 526, 527, 528, 530, 533, 536, 797], "edge_numb": 764, "edgetermin": [262, 298], "edit": [1, 716, 774, 800, 805], "edit_hfss_ext": 764, "editor": [752, 754, 755], "effici": 774, "effort": 774, "egaci": 519, "eight": [713, 714], "either": [89, 191, 235, 341, 342, 351, 365, 369, 384, 387, 394, 712, 713, 714], "el": 759, "elaps": [749, 750, 751, 752, 753, 755, 756, 759, 760, 764, 766, 773], "elapsed_tim": [758, 759, 760, 762, 763, 765, 766], "elav": 239, "electr": [752, 754], "electro": 774, "electromagnet": 774, "electron": [7, 328, 711, 774, 777], "electronicsdesktop": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "element": [728, 750, 770, 809], "elev": [35, 61, 239, 261, 690, 711, 713, 714, 759], "elif": 759, "elig": 608, "els": [751, 755, 759, 763], "email": [747, 775, 779], "embed": 759, "emi": 7, "emit": [758, 759, 760, 761, 762, 763, 765, 766], "emp": 382, "empti": [712, 713, 750], "enabl": [29, 224, 269, 306, 382, 407, 690, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 779, 809], "enable_rough": 690, "enable_stdout_log": [758, 759, 760, 761, 762, 763, 765, 766], "enclos": 382, "end": [519, 525, 526, 528, 530, 536, 574, 579, 586, 609, 627, 748, 752, 753, 754, 795], "end_cap_styl": [579, 763, 764], "end_coordin": 338, "end_i": 574, "end_layer_nam": 574, "end_on_lower_pad": [202, 626], "end_tim": [758, 759, 760, 762, 766], "end_with": 609, "end_x": 574, "endlay": 627, "endpoint": 781, "energi": 480, "enforc": [382, 408, 409, 527], "enforce_caus": 382, "enforce_pass": 382, "enhanced_low_freq_accuraci": 809, "ensur": [747, 755, 775], "ensure_ascii": [768, 769, 770, 771, 773], "enter": 111, "entir": [228, 382, 640, 803], "enumer": [74, 180, 181, 644, 645, 647], "environ": [777, 779, 780], "equal": [586, 625, 707], "equipotenti": 224, "error": [382, 402, 405, 410, 421, 425, 427, 428, 438, 480, 690, 749, 750, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771], "especi": 461, "est": [391, 393], "est_json": [391, 393], "etch": [456, 463, 690], "etch_factor": 690, "evalu": [74, 447, 538, 584, 617, 640, 783], "evaluate_area": 584, "even": [111, 382, 763], "event": [749, 758, 759, 760, 761, 762, 763, 764, 765, 766], "eventu": 382, "ex": [667, 759], "exampl": [62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 88, 89, 91, 92, 93, 95, 96, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 127, 140, 154, 162, 168, 178, 190, 213, 214, 222, 228, 246, 262, 298, 336, 338, 339, 348, 349, 382, 384, 386, 387, 391, 393, 509, 516, 519, 520, 523, 524, 525, 527, 531, 534, 535, 536, 548, 549, 559, 571, 585, 586, 603, 607, 610, 624, 640, 649, 655, 656, 657, 660, 661, 663, 664, 666, 673, 676, 677, 700, 701, 707, 711, 712, 713, 714, 718, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 772, 775, 776, 777, 778, 781, 782, 783, 793, 795, 796, 798, 806, 809], "exc": 298, "exception_list": 610, "excit": [5, 382, 536, 539, 746, 755, 792], "excitationdifferenti": [519, 525], "exec": [758, 759, 760, 761, 762, 763, 764, 765, 766], "execut": [667, 750, 752, 754, 755], "execute_request": [758, 759, 760, 761, 762, 763, 765, 766], "exist": [30, 74, 99, 215, 216, 561, 628, 749, 750, 751, 752, 753, 754, 755, 758, 759, 763, 764, 765, 766, 774, 777, 778, 795, 803], "expand": [752, 755, 756, 760, 766, 773], "expans": [382, 450, 592, 783], "expansion_s": [760, 783], "expect": [252, 260, 376, 379, 758], "explain": 779, "explicitli": [111, 753, 759, 779], "explor": 781, "export": [68, 83, 84, 105, 382, 391, 667, 727, 728, 729, 730, 768, 771, 777], "export_dc_power_data_to_icepak": 741, "export_element_data": 7, "export_json": [8, 752], "export_result": 759, "export_siwave_dc_result": 759, "export_siwave_report": 759, "export_to_ipc2581": 760, "export_touchston": 667, "express": [749, 752, 761, 773], "extend": [3, 168, 228, 579, 610, 640, 773, 774, 777], "extend_domain": 753, "extended_net": [3, 140, 756], "extendednet": [143, 147], "extens": [472, 752, 755], "extent": [313, 335, 382, 444, 445, 446, 451, 453, 469, 470, 471, 474, 518, 519, 525, 528, 536, 541, 544, 754, 755, 765, 783, 810], "extent_defeatur": 760, "extent_typ": [756, 760, 773], "extern": [99, 481, 777], "extra": [22, 382], "extra_soldermask_clear": 22, "extract": 777, "extrem": 774, "f": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 801], "f28": 759, "f29": 759, "f7": 796, "f_adapt": 770, "facet": [345, 382], "facilit": [749, 774], "factor": [313, 335, 417, 450, 456, 469, 470, 471, 474, 519, 525, 528, 536, 690, 783], "fail": [62, 68, 69, 72, 74, 75, 77, 78, 80, 82, 87, 97, 105, 107, 108, 109, 110, 191, 222, 231, 356, 384, 386, 387, 406, 509, 517, 518, 522, 529, 530, 532, 542, 544, 546, 577, 578, 581, 582, 592, 604, 617, 625, 628, 631, 646, 652, 659, 695, 706, 707, 725, 727, 728, 729, 730, 733, 739, 742, 743, 747, 775], "failur": [382, 440], "fals": [8, 12, 23, 29, 31, 32, 62, 68, 69, 72, 74, 75, 76, 77, 78, 80, 81, 82, 87, 89, 97, 105, 107, 108, 109, 110, 121, 122, 170, 176, 191, 221, 222, 228, 229, 231, 234, 254, 255, 356, 367, 382, 384, 386, 387, 391, 393, 406, 407, 408, 409, 411, 424, 429, 434, 437, 439, 442, 451, 454, 455, 457, 458, 459, 460, 468, 469, 470, 471, 472, 473, 474, 476, 478, 481, 484, 487, 488, 497, 498, 499, 500, 502, 505, 509, 517, 518, 522, 527, 529, 530, 532, 542, 544, 546, 548, 549, 551, 552, 577, 578, 581, 582, 583, 584, 590, 592, 602, 604, 613, 616, 617, 621, 625, 626, 628, 631, 639, 640, 646, 650, 652, 658, 659, 667, 674, 690, 695, 700, 701, 706, 707, 711, 712, 713, 714, 725, 727, 728, 729, 730, 733, 739, 741, 742, 743, 749, 750, 751, 752, 754, 755, 756, 760, 762, 764, 768, 769, 770, 771, 773, 782, 804, 808, 809], "familiar": [747, 775], "far": 755, "far_field": 750, "farrad": 386, "fast": [755, 774], "faster": 780, "fastest": [549, 774], "fbga1517": 759, "featur": [429, 459, 746, 747, 775, 779], "feed": 750, "feedback": 779, "fenc": 646, "few": 763, "field": [111, 382, 809], "fieldplot": 750, "fig": 750, "figur": [749, 750, 752], "figurecanvasagg": [749, 750, 751, 752, 758, 759, 760, 762, 763, 764, 765, 766, 771], "file": [1, 13, 14, 83, 84, 99, 100, 107, 111, 382, 391, 392, 393, 461, 482, 483, 494, 501, 507, 562, 563, 567, 568, 667, 681, 700, 707, 711, 732, 735, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 761, 762, 763, 764, 766, 772, 774, 775, 782, 783, 793, 795, 796, 798, 803, 806, 809], "file_cfg": [768, 771], "file_edb": [768, 769, 770, 771, 773], "file_format": 700, "file_json": [769, 770, 773], "file_path": [13, 14, 84, 100, 707, 727, 728, 729, 730, 773], "filenam": [382, 753], "fill": [119, 690], "fill_materi": 771, "fillmateri": [690, 799, 804, 808], "filter": [92, 589, 590, 592, 602, 634, 636, 637, 638, 641], "final": [751, 758], "find": [85, 170, 222, 228, 274, 311, 548, 549, 550, 551, 552, 609, 612, 633, 640, 777], "findbynam": [135, 147, 169], "finish": [194, 752], "finit": 750, "firewal": 779, "first": [533, 586, 593, 715, 749, 750, 752, 753, 754, 755, 759, 762, 763, 766, 779, 809], "first_lay": [715, 765], "first_lin": [749, 750], "first_patch": [749, 750], "fist": 754, "fit": [696, 749, 761], "fit_al": 750, "fix": [170, 382, 548, 549, 550, 551, 552, 583, 747, 755, 775, 805, 806], "flag": [29, 30, 233, 280, 318, 368], "flake8": [747, 775], "flat": [579, 751, 753, 763, 764, 795], "flip": [89, 701, 711, 712, 713, 714, 765], "flipped_stackup": [711, 712, 713, 714], "float": [12, 15, 22, 35, 52, 61, 72, 74, 75, 76, 93, 108, 109, 110, 114, 171, 191, 194, 199, 200, 201, 217, 222, 228, 239, 240, 253, 254, 255, 261, 264, 300, 339, 343, 344, 347, 351, 353, 358, 359, 382, 384, 386, 387, 401, 413, 416, 417, 423, 427, 430, 431, 432, 433, 438, 444, 445, 446, 447, 450, 453, 467, 480, 490, 496, 513, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 534, 535, 536, 554, 555, 556, 557, 575, 579, 581, 593, 608, 610, 625, 640, 646, 650, 652, 658, 660, 661, 662, 663, 664, 665, 672, 673, 674, 675, 676, 677, 678, 679, 690, 698, 702, 713, 714, 722, 724, 809], "flot": [402, 405, 410, 415, 419, 420, 421, 422, 425, 428, 440], "flow": [382, 774], "folder": [1, 461, 747, 749, 750, 751, 752, 754, 755, 756, 758, 759, 763, 764, 765, 766, 773, 774, 775, 777], "follow": [3, 73, 111, 747, 749, 750, 752, 753, 754, 755, 756, 757, 758, 759, 761, 764, 765, 767, 772, 775, 777, 778], "footprint": 753, "forc": [382, 527, 544], "force_circuit_port": 527, "form": [93, 646], "format": [186, 193, 382, 495, 577, 585, 700, 707, 749, 750, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774], "formula": 191, "found": [92, 226, 228, 360, 382, 615, 625, 640, 707, 752], "fpath": [338, 339, 348, 700], "fr4": [753, 808], "fr4_epoxi": [690, 698, 749, 750, 751, 753, 754, 758, 763, 764, 768], "frac": 750, "framework": 779, "free": [749, 761, 777], "freedom": 751, "freq": [559, 750, 764], "freq_sweep": [770, 773], "freqstart": [749, 751, 764], "freqstop": [749, 751, 764], "frequenc": [382, 398, 399, 404, 408, 409, 416, 423, 431, 432, 433, 435, 436, 442, 555, 557, 559, 658, 668, 750, 752, 753, 754, 755, 765, 770, 773, 808, 809], "frequency_sweep": [753, 756, 809], "frequency_xtalk": 668, "frequenvci": 809, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 86, 88, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 127, 140, 154, 162, 168, 171, 178, 190, 202, 213, 214, 215, 216, 222, 228, 254, 255, 262, 298, 336, 349, 382, 391, 393, 455, 508, 509, 516, 520, 521, 523, 524, 527, 530, 531, 534, 535, 549, 550, 553, 559, 560, 561, 563, 567, 568, 571, 584, 586, 588, 592, 603, 607, 610, 617, 624, 635, 640, 641, 651, 652, 656, 657, 660, 661, 663, 664, 666, 673, 676, 677, 682, 688, 700, 707, 715, 716, 717, 746, 747, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773, 774, 775, 776, 779, 782, 783, 785, 786, 787, 790, 792, 793, 794, 795, 796, 799, 801, 803, 804, 806, 807, 808, 809, 811], "fromlay": [650, 749, 750, 754], "full": [83, 99, 107, 111, 461, 562, 563, 567, 732, 733, 735, 737, 738, 740, 743, 744, 773, 777], "full_comp_nam": 753, "fulli": [124, 222, 364], "func": [111, 749, 750], "function": [11, 127, 140, 154, 162, 178, 190, 213, 336, 349, 746, 749, 750, 751, 752, 753, 756, 763, 773, 774], "furnish": [749, 761], "futur": 780, "g": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766], "g4": 110, "gap": [68, 69, 105, 262, 267, 528, 749, 750, 795], "gap_port": [262, 795], "gapport": [263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 746, 769], "gds_fn": 765, "gds_in": 765, "gds_out": 765, "gener": [74, 382, 396, 451, 457, 610, 747, 749, 750, 751, 752, 753, 759, 760, 761, 762, 763, 764, 765, 766, 773, 775, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 808, 809, 811], "general_method": [749, 760, 761, 764, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "generate_excit": 808, "generate_solder_bal": 382, "generate_unique_folder_nam": [761, 764, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "generate_unique_nam": [749, 760, 764], "geometri": [179, 226, 360, 602, 762, 809], "geometrytyp": 635, "get": [25, 40, 51, 53, 58, 89, 94, 97, 161, 168, 184, 189, 202, 208, 217, 219, 227, 229, 236, 237, 248, 271, 272, 284, 291, 308, 309, 322, 324, 329, 330, 338, 339, 348, 350, 358, 359, 361, 364, 370, 371, 372, 375, 377, 510, 512, 513, 514, 515, 537, 543, 545, 566, 569, 590, 605, 610, 611, 620, 634, 635, 636, 641, 680, 685, 686, 687, 746, 759, 768, 771, 779, 781, 791, 801], "get_aedt_pin_nam": 214, "get_bounding_box": 790, "get_center_lin": 766, "get_component_by_nam": [89, 712, 713, 714], "get_component_net_connection_info": 759, "get_component_placement_vector": 712, "get_data_from_db": [768, 771], "get_dcconnected_net_list": 759, "get_extended_net": 610, "get_pin_from_compon": [0, 72, 521, 524, 531, 535, 661, 664, 673, 677, 785, 786, 787, 792, 794], "get_plot_data": [758, 759, 760, 762, 766], "get_polygons_by_lay": [585, 586, 766], "get_power_ground_net": 608, "get_powertre": 759, "get_rat": 759, "get_solution_data": [749, 750, 751, 752, 773], "get_statist": [789, 801], "get_touchstone_data": 764, "get_traces_for_plot": 750, "getid": [527, 795], "getnam": [86, 214, 759, 760, 761, 762, 765, 766], "getprimitivetyp": [527, 795], "gettempdir": 749, "getter": [749, 752], "ghz": [557, 559, 749, 750, 751, 753, 764, 807], "git": [747, 775], "github": [747, 775], "giva_angle_rad": 763, "give": [109, 382, 586, 588, 783], "given": [109, 191, 226, 228, 231, 360, 531, 549, 550, 577, 589, 609, 637, 639, 640, 652, 654, 673, 789], "glue": 690, "gnd": [6, 8, 74, 75, 140, 162, 228, 271, 308, 382, 520, 523, 534, 549, 582, 585, 586, 611, 631, 640, 646, 660, 663, 676, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 762, 763, 764, 766, 769, 770, 773, 782, 783, 786, 787, 789, 792, 794, 795, 796, 799, 808, 809], "gnd1": 771, "gnd2": [769, 771], "gnd_dict": 753, "gnd_dp": [752, 759, 762], "gnd_net_name_prefer": [271, 272, 273, 308, 309, 310], "gnd_poli": 751, "gnd_shape": 751, "gnd_via": [749, 750], "gndpinlist": 73, "go": [769, 770], "good": [382, 527], "grant": [749, 761], "graphic": [752, 754, 755, 756, 757, 774, 798], "greatli": 382, "grm32_dc0v_25degc": 752, "grm32_dc0v_25degc_seri": [62, 752, 773], "ground": [385, 468, 504, 604, 608, 611, 616, 657, 750, 751, 753, 754, 759, 763, 773], "ground_lay": [754, 763], "ground_net": [611, 614, 759], "group": [68, 73, 75, 78, 249, 382, 455, 520, 605, 648, 660, 662, 665, 669, 670, 671, 675, 678, 683, 759, 792, 794], "group_nam": [73, 669, 670, 794, 796], "grpc": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "gt": [749, 750, 751, 752, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "gui": 382, "guid": [747, 775, 781], "guidanc": [747, 775], "guidelin": 775, "gvia": [763, 764], "gvia_angl": 763, "gvia_num": 763, "gvia_num_sid": 763, "h1": 750, "h2": 750, "h28": 759, "h29": 759, "h3d": [749, 750, 751, 752, 753, 754, 756, 764, 773], "ha": [75, 222, 382, 406, 463, 527, 530, 549, 593, 610, 626, 707, 711, 747, 749, 750, 751, 752, 753, 754, 755, 756, 760, 764, 773, 775, 777], "had": 749, "handl": [75, 382, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774], "handler": [758, 759, 760, 761, 762, 763, 765, 766], "has_hol": 626, "has_rais": [758, 759, 760, 761, 762, 763, 765, 766], "have": [351, 382, 460, 461, 464, 530, 628, 707, 752, 754, 755, 763, 777, 779], "head": 771, "header": [111, 759], "headless": 774, "heal": 809, "healing_opt": 809, "height": [55, 74, 89, 97, 109, 176, 191, 577, 578, 586, 621, 696, 715, 749, 750, 808], "help": [750, 755, 777, 778, 779], "henc": 754, "henri": 386, "here": [382, 754, 779], "herebi": [749, 761], "hfss": [1, 5, 9, 10, 68, 69, 275, 312, 382, 398, 399, 400, 401, 402, 403, 405, 407, 412, 414, 416, 418, 430, 437, 444, 445, 446, 468, 476, 516, 517, 518, 519, 520, 521, 523, 524, 525, 527, 529, 531, 532, 534, 535, 536, 541, 628, 752, 754, 755, 756, 761, 764, 765, 774, 777, 786, 793, 795, 797, 798, 810], "hfss3dlayout": [382, 396, 749, 750, 751, 752, 753, 754, 755, 764, 773], "hfss_1": 770, "hfss_extent_info": 753, "hfss_port_set": 809, "hfss_region": 690, "hfss_setup": 770, "hfss_simulation_setup": 770, "hfss_solver_set": [753, 809], "hfss_type": 528, "hfssdlayout": 746, "hfsssimulationsetup": 770, "hierarchi": [11, 65, 66, 67, 70, 89, 101, 102, 106, 165, 752, 754], "high": [7, 382, 398, 774, 779], "high_frequ": 809, "higher": [555, 610, 753], "higher_frequ": 555, "highli": 382, "holder": [749, 761], "hole": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 240, 626, 627], "hole_rang": 626, "hole_wall_angl": 191, "holedepth": 191, "holediam": [4, 191, 626, 627, 749, 750, 751, 754, 763, 764, 804], "holediamet": 191, "honor": 459, "hook": [747, 775], "horizont": [313, 444, 469, 519, 525, 526, 528, 536], "horizontal_extent_factor": [519, 525, 528, 536, 753], "horizonz": 382, "host": [89, 747, 775], "hosting_cmp": [89, 712, 713, 714], "hosting_compon": [89, 712], "hosting_component_pin1": [89, 712], "hosting_component_pin2": [89, 712], "how": [262, 298, 747, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811], "howev": 777, "hsd_v1": [752, 755, 756, 759, 760, 761, 762, 766, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 796, 801, 803, 806, 807, 809, 811], "hsg": [384, 386, 387], "htm": 759, "html": 382, "http": [747, 775], "i": [0, 1, 3, 4, 7, 10, 12, 29, 31, 32, 68, 69, 73, 74, 75, 78, 81, 83, 86, 90, 92, 95, 98, 99, 107, 108, 109, 111, 121, 122, 176, 191, 214, 217, 221, 222, 224, 228, 229, 231, 232, 233, 234, 235, 240, 241, 246, 252, 254, 255, 260, 269, 271, 278, 279, 280, 281, 282, 283, 294, 303, 306, 308, 316, 317, 318, 319, 320, 321, 340, 341, 342, 345, 351, 365, 367, 368, 369, 376, 379, 382, 385, 397, 408, 409, 424, 434, 439, 441, 442, 447, 454, 455, 457, 460, 461, 469, 470, 471, 472, 473, 474, 475, 477, 504, 511, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 538, 546, 549, 550, 575, 577, 578, 579, 581, 586, 590, 592, 602, 604, 609, 610, 611, 613, 615, 616, 621, 625, 626, 627, 628, 637, 638, 639, 640, 641, 646, 650, 653, 654, 657, 658, 660, 662, 663, 664, 666, 667, 668, 670, 672, 673, 676, 677, 679, 690, 695, 698, 700, 706, 707, 711, 712, 713, 714, 715, 716, 724, 725, 727, 728, 730, 733, 743, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 779, 780, 781], "i1": 759, "i22": 794, "ic": [7, 109, 765], "ic2": 759, "icepak": [382, 483, 681, 682, 729, 742, 774, 777], "icepak_simulation_nam": 742, "id": [226, 360, 519, 525, 526, 528, 536, 565, 576, 588, 633, 634, 637, 654, 705, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "idea": 779, "ident": [758, 759, 760, 761, 762, 763, 765, 766], "identifi": [696, 749, 761], "ignor": [68, 75, 78, 176, 382, 410, 422, 460, 621, 715], "illeg": [551, 552], "illustr": [757, 767, 772], "imag": [176, 295, 621, 715, 754, 755], "impact": [382, 592, 755], "imped": [68, 75, 78, 382, 384, 387, 520, 521, 526, 527, 528, 536, 544, 660, 661, 662, 668, 672, 675, 678, 792], "impedance_valu": [520, 660], "implement": [7, 608, 780], "impli": [749, 761], "implicitli": 10, "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 88, 91, 92, 93, 95, 96, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 127, 140, 154, 162, 168, 178, 190, 213, 214, 222, 262, 298, 336, 349, 382, 391, 393, 484, 509, 516, 520, 521, 523, 524, 531, 534, 535, 559, 571, 603, 610, 624, 656, 657, 660, 661, 663, 664, 666, 673, 676, 677, 700, 707, 746, 751, 753, 754, 759, 760, 763, 766, 774, 778, 780, 781, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 799, 801, 803, 804, 806, 807, 808, 809, 811], "import_bom": 752, "import_definit": 752, "import_dummy_net": 765, "import_layout_pcb": 765, "import_opt": 765, "import_stackup": 753, "improv": [382, 751], "inc": [749, 761], "inch": 760, "includ": [176, 231, 232, 351, 382, 448, 460, 593, 613, 621, 637, 638, 700, 746, 749, 750, 752, 756, 760, 761, 762, 765, 774, 779, 783, 808], "include_material_with_lay": 700, "include_only_selected_net": 808, "include_parti": 231, "include_pow": 610, "include_sign": 610, "include_void": 351, "increas": 774, "increment": [770, 773], "ind": [12, 752], "ind_valu": 108, "indent": [768, 769, 770, 771, 773], "independ": 750, "index": [99, 637, 638, 759, 777, 779, 781], "indic": [29, 30, 233, 280, 318, 368], "individu": 382, "induct": [12, 28, 267, 382, 386, 478, 532, 610], "inductor": [72, 76, 108, 111, 610, 611, 674, 756], "inductor_below": [610, 756], "info": [747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775], "info_tim": [760, 766], "inform": [1, 88, 541, 747, 752, 759, 765, 774, 775, 776, 777, 779, 781, 798], "inherit": [127, 140, 154, 162, 178, 190, 213, 336, 349, 382, 656, 746], "initi": [1, 7, 382, 461, 485, 724, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "initial_posit": 750, "inner": 698, "inner1": 771, "inner2": 771, "inner3": 771, "inner4": 771, "inner5": 771, "inner6": [769, 771], "inner_layer_thick": [698, 754, 763], "input": [66, 358, 359, 382, 724, 756, 763, 766, 773], "input_dict": 570, "input_fil": 393, "inscrib": 222, "insert": [690, 754, 763, 771], "insert_abov": 690, "insert_below": 690, "insert_infinite_spher": 750, "insert_layout_compon": 750, "insid": [111, 222, 364, 381, 389, 700, 770, 778], "instal": [724, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773, 775, 776, 781], "install_pyedb_from_wheelhous": 779, "instanc": [20, 33, 75, 76, 78, 191, 213, 214, 217, 222, 223, 228, 231, 232, 234, 238, 240, 241, 246, 251, 253, 262, 270, 271, 272, 274, 293, 298, 307, 308, 309, 311, 332, 384, 386, 387, 393, 527, 605, 620, 628, 631, 633, 634, 636, 637, 638, 640, 643, 646, 649, 654, 655, 746, 750, 752, 754, 756, 759, 760, 761, 763, 766, 773, 789, 798, 805], "instanti": [382, 759], "instead": [69, 434, 439, 527, 628, 747, 749, 750, 751, 752, 753, 754, 755, 756, 764, 775], "int": [12, 27, 42, 59, 98, 99, 109, 124, 179, 180, 181, 204, 228, 230, 259, 276, 296, 314, 333, 345, 362, 364, 385, 404, 412, 414, 418, 486, 489, 492, 493, 503, 504, 519, 525, 526, 528, 530, 536, 538, 539, 554, 555, 556, 557, 576, 588, 610, 621, 628, 633, 634, 635, 640, 642, 644, 645, 646, 654, 658, 662, 665, 669, 675, 678, 679, 690, 698, 708, 710, 724, 795], "integ": [124, 180, 181, 382, 644, 645], "integr": [7, 65, 382, 755, 765, 774, 784], "intempt": [749, 750, 751, 753, 754, 758, 763, 764], "intend": 774, "inter": 411, "interact": [749, 750, 751, 752, 758, 759, 760, 762, 763, 764, 765, 766, 771, 774, 781], "interactiveshel": [758, 759, 760, 761, 762, 763, 765, 766], "interfac": [750, 751, 752, 756, 759, 774, 776, 779, 781], "intern": [747, 753, 775], "interpol": [413, 427, 434, 439, 749, 751, 764, 770, 773], "interpolation_max_solut": [749, 751, 764], "interpolation_tol_perc": [749, 751, 764], "interpret": [777, 779], "intersect": [231, 364, 550, 637], "intesect": 366, "intrins": 750, "intrinsincdict": 764, "inupt": 66, "invalidboundari": [263, 299], "invert": [712, 713, 714], "invest": 755, "investig": 751, "io_loop": [758, 759, 760, 761, 762, 763, 765, 766], "ipc": 760, "ipc2581_file_nam": 760, "ipc_path": 760, "ipkernel": [758, 759, 760, 761, 762, 763, 765, 766], "ipykernel": [758, 759, 760, 761, 762, 763, 765, 766], "ipykernel_1400": 762, "ipykernel_1792": 759, "ipykernel_3036": 763, "ipykernel_3300": 758, "ipykernel_3376": 761, "ipykernel_4408": 766, "ipykernel_5720": 764, "ipykernel_6676": 760, "ipykernel_7116": 765, "ipykernel_launch": [758, 759, 760, 761, 762, 763, 765, 766], "ipython": [758, 759, 760, 761, 762, 763, 765, 766, 768, 771], "is_act": 679, "is_circuit_port": [221, 795], "is_en": 0, "is_intersect": 766, "is_neg": 690, "is_parallel": [12, 72, 76, 674, 752], "is_paramet": [754, 763], "is_percentag": 750, "is_pin": [650, 754], "is_ready_to_simul": 755, "is_rlc": 72, "is_void": [6, 349, 590], "is_wave_port": 764, "isnul": [136, 148, 159, 172], "isort": [747, 775], "isparallel": 108, "ispowerground": 173, "issu": [382, 583, 776], "istopplac": [654, 749, 750], "isvoid": 349, "iswav": 764, "item": [105, 756, 761, 801], "iter": [562, 750, 752, 755], "its": [406, 579, 711, 749, 761, 777], "j2l1": 8, "j4a2": 110, "j5": [228, 640], "jedec4": 574, "job": 774, "join": [8, 749, 750, 751, 752, 753, 754, 758, 759, 760, 763, 764, 765, 766, 773], "json": [8, 84, 100, 391, 393, 700, 707, 752], "jupyt": [748, 751, 773], "just": 222, "k28": 759, "k29": 759, "kapdbondwir": 574, "kbroadband": 809, "kcurrentsourc": [263, 299], "kdctermin": [263, 299], "keep": [382, 530, 700, 747, 775], "keep_disjoint_pin": 549, "keep_only_main_net": 549, "kei": [78, 504, 596, 598, 599, 745, 749, 750, 751, 752, 753, 754, 756, 759, 763, 773, 801], "kept": 773, "kernelapp": [758, 759, 760, 761, 762, 763, 765, 766], "kernelbas": [758, 759, 760, 761, 762, 763, 765, 766], "keyword": [769, 770, 773], "khz": 753, "kind": [382, 749, 761], "kjdecbondwir": 574, "knexximground": [263, 299], "knexximport": [263, 299], "known": 773, "knum25dviastyl": 809, "kvoltageprob": [263, 299], "kvoltagesourc": [263, 299], "kwarg": [117, 126, 554, 555, 556, 557, 558, 559, 689, 691, 692, 693, 694, 758, 759, 760, 761, 762, 763, 765, 766], "l1": 750, "l10": [754, 759, 763], "l2": [750, 753], "l3": 753, "l4": 753, "l5": 753, "l_valu": [72, 76, 386, 674, 787], "lambda": [382, 407, 750, 753], "lamin": [708, 715], "larg": [382, 584, 774], "larger": [646, 774], "laser": 191, "laser_angl": 191, "last": [382, 406, 461, 715, 758, 759, 760, 761, 762, 763, 765, 766], "last_lay": 715, "later": [754, 763, 777, 779], "latest": [724, 747, 775, 780], "lattic": 222, "launch": [10, 328, 519, 525, 528, 536, 746, 753, 754, 755, 773, 774], "launch_inst": [758, 759, 760, 761, 762, 763, 765, 766], "launch_new_inst": [758, 759, 760, 761, 762, 763, 765, 766], "layer": [22, 35, 48, 59, 61, 72, 117, 118, 119, 121, 122, 123, 124, 125, 176, 178, 210, 211, 212, 215, 216, 222, 232, 237, 238, 239, 250, 254, 255, 256, 257, 259, 261, 371, 456, 463, 464, 526, 527, 528, 530, 574, 575, 577, 578, 579, 587, 589, 593, 596, 598, 602, 613, 621, 626, 627, 635, 651, 653, 654, 672, 684, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 703, 705, 707, 709, 710, 712, 713, 714, 715, 716, 717, 718, 720, 721, 723, 746, 751, 752, 753, 754, 755, 756, 759, 760, 762, 763, 764, 765, 766, 769, 771, 773, 795, 797, 798, 808], "layer1": 765, "layer2": 765, "layer_align": 526, "layer_clon": 719, "layer_count": [698, 754, 763], "layer_data": [117, 690, 699, 704, 715, 720, 750, 753, 758], "layer_dict": 764, "layer_map": 765, "layer_nam": [178, 222, 232, 575, 577, 578, 579, 587, 590, 602, 651, 653, 672, 690, 751, 753, 754, 763, 764, 766, 770, 796, 799, 801, 804, 808], "layer_snap_tol": 809, "layer_typ": [117, 689, 690, 691, 692, 693, 694, 749, 750, 751, 753, 758], "layeredbclass": [118, 119, 120, 121, 122, 123, 124, 125, 126, 690, 704, 715, 720, 746], "layernam": 635, "layers_nam": 593, "layout": [10, 32, 33, 83, 135, 147, 166, 169, 226, 228, 234, 360, 382, 406, 415, 422, 527, 530, 538, 539, 542, 547, 548, 584, 609, 640, 648, 683, 696, 701, 702, 707, 711, 712, 713, 714, 722, 751, 752, 753, 756, 760, 761, 763, 765, 774, 782, 783, 793, 795, 796, 798, 800, 806, 809], "layout_count": [754, 763], "layout_exampl": 778, "layout_stat": 801, "layout_valid": [547, 548, 549], "layoutcompon": 750, "layoutinst": 244, "layoutobjinst": 244, "layoutvalid": [548, 549, 550, 551, 552], "ld_library_path": 777, "learn": [776, 781, 784, 788, 791, 797, 798, 800, 802, 805, 810], "least": 783, "leav": 382, "left": [15, 264, 300, 352, 353, 538, 578], "legaci": [749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 779], "legend": [176, 621], "len": [751, 759, 760, 766], "length": [76, 254, 255, 304, 485, 586, 749, 750, 752, 760, 770, 809], "lengthmeshoper": 753, "less": 549, "level": [382, 658, 774], "leverag": 382, "liabil": [749, 761], "liabl": [749, 761], "lib": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "lib64": 777, "librari": [262, 298, 556, 569, 749, 750, 751, 753, 754, 758, 763, 764, 773, 781], "licens": [749, 761, 777], "like": [241, 382, 750, 754, 758, 774, 777], "limit": [228, 640, 749, 753, 759, 761, 763], "line": [6, 440, 646, 749, 750, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774, 779], "line_3": 764, "linear": [382, 436, 658, 751, 753, 756, 764, 809], "linear_arrai": [749, 750], "linear_array0": 750, "linear_count": [770, 773], "linear_scal": [770, 773], "lineararrai": [749, 750], "link": [746, 777], "linux": 774, "linux64": 777, "list": [1, 15, 17, 41, 46, 72, 73, 74, 75, 76, 77, 78, 79, 81, 90, 91, 92, 93, 95, 96, 98, 103, 110, 165, 170, 175, 176, 177, 185, 187, 197, 201, 209, 210, 217, 222, 226, 227, 228, 232, 238, 246, 249, 251, 264, 266, 272, 273, 300, 302, 309, 310, 336, 337, 338, 345, 346, 348, 352, 353, 354, 358, 359, 360, 361, 363, 378, 380, 381, 382, 447, 448, 449, 456, 462, 463, 464, 465, 466, 519, 522, 525, 526, 527, 528, 530, 533, 536, 538, 548, 549, 550, 559, 572, 573, 576, 577, 578, 579, 582, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 597, 600, 602, 604, 607, 608, 610, 611, 613, 616, 617, 618, 621, 630, 631, 634, 636, 637, 638, 640, 641, 642, 643, 648, 650, 669, 672, 674, 683, 684, 705, 715, 752, 754, 756, 759, 762, 766, 770, 773, 777, 789, 792, 795, 801], "list_of_deleted_rlc": 81, "list_of_padstack_inst": 222, "literal_ev": 613, "load": [10, 99, 392, 563, 564, 679, 749, 750, 751, 752, 753, 756, 764, 774, 782, 783, 793, 795, 796, 798, 806, 809], "load_ipc_model": 760, "load_regulation_curr": 679, "load_regulation_perc": 679, "loc": 658, "local": [382, 496, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773], "local_path": 765, "locat": [75, 176, 382, 527, 530, 621, 684, 715, 753, 754, 755, 779, 795], "lock": [732, 750], "log": [382, 404, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 809], "log_scal": [770, 773], "log_x": 764, "logarithm": 753, "logcount": 436, "logger": [747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775], "logic": 760, "longer": [747, 775], "longest": [372, 377], "look": [530, 660, 663, 676, 781], "loop": [382, 506, 549, 550], "loss": [555, 556, 557, 559], "loss_tan": 559, "loss_tang": [559, 768], "loss_tangent_at_frequ": 557, "loss_tangent_high": 555, "loss_tangent_low": 555, "lot": 382, "low": [399, 809], "low_frequ": 809, "lower": [15, 35, 239, 264, 300, 352, 353, 382, 526, 538, 555, 578, 610, 761], "lower_freq": 555, "lower_frequ": 555, "lower_left": 352, "lower_left_point": [6, 578, 764], "lowerleftupperright": 578, "lt": [749, 750, 751, 752, 753, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "lump": [527, 530, 628], "lvalu": [532, 786], "m": [747, 758, 759, 760, 762, 763, 765, 766, 775], "m1": [753, 809], "m15": 759, "m2": 809, "m28": 759, "m29": 759, "m3": 240, "m_dq": 74, "m_ma": 3, "machin": 748, "mag_": [750, 764], "magnetic_loss_tang": 768, "magnitud": [413, 665, 678], "mai": [750, 752, 753, 754, 755, 779], "main": [0, 3, 4, 572, 577, 752, 755, 756, 759, 760, 761, 762, 766, 768, 769, 770, 771, 773], "main_glob": [758, 759, 760, 761, 762, 763, 764, 765, 766], "main_shap": [577, 751], "maintain": [779, 780], "make": [382, 461, 759, 774, 779, 781], "manag": [0, 2, 3, 4, 6, 11, 64, 117, 127, 140, 154, 162, 178, 190, 213, 262, 298, 336, 349, 508, 516, 547, 553, 571, 603, 624, 656, 688, 724, 746, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "mand": 461, "mani": [751, 754, 759, 781], "manipul": [755, 759, 774, 803], "manual": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766], "map": [392, 752, 754, 765], "mask": 771, "mass_dens": 768, "materi": [1, 119, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 574, 690, 698, 700, 749, 750, 751, 752, 753, 754, 755, 758, 763, 764, 765, 771, 774, 801], "material_nam": [560, 561, 568, 570], "matplotlib": [176, 613, 621, 715, 749, 750, 758, 763, 764, 765, 771, 801], "matrix": 403, "matter": 707, "max": 750, "max_arc_point": [752, 809], "max_delta_": 753, "max_delta_z0": 809, "max_el": 809, "max_length": [753, 770, 809], "max_limit": [228, 640], "max_mag_delta_": [382, 770], "max_num_pass": [382, 752, 753, 770], "max_refine_per_pass": 809, "max_thick": 715, "max_triangles_wave_port": 809, "maximum": [222, 228, 382, 412, 414, 415, 485, 486, 581, 640, 750, 770, 809], "maximum_surface_devi": 581, "maximumpass": 750, "maxpass": [749, 751, 764], "maxwel": 774, "mean": [586, 774, 798], "measur": [690, 771], "medium": 382, "megtron4": [768, 771], "megtron4_2": [768, 771], "megtron4_3": [768, 771], "memori": [382, 774, 798], "merchant": [749, 761], "merg": [617, 696, 712, 713, 714, 749, 761], "mesh": [382, 398, 399, 401, 402, 405, 406, 407, 412, 414, 416, 417, 419, 420, 430, 437, 485, 487, 488, 490, 491, 496, 497, 646, 750, 753, 770, 809], "mesh_display_attribut": 809, "mesh_freq": 382, "mesh_oper": [753, 770], "messag": [747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 775], "message_text": [758, 759, 760, 761, 762, 763, 765, 766], "messeng": [747, 775], "met1": 765, "met2": 765, "metal": [240, 382, 584, 706], "metal6": 765, "metal_layer_snapping_toler": 765, "meter": [22, 74, 93, 382, 444, 445, 446, 453, 527, 549, 769], "method": [5, 6, 9, 11, 64, 117, 127, 140, 154, 162, 178, 190, 213, 217, 262, 298, 349, 382, 389, 406, 441, 508, 516, 547, 553, 571, 603, 608, 624, 628, 646, 656, 688, 690, 696, 712, 713, 714, 716, 724, 746, 749, 750, 751, 752, 753, 754, 755, 756, 759, 762, 764, 766, 773, 774], "mfg": [254, 255], "mhz": 753, "microstrip": 751, "microvia": [191, 209], "mid": [74, 109, 336, 344], "mid_point": 336, "middl": 527, "midpoint": 358, "might": [111, 382, 527, 747, 775], "min_num_pass": 382, "min_pass": 809, "min_thick": 715, "min_triangles_wave_port": 809, "minim": 546, "minima": 382, "minimum": [382, 418, 419, 420, 421, 422, 489, 490, 491, 625, 646, 809], "minimum_value_to_replac": 625, "minimum_via_numb": 646, "minimum_void_surfac": 382, "misc": [752, 753, 755, 756, 759, 760, 761, 762, 765, 766, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "mit": [749, 761], "miter": 579, "mitig": 779, "mix": [382, 403], "mm": [750, 759, 764], "mod": 752, "mode": [25, 715, 746, 747, 752, 754, 755, 756, 759, 775], "model": [13, 14, 31, 37, 40, 53, 58, 62, 68, 69, 72, 76, 81, 105, 107, 109, 222, 336, 349, 555, 557, 559, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 674, 746, 749, 750, 751, 752, 753, 755, 756, 758, 760, 763, 764, 766, 774, 795, 804, 808, 809, 811], "model_nam": 752, "model_typ": [107, 752, 809], "model_unit": 750, "modelnam": 107, "modelpath": 107, "modern": 779, "modif": 759, "modifi": [696, 749, 751, 761, 774, 798], "modul": [10, 679, 687, 746, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773, 779, 781], "monitor": 750, "mono": 777, "mop": 809, "mop_1": 770, "more": [91, 363, 378, 380, 382, 522, 549, 607, 750, 759, 774, 777, 779, 781], "most": [758, 759, 760, 761, 762, 763, 765, 766, 774, 783, 803], "mount": [32, 89], "mounted_cmp": [89, 712, 713, 714], "mounted_compon": [89, 712], "mounted_component_pin1": [89, 712], "mounted_component_pin2": [89, 712], "ms_clearanc": 764, "ms_length": 764, "ms_space": 751, "ms_width": [751, 764], "msc": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "msg": [758, 759, 760, 761, 762, 763, 765, 766], "much": 774, "multi": [455, 809], "multipl": [209, 469, 470, 471, 474, 533, 762], "multipol": 559, "multithread": [752, 755, 756, 760, 766, 773], "multizon": 708, "must": [74, 76, 111, 382, 385, 519, 525, 526, 527, 528, 536, 628, 646, 707, 746, 755, 777, 779, 783], "my": [747, 775], "my_connector": 753, "my_edb": 382, "my_edb_fil": 78, "my_fil": 382, "my_mp_deby": 559, "my_project": 746, "my_project_vari": 811, "my_report": 382, "my_setup": 657, "my_vari": 811, "myaedb": [262, 298], "myaedbfold": [64, 65, 66, 67, 70, 71, 72, 73, 74, 80, 81, 82, 86, 88, 91, 92, 93, 95, 96, 98, 101, 102, 106, 107, 108, 109, 110, 214, 222, 516, 520, 521, 523, 524, 531, 534, 535, 571, 603, 624, 656, 660, 661, 663, 664, 666, 673, 676, 677], "mydata": 7, "mydcir_4": 759, "myedb": [0, 1, 2, 3, 4, 5, 6, 8, 9, 127, 140, 154, 162, 178, 190, 213, 336, 349], "mygndpingroup": 73, "mymateri": 801, "mymet": 801, "mypad": [178, 190], "myproject": [649, 655], "myvariablenam": 246, "myvariablenamesi": 246, "myvariablenamesx": 246, "myvia": 758, "n": [751, 756], "n_print": 759, "name": [13, 14, 23, 44, 45, 48, 49, 62, 71, 72, 73, 74, 75, 76, 80, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 117, 128, 130, 140, 141, 143, 155, 156, 162, 166, 170, 176, 178, 211, 212, 214, 215, 216, 220, 221, 222, 223, 229, 232, 237, 243, 245, 246, 250, 254, 255, 256, 257, 271, 272, 273, 289, 292, 308, 309, 310, 327, 331, 371, 375, 382, 384, 385, 386, 387, 391, 392, 393, 395, 435, 448, 449, 456, 462, 463, 464, 465, 504, 508, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 548, 549, 551, 554, 555, 556, 557, 558, 559, 561, 565, 567, 568, 574, 575, 576, 577, 578, 579, 582, 585, 587, 589, 592, 593, 596, 598, 599, 602, 609, 612, 613, 614, 615, 616, 617, 618, 621, 626, 627, 628, 631, 632, 634, 636, 637, 638, 639, 641, 643, 646, 650, 651, 653, 654, 657, 660, 661, 662, 663, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 684, 689, 690, 691, 692, 693, 694, 695, 717, 727, 728, 729, 730, 732, 735, 736, 742, 743, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 792, 794, 795, 801, 807, 809], "nan": [768, 771], "nat": 599, "nativ": [382, 774, 780], "nb_patch": [749, 750], "nbottom": 759, "nbpatch": [749, 750], "ncol": 759, "nearest": [228, 640], "nearest_pin": 769, "necessari": 222, "need": [111, 382, 546, 592, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 774, 777, 780, 783], "neg": [131, 138, 221, 367, 382, 384, 385, 386, 387, 445, 470, 504, 520, 523, 524, 525, 531, 532, 534, 535, 660, 662, 663, 664, 665, 673, 675, 676, 677, 678, 679, 684, 690, 756, 769], "neg_pin": [521, 524, 531, 535, 661, 664, 673, 677], "neg_pin_group_nam": [662, 665, 675, 678, 794], "negative_component_nam": [520, 523, 534, 660, 663, 676], "negative_lay": 684, "negative_loc": 684, "negative_net": 127, "negative_net_nam": [520, 523, 534, 660, 663, 676, 684], "negative_node_compon": [382, 384, 386, 387], "negative_node_net": [382, 384, 386, 387], "negative_pin": 532, "negative_points_on_edg": 525, "negative_primitive_id": 525, "negative_sensor_pin": 679, "negative_termin": [751, 756, 769, 773], "nest": [533, 749], "net": [1, 62, 74, 88, 90, 91, 92, 94, 95, 96, 128, 131, 132, 133, 135, 138, 139, 140, 141, 144, 147, 155, 157, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 191, 228, 232, 243, 271, 272, 273, 289, 292, 308, 309, 310, 327, 331, 338, 339, 348, 375, 382, 384, 386, 387, 455, 460, 462, 465, 520, 522, 523, 530, 533, 534, 548, 549, 550, 551, 574, 575, 577, 578, 579, 582, 587, 589, 593, 599, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 628, 631, 634, 636, 637, 638, 639, 640, 641, 646, 650, 660, 663, 666, 670, 672, 676, 684, 746, 749, 751, 752, 754, 755, 760, 764, 766, 773, 779, 783, 784, 786, 787, 793, 794, 808], "net1": [382, 607, 808], "net2": [382, 549, 607], "net_class": [3, 154], "net_group": 759, "net_list": [74, 522, 548, 549, 550, 584, 587, 641, 756, 761], "net_n": 751, "net_nam": [6, 75, 94, 95, 232, 575, 577, 578, 579, 582, 590, 609, 612, 615, 631, 634, 636, 646, 650, 666, 670, 749, 750, 751, 754, 756, 759, 761, 763, 764, 766, 789, 794, 796, 808], "net_name_1": 770, "net_name_2": 770, "net_names_list": [602, 617], "net_obj": 756, "net_p": 751, "netc271_1": 759, "netclass": [136, 137, 148, 149, 156, 159, 160], "netd3_2": 759, "netic1_8": 759, "netlist": [40, 90, 549, 550, 607, 759, 760, 789], "netnam": [73, 92, 639, 649, 655], "netname_list": 616, "netr22_1": 759, "netr8_1": 759, "nets_data": [18, 39, 127, 140, 154, 162, 168, 221, 242, 265, 288, 301, 326, 355, 374, 619], "nets_layers_list": 770, "nets_n": 756, "nets_nam": 593, "nets_p": 756, "network": [382, 777, 787], "new": [72, 128, 141, 155, 229, 443, 461, 473, 475, 522, 549, 554, 556, 558, 561, 632, 690, 712, 713, 747, 749, 750, 751, 752, 753, 754, 755, 756, 763, 764, 773, 775, 779], "new_desktop": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "new_desktop_sess": [749, 750, 751, 752, 753, 754, 755, 756, 764], "new_material_nam": 561, "new_padstack_nam": 632, "new_report": 750, "new_simulation_configur": [8, 382, 752, 754, 755, 782, 808], "new_simulaton_configur": 752, "new_vari": 509, "new_w": 766, "next": [625, 752], "ng_mode": [768, 769, 770, 771, 773], "node": [384, 385, 386, 387, 504], "node_to_ground": [382, 385], "nomin": 752, "nominal_adapt": [750, 764], "non": [752, 755, 756, 757, 758, 759, 760, 762, 763, 765, 766, 771, 774, 798], "non_graph": [749, 750, 751, 752, 754, 755, 756, 764, 773], "nondwir": 382, "none": [3, 12, 13, 14, 16, 23, 28, 31, 50, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 90, 92, 94, 95, 99, 105, 107, 108, 109, 110, 117, 127, 140, 154, 176, 220, 221, 223, 229, 232, 246, 271, 272, 273, 308, 309, 310, 382, 385, 443, 460, 461, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 536, 538, 539, 542, 544, 546, 548, 549, 550, 557, 562, 574, 575, 576, 584, 587, 589, 590, 592, 593, 602, 604, 610, 613, 621, 626, 627, 628, 634, 637, 638, 639, 641, 646, 650, 651, 653, 657, 659, 660, 661, 662, 663, 665, 669, 670, 672, 676, 678, 679, 688, 690, 712, 713, 715, 724, 733, 743, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 789, 795], "nonfunct": 410, "noninfring": [749, 761], "notbook": 773, "note": [707, 751, 755, 760, 762, 777], "notebook": [748, 751], "notic": [749, 761], "now": [749, 750, 755], "np": [753, 763, 764], "nport": 103, "nport_comp_definit": 752, "null": [233, 280, 318, 368], "num_cor": [753, 756], "num_of_freq_point": [749, 751, 764], "number": [42, 59, 114, 248, 259, 345, 382, 404, 406, 412, 414, 418, 486, 489, 492, 493, 530, 539, 542, 549, 634, 646, 698, 707, 710, 750, 752, 753, 754, 755, 759, 763, 770, 773, 809], "number_of_layer_el": 809, "number_of_termin": 753, "number_of_thread": 760, "numpi": [753, 763, 764], "o": [8, 749, 750, 751, 752, 753, 754, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 780], "obj": 75, "object": [0, 3, 4, 11, 18, 21, 29, 30, 33, 39, 75, 76, 77, 92, 102, 116, 127, 128, 129, 131, 132, 133, 140, 141, 142, 144, 154, 155, 157, 162, 163, 164, 178, 180, 181, 190, 191, 213, 226, 227, 229, 231, 233, 236, 242, 244, 247, 262, 265, 280, 288, 293, 297, 298, 301, 318, 326, 332, 334, 349, 355, 360, 361, 364, 368, 370, 374, 381, 382, 391, 393, 403, 426, 436, 452, 517, 518, 521, 524, 527, 530, 531, 533, 535, 542, 544, 546, 549, 572, 574, 575, 577, 580, 584, 587, 602, 606, 609, 628, 629, 638, 644, 645, 654, 656, 657, 658, 659, 661, 664, 668, 673, 677, 749, 750, 751, 752, 753, 754, 756, 763, 764, 770, 773, 803, 808], "object_list": [758, 759, 760, 762, 766], "obsolet": 449, "obtain": [86, 214, 749, 759, 761], "occur": [228, 640], "odd": 763, "oeditor": 764, "oervwritt": 382, "offici": 779, "offset": [89, 182, 183, 195, 196, 215, 216, 254, 255, 592, 626, 653, 711, 712, 713, 714], "offset_i": [626, 711, 712, 713, 714], "offset_nam": 592, "offset_x": [626, 711, 712, 713, 714], "offset_z": [711, 714], "offseti": 635, "offsetx": [592, 635], "often": 382, "oghz": 755, "ohm": [386, 527, 544, 672], "ohz": 382, "omit": 382, "onc": [752, 761, 779, 780], "one": [74, 75, 91, 228, 363, 378, 380, 382, 434, 447, 455, 461, 504, 522, 533, 549, 586, 607, 616, 625, 640, 646, 750, 759, 762, 763, 778, 780, 783], "ones": [75, 382, 700], "onli": [7, 68, 69, 74, 75, 76, 78, 81, 105, 109, 170, 191, 228, 229, 381, 382, 460, 527, 530, 546, 548, 611, 613, 621, 626, 640, 657, 682, 690, 700, 706, 715, 746, 747, 751, 754, 756, 759, 762, 773, 775, 779, 780, 783, 808, 809], "only_met": 706, "opaqu": 124, "open": [1, 382, 394, 711, 733, 750, 751, 754, 756, 759, 760, 762, 766, 768, 769, 770, 771, 773, 774, 779, 786, 787], "open_edb": [759, 760, 761, 762, 765, 766], "open_project": [7, 759], "oper": [626, 627, 639, 716, 753, 760, 770, 773, 774, 777, 809], "optian": [271, 308], "optimum": 503, "option": [12, 13, 14, 22, 23, 62, 68, 72, 73, 74, 75, 78, 81, 83, 89, 90, 92, 94, 95, 98, 99, 107, 108, 109, 110, 111, 170, 176, 191, 221, 222, 228, 229, 231, 246, 254, 266, 271, 272, 273, 302, 308, 309, 310, 351, 382, 385, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 538, 548, 549, 550, 575, 577, 578, 579, 581, 584, 587, 589, 590, 592, 593, 601, 602, 604, 608, 609, 610, 611, 613, 621, 626, 627, 628, 632, 634, 637, 638, 639, 640, 646, 650, 651, 653, 654, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 675, 676, 677, 678, 679, 689, 690, 691, 692, 693, 694, 698, 700, 706, 711, 712, 713, 714, 715, 724, 725, 727, 728, 730, 733, 743, 747, 773, 775, 809], "order": [15, 222, 264, 300, 353, 382, 403, 549, 696, 707, 809], "order_basi": [753, 809], "order_by_area": 549, "orient": [109, 774], "origin": 592, "other": [254, 255, 364, 382, 406, 549, 746, 749, 751, 752, 761, 777], "otherwis": [23, 29, 92, 121, 122, 234, 254, 255, 367, 616, 707, 749, 761], "out": [749, 751, 752, 755, 761], "outer": [698, 750, 753], "outer_layer_thick": [698, 754, 763], "outlin": [176, 613, 621, 695, 771], "outline_nam": 695, "output": [66, 252, 260, 376, 379, 382, 461, 759, 765], "output_aedb": 382, "output_fil": 391, "output_net": 759, "outsid": [751, 752, 753, 754, 755, 756, 764, 773], "oval": 653, "over": [562, 711], "overal": [747, 775], "overlai": 771, "overlap": [382, 690, 708, 715], "overwrit": [74, 628], "overwritten": [74, 447, 461], "own": 779, "p": [751, 766], "p1": 765, "p13": 759, "p22": 759, "p23": 794, "p24": 759, "p28": 759, "p29": 759, "p_edb": [64, 516, 571, 603, 624, 656], "p_edb_padstack": 178, "packag": [7, 23, 43, 382, 748, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 777, 779], "pad": [178, 189, 222, 271, 272, 308, 309, 410, 419, 625, 626, 627, 635, 651, 652, 653, 755, 798, 804, 805, 806], "pad2": 804, "pad_by_lay": 178, "pad_diam": 751, "pad_instance1": 804, "pad_instance2": 804, "pad_instance3": 804, "pad_offset_i": 626, "pad_offset_x": 626, "pad_param": 653, "pad_polygon": 626, "pad_rot": [626, 653], "pad_shap": [626, 653, 804], "pad_typ": [178, 635], "pad_x_offset": 653, "pad_y_offset": 653, "paddiam": [4, 626, 627, 749, 750, 751, 754, 763, 764, 804], "padedg": [272, 309], "padgeometrytyp": [180, 181, 644, 645], "padparamet": 651, "padstack": [1, 74, 76, 178, 190, 191, 202, 207, 208, 209, 213, 214, 217, 221, 222, 223, 228, 231, 232, 234, 238, 241, 245, 247, 251, 253, 271, 274, 293, 308, 311, 332, 425, 529, 602, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 642, 643, 646, 650, 651, 653, 654, 715, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 760, 762, 766, 773, 798], "padstack_data": [272, 273, 309, 310], "padstack_inst": [222, 754], "padstack_nam": [651, 653], "padstackdef": 635, "padstackedbpadstack": 209, "padstackinst": [532, 628, 635, 641, 654, 674], "padstackinstancetermin": [229, 672], "padstacknam": [4, 626, 627, 749, 750, 751, 754, 758, 763, 764, 804], "padstacks_data": [76, 175, 178, 190, 213, 221, 228, 271, 274, 293, 308, 311, 332, 630, 634, 636, 640, 642, 643, 650, 679, 751, 753, 758, 763], "padstck": 763, "padtyp": [181, 645, 647], "page": [747, 775, 776, 777, 778, 779, 781, 782, 783, 785, 786, 787, 789, 792, 793, 794, 795, 796, 799, 801, 803, 804, 806, 807, 808, 809, 811], "pai": 775, "pair": [3, 751, 756], "pair_u1": 756, "pair_x1": 756, "panda": [768, 771], "par": 760, "par_nam": [751, 764], "parallel": [12, 31, 72, 76, 108, 674], "param": [751, 764], "paramet": [11, 12, 13, 14, 22, 23, 53, 62, 64, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 110, 111, 128, 141, 155, 170, 176, 178, 180, 181, 185, 186, 187, 190, 191, 197, 198, 213, 221, 222, 228, 229, 231, 232, 246, 254, 255, 262, 266, 271, 272, 273, 298, 302, 308, 309, 310, 345, 351, 358, 359, 363, 364, 366, 378, 380, 382, 384, 385, 386, 387, 391, 393, 443, 456, 511, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 542, 544, 546, 548, 549, 550, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 567, 568, 572, 574, 575, 576, 577, 578, 579, 581, 582, 584, 585, 586, 587, 588, 589, 590, 592, 593, 601, 602, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 621, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 684, 689, 690, 691, 692, 693, 694, 698, 700, 706, 707, 711, 712, 713, 714, 715, 717, 723, 724, 725, 727, 728, 729, 730, 733, 742, 743, 751, 752, 766], "parameter": 751, "parameter_map": 750, "parameter_nam": [593, 760], "parameterlist": 635, "parametr": [246, 592, 593, 750, 755, 798, 811], "parametric_via": 763, "parametrize_trace_width": [760, 811], "parent": [11, 656, 758, 759, 760, 761, 762, 763, 765, 766], "pars": [111, 749, 750, 751, 752, 753, 756, 760, 773, 774], "parser": 382, "part": [0, 1, 23, 44, 45, 71, 72, 74, 99, 397, 441, 477, 646, 752, 756, 773, 774, 783], "part_name_col": [99, 752], "parti": 754, "partial": 231, "particular": [749, 761, 775], "partit": 222, "partition_max_ord": 222, "pass": [382, 414, 418, 486, 489, 747, 750, 753, 759, 760, 762, 770, 775, 809], "passiv": [382, 409, 423, 756], "pastack": 628, "patch": 750, "path": [8, 13, 14, 83, 84, 99, 100, 107, 111, 171, 176, 252, 260, 356, 376, 379, 382, 392, 461, 482, 483, 494, 501, 507, 562, 563, 567, 572, 579, 589, 617, 621, 667, 681, 700, 707, 711, 715, 727, 728, 729, 730, 732, 733, 735, 737, 738, 740, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 779], "path_list": [579, 808], "path_to_edb": 527, "path_to_edb_fil": 75, "path_to_wheelhous": 777, "pathlib": [768, 769, 770, 771], "pathtoaedb": 657, "pathtospfil": 107, "pattern": 750, "pcb": [1, 7, 382, 646, 749, 751, 755, 759, 764, 768, 769, 770, 771, 773], "pcb_jwqvpj": 749, "pcb_l": 753, "pcb_len": 751, "pcb_o91l5h": 764, "pcb_port_1": 795, "pcb_port_2": 795, "pcb_w": [751, 753], "pcie": 760, "pcie0_rx0_n": 8, "pcie0_rx0_p": 8, "pcie0_tx0_n": 8, "pcie0_tx0_n_c": 8, "pcie0_tx0_p": 8, "pcie0_tx0_p_c": 8, "pcie_gen4_rx0_n": 755, "pcie_gen4_rx0_p": 755, "pcie_gen4_rx1_n": 755, "pcie_gen4_rx1_p": 755, "pcie_gen4_tx2_cap_n": 752, "pcie_gen4_tx2_cap_p": 752, "pcie_gen4_tx2_n": [752, 769], "pcie_gen4_tx2_p": 752, "pcie_gen4_tx3_cap_n": 756, "pcie_gen4_tx3_cap_p": 756, "pcie_gen4_tx3_n": 756, "pcie_gen4_tx3_p": 756, "pd": [768, 771], "pd4": 759, "pden": 759, "pdn": 382, "pec": [68, 75, 78, 328, 519, 525, 528, 536, 809], "pec_boundari": [68, 75, 78], "pec_launch_width": [519, 525, 528, 536], "pecboundari": [263, 299], "pedb": [11, 117, 262, 298, 508, 547, 688], "pedbpadstack": 178, "penetr": 191, "per": [74, 382, 506, 718, 766, 769], "percent": 679, "percentag": [199, 718], "perfect": [68, 75, 78, 382], "perform": [231, 424, 451, 454, 497, 499, 500, 530, 610, 617, 646, 751, 755, 759, 760, 765, 766, 774, 779, 781, 789], "permeabl": 768, "permiss": [749, 761, 779], "permissionerror": [758, 759, 760, 761, 762, 763, 765, 766], "permit": [749, 761], "permitt": [555, 556, 557, 559, 768, 801], "permittivity_at_frequ": 557, "permittivity_high": 555, "permittivity_low": 555, "person": [749, 761], "pg_v1p0_s0": 792, "phase": [384, 387, 523, 524, 534, 535, 663, 664, 665, 675, 676, 677, 678, 750, 764, 765, 779], "phase_valu": [382, 384, 386, 387, 523, 524, 534, 535, 663, 664, 676, 677], "phi": 750, "physic": [76, 226, 360, 386, 674, 765], "pi": [382, 753, 763, 770, 773, 774], "pi_slider_posit": [770, 773], "pid": 634, "piec": 592, "pin": [0, 42, 46, 68, 69, 72, 73, 74, 75, 76, 78, 81, 86, 89, 91, 92, 93, 94, 95, 96, 105, 110, 214, 219, 228, 234, 241, 248, 249, 271, 273, 308, 310, 382, 455, 495, 506, 520, 521, 524, 529, 531, 532, 535, 546, 549, 576, 615, 628, 634, 635, 639, 640, 642, 643, 648, 650, 655, 660, 661, 662, 664, 665, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 683, 750, 755, 760, 761, 766, 773, 788, 792, 794, 797], "pin1": 75, "pin_group": [769, 773, 796], "pin_list": 95, "pin_nam": [94, 759], "pin_net_nam": [649, 655], "pin_numb": [669, 794], "pingroup": [73, 74, 221, 272, 273, 309, 310, 455, 520, 576, 660, 669, 670], "pingroup_2": 792, "pinlist": 91, "pinnam": [92, 241], "pinpo": 529, "pins_by_aedt_nam": 576, "pins_by_id": 576, "pins_by_nam": 576, "pins_nam": [672, 796], "pins_to_short": 110, "pip": [747, 749, 750, 751, 752, 753, 756, 773, 775, 777], "pixel": [176, 621, 715], "place": [72, 111, 527, 613, 621, 646, 654, 684, 711, 712, 713, 714, 749, 750, 751, 754, 756, 758, 763, 769, 779, 804], "place_3d_compon": 753, "place_in_layout": 713, "place_on_top": [711, 712, 713, 714], "place_padstack": 754, "placehold": 754, "placement": [35, 48, 56, 59, 61, 89, 239, 250, 259, 261, 712, 713, 714, 754], "placement_lay": [72, 574, 753], "plai": 798, "plan": 779, "plane": [6, 411, 420, 490, 753, 754, 763, 766, 773], "plane_lw_pt": [6, 764], "plane_shap": 754, "plane_up_pt": [6, 764], "plate": [199, 200, 240, 625, 752, 755], "platform": [758, 759, 760, 761, 762, 763, 765, 766], "platingthickess": 194, "plot": [3, 382, 613, 751, 753, 756, 759, 763, 766, 771, 801], "plot_3d": 750, "plot_components_on_bottom": [613, 621], "plot_components_on_top": [613, 621, 759, 762], "plot_definit": [715, 758, 762, 763], "plot_nam": 750, "plt": [715, 749, 750, 751, 752, 758, 759, 760, 762, 763, 764, 765, 766, 771], "plugin": [749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "pnet": 759, "po": 111, "point": [81, 176, 274, 311, 336, 338, 341, 344, 346, 348, 352, 358, 359, 364, 365, 382, 406, 412, 414, 416, 431, 432, 433, 439, 519, 525, 526, 527, 528, 530, 533, 536, 542, 574, 577, 578, 579, 586, 589, 613, 621, 646, 684, 749, 750, 751, 752, 753, 758, 759, 760, 762, 764, 766, 769], "point_on_edg": [526, 528, 536], "point_on_ref_edg": 526, "pointa": [754, 763], "pointb": [754, 763], "pointdata": [358, 359], "points_n": 751, "points_on_edg": 519, "points_p": 751, "poisson_ratio": 768, "polar": 750, "poli": [527, 581, 585, 586, 795], "poly2": 6, "poly_list": [527, 795], "poly_void": 764, "polygon": [6, 222, 231, 252, 260, 356, 364, 366, 376, 379, 382, 406, 527, 530, 533, 542, 572, 577, 581, 585, 586, 587, 589, 592, 601, 602, 617, 626, 646, 751, 752, 754, 755, 756, 760, 766, 773, 795, 797, 809], "polygon_data": 231, "polygon_hol": 626, "polygondata": [231, 363, 364, 366, 378, 380, 533, 577], "polylin": 586, "poor": 751, "port": [68, 69, 74, 75, 78, 220, 221, 262, 266, 267, 269, 270, 272, 275, 277, 278, 281, 298, 302, 306, 307, 309, 312, 315, 316, 319, 382, 438, 449, 455, 457, 472, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 533, 536, 539, 540, 544, 546, 628, 660, 661, 662, 672, 711, 746, 750, 751, 752, 753, 754, 755, 765, 774, 779, 797, 798, 808, 809], "port1": 773, "port_1": [753, 769], "port_2": 769, "port_3": 769, "port_4": 769, "port_5": 769, "port_6": 769, "port_imped": 527, "port_loc": [527, 795], "port_nam": [74, 75, 519, 520, 521, 525, 526, 527, 528, 536, 660, 661, 749, 750, 756, 761], "port_poli": [527, 795], "port_typ": 74, "portal": 779, "portboundari": [263, 299], "portion": [749, 761], "portnam": 529, "ports_d": 769, "ports_distribut": 769, "pos_i": 753, "pos_pin": [521, 524, 531, 535, 661, 664, 673, 677], "pos_pin_group_nam": [662, 665, 675, 678, 794], "pos_x": 753, "posit": [93, 133, 139, 228, 246, 382, 384, 385, 386, 387, 446, 471, 503, 504, 519, 520, 523, 524, 525, 529, 531, 532, 534, 535, 575, 640, 650, 660, 662, 663, 664, 665, 666, 673, 675, 676, 677, 678, 679, 684, 749, 750, 751, 756, 769, 770, 773, 804], "positive_component_nam": [520, 523, 534, 660, 663, 676], "positive_lay": 684, "positive_loc": 684, "positive_net": 127, "positive_net_nam": [520, 523, 534, 660, 663, 676, 684], "positive_node_compon": [382, 384, 386, 387], "positive_node_net": [382, 384, 386, 387], "positive_pin": [532, 640], "positive_points_on_edg": 525, "positive_primitive_id": 525, "positive_sensor_pin": 679, "positive_termin": [751, 756, 769, 773], "positve_termin": 769, "possibl": [78, 202, 747, 750, 774, 775, 779], "post": [749, 750, 751, 752, 753, 756, 764, 773, 779], "post_layout_parameter": 766, "postprocess": [749, 750, 751, 752, 753, 756, 771, 773, 774], "postprocessor": [749, 750, 751, 752, 753, 756, 773], "potenti": 440, "power": [7, 382, 462, 604, 610, 614, 616, 682, 774, 789], "power_list": 760, "power_net": [8, 382, 460, 604, 752, 754, 755, 782], "power_net_nam": 614, "powertree_df": 759, "ppadstack": 190, "practic": [382, 527, 747, 774, 775, 777], "pre": [747, 775], "preced": [754, 763, 793], "prefer": [271, 272, 273, 308, 309, 310, 779], "prefix": [246, 763], "prepar": 756, "preprocess": 755, "present": [200, 657, 695], "preserv": 461, "prev": 751, "prevent": 382, "previou": 577, "previous": [747, 749, 775], "prim_arc": 336, "prim_id": [526, 528, 536], "prim_typ": 590, "primary_sweep": 750, "primit": [24, 27, 127, 140, 154, 162, 175, 222, 225, 230, 235, 236, 237, 252, 260, 268, 270, 274, 276, 293, 305, 307, 311, 314, 332, 336, 338, 339, 348, 349, 350, 352, 354, 356, 357, 358, 359, 362, 363, 364, 366, 367, 369, 370, 371, 375, 376, 378, 379, 380, 381, 519, 525, 526, 527, 528, 532, 536, 549, 571, 574, 577, 581, 582, 587, 588, 589, 590, 596, 598, 599, 628, 641, 654, 674, 746, 749, 751, 752, 753, 754, 755, 756, 760, 764, 766, 773, 795, 808], "primitive_id": 588, "primitives_data": [177, 270, 274, 293, 307, 311, 332, 336, 349, 364, 366, 573, 575, 578, 579, 586, 588, 589, 594, 595, 597, 600, 749, 750, 758, 763, 764], "primitives_id": 519, "prims_to_delet": [760, 766], "princip": 549, "print": [81, 328, 348, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 769, 770, 773, 801], "print_column": 759, "print_max": 759, "prior": [750, 754, 758], "probe": [675, 684, 794], "probe_nam": 675, "problem": 751, "procedur": 779, "process": [382, 425, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 774, 783], "process_on": [758, 759, 760, 761, 762, 763, 765, 766], "prod": 111, "produc": [226, 360], "product": [747, 774, 775], "program": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 773, 779], "programmat": 781, "progress": 750, "proj_path": [733, 743], "project": [86, 88, 91, 92, 93, 95, 96, 98, 214, 246, 382, 389, 396, 424, 435, 442, 454, 457, 460, 461, 520, 521, 523, 524, 531, 534, 535, 569, 660, 661, 663, 664, 666, 667, 673, 676, 677, 711, 725, 729, 732, 733, 734, 735, 736, 737, 743, 747, 749, 750, 751, 754, 756, 758, 761, 763, 764, 765, 773, 774, 775, 778, 779, 783, 786, 787, 798, 808, 811], "project_path": [8, 753, 756], "projectnam": [743, 749, 750, 751, 752, 754, 755, 764], "projectpath": 743, "prop": [749, 750, 751], "properli": [747, 775], "properti": [0, 4, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 79, 101, 102, 103, 106, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 168, 172, 173, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 224, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 381, 383, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 537, 541, 543, 545, 553, 565, 566, 567, 568, 569, 571, 573, 580, 591, 594, 595, 596, 597, 598, 599, 600, 603, 605, 606, 618, 619, 620, 622, 623, 624, 629, 630, 635, 642, 643, 647, 648, 649, 653, 655, 656, 680, 681, 682, 683, 685, 686, 687, 688, 697, 699, 703, 704, 705, 708, 709, 710, 720, 721, 722, 726, 731, 732, 734, 735, 736, 737, 738, 740, 744, 745, 746, 749, 750, 752, 756, 759, 765, 774, 792], "property_nam": 565, "proprietari": 774, "provid": [74, 75, 176, 382, 391, 393, 461, 527, 549, 550, 586, 621, 637, 638, 641, 715, 724, 749, 750, 752, 755, 759, 761, 774, 777, 778, 798], "proxi": 779, "public": 761, "publish": [749, 761], "purpos": [749, 761, 765], "push": [747, 775], "pwr": 608, "pwr1": 771, "pwr2": 771, "px": 753, "py": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "pyaedt": [382, 473, 475, 738, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 764, 768, 769, 770, 771, 773, 774], "pyaeedt": [364, 366], "pyansi": [747, 774, 775, 779], "pyedb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 39, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 88, 91, 92, 93, 95, 96, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 117, 127, 140, 154, 162, 165, 168, 175, 177, 178, 190, 209, 213, 214, 221, 222, 229, 242, 262, 270, 271, 274, 288, 293, 298, 307, 308, 311, 326, 332, 336, 349, 374, 382, 383, 388, 390, 397, 400, 441, 443, 477, 508, 509, 514, 516, 519, 520, 521, 523, 524, 525, 531, 534, 535, 536, 547, 553, 554, 555, 556, 557, 558, 559, 561, 571, 573, 574, 575, 578, 579, 588, 589, 594, 595, 597, 600, 601, 603, 608, 610, 619, 622, 623, 624, 630, 656, 657, 658, 660, 661, 663, 664, 666, 673, 674, 676, 677, 679, 688, 690, 700, 704, 707, 715, 720, 724, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 780, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 801, 803, 804, 806, 807, 808, 809, 811], "pyedb_ansi": [758, 759, 760, 761, 762, 763, 765, 766], "pyedb_prj_sip": 764, "pyedb_use_dotnet": 780, "pypi": [776, 779], "pyplot": [758, 762, 763, 764, 765, 771], "pyproject": 7, "python": [75, 744, 747, 748, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 774, 775, 781], "pyvista": [749, 750, 751, 752, 753, 756, 773], "q3d": [382, 439, 774], "quantiti": 759, "quarter": [750, 753], "quasi": 222, "queri": [774, 789, 798], "question": [747, 775, 776, 779], "quick": 776, "quit": 739, "quit_appl": 759, "r": [78, 382, 391, 393], "r1": [1, 7, 92, 108, 746, 759, 777, 779], "r2": [750, 752, 758, 764, 777, 779], "r23": 794, "r_valu": [72, 76, 386, 674, 746, 787], "rad__vjqan4": 750, "radial": 528, "radial_extent_factor": [220, 528], "radian": 52, "radiat": [382, 426, 476, 809], "radiation_box": 382, "radiationboxtyp": [382, 426], "radiu": [228, 479, 544, 575, 578, 640, 769], "rang": [202, 626, 751, 759], "rangeend": 750, "rangestart": 750, "rat": [759, 771], "rather": 81, "ratio": [191, 199, 240, 382, 450, 608, 625, 752, 755, 809], "ration": 625, "raw_extended_net": [140, 154], "raw_net": 162, "raw_primit": 349, "re": [12, 752, 758, 759, 760, 761, 762, 763, 765, 766], "reach": [382, 427, 747, 775, 779], "read": [1, 381, 562, 563, 567, 568, 746, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773, 774], "reader": 111, "readi": [752, 755, 765, 774], "real": [295, 715], "realized2d": 750, "realized3d": 750, "realizedgaintot": 750, "reason": 382, "reassign": 604, "receiv": 756, "recent": [758, 759, 760, 761, 762, 763, 765, 766], "recommend": [382, 386, 530], "rectangl": [6, 22, 222, 252, 260, 376, 379, 578, 589, 601, 626, 653, 751, 754, 763, 804, 808], "rectangular": 754, "red": 752, "reduc": [406, 542, 546, 783, 784], "ref_d": 759, "ref_des_list": 522, "ref_loc": [527, 795], "ref_pin": [75, 786, 787], "ref_poli": [527, 795], "ref_prim_id": 526, "refd": [75, 88, 92, 105, 111, 639, 752, 759], "refdes_col": [99, 752], "refer": [0, 3, 4, 49, 62, 68, 69, 72, 74, 75, 78, 85, 88, 94, 96, 99, 105, 109, 111, 221, 228, 271, 272, 273, 274, 282, 291, 293, 308, 309, 310, 311, 320, 330, 332, 382, 385, 462, 467, 522, 526, 527, 528, 533, 546, 582, 631, 639, 640, 657, 669, 670, 672, 751, 752, 756, 766, 773, 778, 781, 783, 786, 787, 795, 796], "reference_design": [85, 94, 669, 670, 769, 773, 794, 796], "reference_desin": 773, "reference_height": 109, "reference_lay": [527, 528, 530, 795], "reference_list": [756, 760, 773, 783], "reference_net": [13, 62, 74, 228, 533, 640, 672, 769, 773, 783, 796], "reference_object": [292, 331], "reference_pin": [75, 228, 640], "reference_point": [527, 795], "reference_polygon": [527, 795], "reference_size_i": 109, "reference_size_x": 109, "refin": [382, 407, 496, 499, 500, 753, 770], "refine_insid": 770, "refnet": 74, "refresh": [104, 716], "region": [224, 750, 752, 771], "registri": [747, 775], "regul": [679, 687], "rel": [6, 427, 555, 557, 559, 714, 809], "rel_perm": 559, "relat": [64, 382, 656, 750, 779], "relative_residu": 809, "releas": [86, 88, 91, 92, 93, 95, 96, 98, 214, 520, 521, 523, 524, 531, 534, 535, 660, 661, 663, 664, 666, 673, 676, 677, 724, 747, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 765, 766, 773, 775, 777, 779, 782, 783, 793, 795, 796, 806, 809], "release_desktop": [749, 750, 751, 752, 753, 754, 755, 756, 764], "release_vers": 777, "relev": 756, "reli": [754, 762], "remaind": 754, "remot": [613, 779], "remov": [549, 560, 651, 717, 750, 751, 752, 754, 755, 756, 758, 760, 762, 763, 765, 766, 773, 809], "removd": 755, "remove_floating_geometri": 809, "remove_single_pin_compon": [760, 766], "renam": [170, 548, 707, 758, 759, 760, 762, 763, 765, 766, 792, 795], "renamed_net": 549, "renorm": [269, 295, 306], "replac": [68, 69, 78, 105, 117, 449, 625, 646, 657, 759, 764], "replace_3d_triangl": 809, "reply_cont": [758, 759, 760, 761, 762, 763, 765, 766], "report": [170, 382, 482, 501, 507, 548, 718, 727, 728, 730, 747, 775, 779], "report_fil": 759, "report_templ": [749, 753, 756], "report_typ": 750, "reports_by_categori": 750, "repositori": [761, 777], "repres": 1, "represent": 578, "representation_typ": [578, 808], "request": [712, 713, 714, 747, 755, 775, 779], "requir": [382, 389, 628, 747, 748, 751, 753, 755, 759, 760, 763, 766, 774, 775], "res_nam": [531, 673], "res_valu": [108, 611], "resc1608x05n": 759, "residu": [718, 809], "resist": [12, 50, 108, 382, 531, 532, 673, 768, 771], "resistor": [72, 76, 77, 98, 386, 506, 531, 610, 673, 674, 682, 756, 788], "resistor_below": [610, 756], "resistor_nam": [531, 673], "resistorsourc": 671, "resolut": 538, "resort": 406, "resourc": [783, 784], "rest": 111, "restrict": [749, 761, 770, 777], "restrict_length": [770, 809], "restrict_max_el": 809, "result": [382, 460, 682, 740, 751, 753, 756, 758, 760, 761, 762, 763, 765, 766, 774], "retain": 756, "retriev": [37, 63, 79, 86, 87, 88, 90, 91, 92, 93, 95, 96, 98, 103, 123, 124, 125, 171, 214, 392, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 472, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 540, 585, 586, 587, 588, 614, 639, 704, 705, 706, 709, 710, 720, 721, 722, 759, 766, 773, 786, 787, 790, 792, 794, 795, 797, 801, 809], "return": [1, 2, 5, 7, 9, 13, 14, 15, 16, 17, 18, 22, 23, 27, 28, 29, 31, 32, 35, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 121, 122, 123, 124, 128, 129, 132, 141, 142, 144, 155, 157, 163, 164, 165, 168, 170, 171, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 274, 276, 288, 289, 293, 296, 299, 300, 301, 302, 307, 308, 309, 310, 311, 314, 326, 327, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 374, 375, 376, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 542, 544, 546, 548, 549, 550, 554, 555, 556, 557, 558, 559, 561, 563, 565, 567, 568, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 622, 623, 625, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 683, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 715, 717, 718, 720, 722, 725, 727, 728, 729, 730, 732, 733, 735, 736, 737, 738, 739, 740, 742, 743, 744, 749, 750, 752, 758, 759, 760, 761, 762, 763, 764, 765, 766], "return_point": 222, "return_points_onli": 530, "reus": [217, 774, 777], "revert": 81, "review": [756, 777], "rf": [646, 763], "rgb": 118, "right": [15, 264, 300, 352, 353, 538, 578, 747, 749, 761, 775], "rlc": [12, 16, 28, 31, 50, 51, 63, 68, 69, 72, 76, 78, 81, 82, 105, 108, 111, 152, 153, 386, 532, 552, 674, 752, 756, 759, 788], "rlc_n": 756, "rlc_p": 756, "rlcboundari": [263, 299], "rot": 635, "rotat": [89, 203, 577, 578, 626, 650, 653, 711, 712, 713, 714, 751, 758, 759, 760, 761, 762, 763, 765, 766], "rough": 690, "roughli": [750, 753], "round": [382, 451, 579, 758, 759, 760, 762, 766], "rout": 751, "route_lay": 751, "rpc": 779, "rst4000": 785, "rstrip": 759, "rtree": 638, "rule": 778, "run": [382, 389, 716, 741, 742, 747, 748, 749, 750, 751, 752, 754, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773, 774, 775, 777, 798], "run_ast_nod": [758, 759, 760, 761, 762, 763, 765, 766], "run_cel": [758, 759, 760, 761, 762, 763, 765, 766], "run_cell_async": [758, 759, 760, 761, 762, 763, 765, 766], "run_cod": [758, 759, 760, 761, 762, 763, 765, 766], "run_forev": [758, 759, 760, 761, 762, 763, 764, 765, 766], "run_glob": [758, 759, 760, 761, 762, 763, 764, 765, 766], "runner": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "runpi": [758, 759, 760, 761, 762, 763, 764, 765, 766], "runscriptandexit": 759, "runtim": 777, "rvalu": [531, 532, 673, 786], "s2p": [62, 752, 773], "s_": 750, "s_paramet": 773, "s_parameter_librari": 773, "salder": [74, 97], "same": [382, 455, 527, 608, 707, 773], "sarkar": 557, "save": [176, 382, 621, 701, 715, 725, 743, 750, 751, 754, 755, 756, 759, 760, 763, 766, 773, 774, 783, 801, 804, 807, 808, 809], "save_edb": [75, 78, 105, 749, 750, 751, 752, 753, 754, 755, 758, 759, 763, 764, 783, 785, 786, 787, 792, 793, 794, 795, 796], "save_edb_a": 766, "save_edb_path": 766, "save_field": [749, 751, 764, 809], "save_plot": [176, 621, 715], "save_project": [725, 749, 750, 752, 753, 756, 764], "save_rad_field_onli": 809, "saveadaptivecurr": 764, "sball_diam": [109, 761], "sball_height": [109, 761], "sball_mid_diam": 109, "sballlayer_nam": 654, "scale": [658, 715, 753, 756, 809], "scale_elev": [715, 762], "scan": 668, "scan_typ": 668, "schedul": 774, "scope": [754, 763], "scratch": 803, "script": [754, 755, 774, 777, 781], "search": [228, 610, 640, 746, 759, 769, 781], "search_radiu": [228, 640, 769], "second": [586, 749, 750, 751, 752, 754, 758, 759, 760, 762, 764, 766], "secondari": 549, "secondary_sweep": 750, "section": [0, 1, 3, 4, 440, 700, 746, 756, 760, 761, 762, 779, 798], "secur": 777, "see": [774, 776, 777, 779], "seen": 751, "segment": [342, 345, 586, 766], "select": [382, 396, 403, 404, 426, 436, 452, 460, 637, 638, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 783, 784, 795, 801, 808], "selection_polygon": 592, "self": [74, 97, 550, 747, 749, 750, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774, 775], "sell": [749, 761], "send": [758, 759, 760, 761, 762, 763, 765, 766], "sensit": 609, "sensor": 679, "sep": 756, "separ": [628, 646], "serd": 756, "seri": [12, 31, 72, 76, 674], "serial": [152, 610], "serv": [270, 271, 272, 273, 307, 308, 309, 310], "server": 779, "servic": [747, 775], "session": [613, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773], "set": [25, 68, 75, 78, 99, 109, 111, 191, 254, 255, 382, 383, 386, 388, 390, 397, 441, 460, 477, 505, 514, 515, 544, 590, 651, 652, 653, 654, 657, 679, 682, 723, 752, 754, 755, 756, 769, 777, 779, 780, 798, 801, 805, 806, 808], "set_all_antipad_valu": 806, "set_dc_slid": 759, "set_differential_pair": [751, 756], "set_solder_bal": 761, "set_solderbal": [749, 750], "set_solution_broadband": 809, "set_solution_multi_frequ": 809, "set_solution_single_frequ": [753, 809], "set_triangles_wave_port": 809, "setispowerground": 173, "setnam": [137, 149, 160, 174], "setter": [749, 752, 761, 792], "setup": [7, 395, 516, 517, 656, 657, 658, 659, 724, 727, 728, 730, 750, 753, 755, 756, 759, 765, 777, 798, 809], "setup1": [753, 756, 765, 809], "setup1a": 809, "setupnam": [749, 751, 764], "sever": [75, 461], "sfpa_vccr": 759, "sfpa_vcct": 759, "sg_via_d": 753, "shall": [749, 761], "shape": [57, 74, 109, 572, 577, 601, 626, 646, 653, 751, 754, 763], "share": [773, 774, 777, 779], "sharp": 579, "sheet": [754, 778], "shell": [758, 759, 760, 761, 762, 763, 765, 766, 809], "shield": 646, "short": [68, 75, 78, 110, 170, 548], "should": [382, 406, 527, 750, 753, 780], "show": [176, 262, 298, 382, 502, 621, 715, 747, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777, 778, 781, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 801, 803, 804, 806, 807, 808, 809, 811], "show_legend": [176, 621], "shown": [86, 176, 214, 621, 749, 750, 751, 752, 758, 759, 760, 762, 763, 764, 765, 766, 771], "shunt": 153, "shut": 751, "shutil": 765, "si": [382, 658, 752, 759, 760, 762, 774], "side": [492, 493, 762, 763], "sig": [753, 764, 795], "sig1": [771, 799], "sig2": 771, "sig3": 799, "sig_1": 751, "sig_2": 751, "sig_c": 753, "sig_l": 753, "sig_w": 753, "signal": [7, 74, 90, 176, 191, 382, 465, 533, 604, 610, 613, 621, 689, 690, 691, 692, 693, 694, 707, 709, 720, 721, 751, 754, 755, 756, 763, 766, 771, 774, 783, 784, 801, 808], "signal_lay": [753, 754, 763, 801], "signal_list": [756, 760, 773, 783], "signal_net": [8, 382, 460, 604, 752, 754, 755, 761, 782, 783], "signal_net_nam": 766, "signal_path": 753, "signal_trac": 753, "signal_via_padstack": 751, "silkscreen": [690, 771], "sim_setup": [8, 382, 384, 386, 387, 752, 754, 782, 808], "sim_setup_data": [753, 756], "simpl": [781, 794], "simple_check": 231, "simpler": [749, 774, 781], "simpli": 780, "simplifi": [406, 646, 774], "simul": [382, 389, 395, 448, 682, 727, 729, 741, 742, 746, 749, 750, 754, 759, 774, 781, 783, 798], "simulation_configur": [382, 383, 388, 390, 391, 393, 397, 441, 477, 755], "simulation_nam": [727, 728, 730], "simulation_setup": [400, 517, 518, 542, 544, 546, 659], "simulationconfigur": [383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 441, 477, 517, 518, 542, 544, 546, 659, 746, 752, 754, 755, 808], "simulationconfigurationac": [382, 383, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 746], "simulationconfigurationbatch": [388, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 746], "simulationconfigurationdc": [390, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 746], "simulationdc": 382, "simult": 750, "sin": [753, 763], "sinc": 76, "singl": [75, 81, 231, 382, 403, 589, 646, 752, 753, 755, 760, 762, 766, 773, 777, 809], "singlefrequencydatalist": [749, 751], "sink_po": 794, "site": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "siw": [7, 759], "siw_fil": 759, "siwav": [1, 5, 9, 382, 385, 386, 396, 410, 411, 419, 420, 421, 428, 440, 478, 479, 490, 503, 608, 656, 657, 658, 659, 660, 661, 663, 664, 666, 668, 673, 676, 677, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 771, 774, 777, 785, 792, 794, 796, 798, 810], "siwave_1": 770, "siwave_ac": [770, 773], "siwave_dc": [770, 773], "siwave_fil": 759, "siwave_setup": 770, "siwave_simulation_setup": 770, "siwave_simulation_setup_data": [657, 658], "siwave_syz": 773, "siwavedcsimulationsetup": 657, "siwavehfsssolverregion": 771, "siwavesimulationsetup": 770, "siwavesyz": [8, 752], "siwavesyzsimulationsetup": 658, "size": [74, 109, 176, 191, 194, 254, 255, 417, 467, 546, 621, 658, 715, 749, 750, 752, 766, 791], "skin": 809, "skin_depth": [770, 809], "skip": [74, 442, 457], "sky130_fictious_dtc_exmple_contol_no_map": 765, "sky130_fictitious_dtc_exampl": 765, "sky130_fictitious_dtc_example_control_no_map": 765, "sl_space": 751, "sl_width": 751, "sleep": 756, "slide": [382, 503], "slider": [658, 770, 773], "slow": 217, "slowest": 549, "sma": 753, "sma_rf_surface_mount": 753, "small_void_area": 809, "smaller": 382, "smallest": 171, "snap": 429, "snap_via_group": 765, "so": [74, 382, 461, 628, 715, 749, 751, 761], "softwar": [749, 761, 777], "soic127p": 759, "solder": [54, 55, 56, 57, 74, 89, 97, 109, 382, 447, 458, 628, 654, 696, 713, 714, 756, 768, 771], "solder_ball_height": [89, 712], "solder_balls_height": 74, "solder_balls_mid_s": 74, "solder_balls_s": 74, "solder_diamet": 765, "solder_height": [713, 714], "solder_mask": [690, 801], "solder_past": 690, "solderbal": 654, "solderlay": 650, "soldermask": [22, 698, 754, 763, 764, 768, 771, 801], "soldermask_thick": [698, 754, 763], "soler_mask": 771, "solut": [490, 749, 750, 751, 752, 764, 773, 809], "solution_typ": 750, "solutions_custom": 750, "solv": [7, 750, 751, 752, 753, 756, 773, 774], "solve_siwav": 759, "solver": [382, 396, 439, 440, 478, 764, 774, 809], "solver_typ": [8, 382, 752, 754], "solvertyp": [382, 396], "solvesweep": [749, 751, 764], "some": [747, 748, 749, 750, 751, 752, 753, 755, 756, 759, 773, 775, 776, 779, 781], "soon": 780, "sourc": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 773, 779, 798], "source_nam": [382, 385, 523, 524, 534, 535, 663, 664, 666, 676, 677], "sourcetyp": 74, "space": 111, "sparametermodel": 752, "spdx": [749, 761], "special": 7, "specif": [382, 568, 577, 593, 651, 747, 759, 775, 783, 794, 795], "specifi": [74, 176, 222, 382, 440, 461, 520, 549, 555, 575, 602, 613, 621, 625, 628, 660, 667, 715, 750, 766, 809], "specific_heat": 768, "specified_vers": [724, 749, 750, 751, 752, 753, 754, 755, 756, 764], "speed": [7, 382, 503, 770, 773, 783, 784], "spheroid": [74, 109], "spice": [14, 58, 107, 752, 753], "spicemodel": 752, "spicemodelnam": 107, "split": [759, 760, 761, 762, 765, 766], "squar": [549, 653], "stabl": [747, 775], "stack": [272, 309, 652, 696, 758, 759, 760, 761, 762, 763, 765, 766, 798], "stackup": [1, 121, 593, 654, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 746, 750, 751, 754, 759, 762, 768, 798, 804, 808], "stackup_lay": 2, "stackup_thick": 801, "stackuplayeredbclass": [750, 753, 758], "stackupsimpl": 763, "stadckup": 768, "standalon": [729, 774, 778], "standard": [749, 753, 756], "start": [211, 256, 382, 430, 431, 574, 579, 586, 609, 626, 627, 658, 715, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 770, 773, 778, 779, 781, 795, 803], "start_azimuth": 809, "start_cap_styl": [579, 763, 764], "start_coordin": 348, "start_freq": [8, 382, 658, 752, 754, 755, 782, 807], "start_frequ": [749, 751, 764], "start_i": 574, "start_lay": [626, 751, 763, 804], "start_layer_nam": 574, "start_with": 609, "start_x": 574, "startlay": 627, "stat": 789, "statist": 791, "stdout": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773], "step": [382, 432, 658, 752, 755], "step_freq": [8, 382, 658, 752, 754, 755, 782, 807], "stop": [212, 254, 255, 257, 382, 433, 626, 658, 770, 773], "stop_freq": [8, 382, 658, 752, 754, 755, 782, 807], "stop_frequ": [749, 751, 764], "stop_lay": [626, 751, 763, 804], "store": [217, 750], "str": [13, 14, 16, 23, 28, 44, 45, 47, 48, 49, 50, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 97, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 113, 115, 123, 128, 141, 155, 165, 170, 176, 178, 182, 183, 188, 190, 195, 196, 202, 203, 206, 211, 212, 214, 221, 222, 228, 229, 232, 237, 243, 245, 246, 250, 252, 254, 255, 256, 257, 260, 263, 271, 272, 273, 289, 299, 308, 309, 310, 327, 371, 375, 376, 379, 384, 385, 386, 387, 391, 392, 393, 395, 398, 399, 435, 448, 449, 456, 461, 462, 463, 464, 465, 479, 482, 483, 485, 491, 494, 501, 504, 507, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 548, 549, 550, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 567, 568, 574, 575, 576, 577, 578, 579, 582, 587, 589, 590, 592, 593, 602, 604, 607, 609, 610, 613, 614, 615, 617, 619, 621, 622, 623, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 649, 650, 651, 652, 653, 654, 655, 657, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 684, 689, 690, 691, 692, 693, 694, 698, 699, 700, 704, 707, 708, 711, 715, 717, 720, 724, 727, 728, 729, 730, 732, 733, 735, 736, 737, 738, 740, 742, 743, 744, 764, 768], "straight": 342, "strategi": 753, "stream": [758, 759, 760, 761, 762, 763, 765, 766], "streamlin": [750, 755], "string": [74, 115, 186, 193, 382, 533, 609, 613, 761], "striplin": 751, "structur": [73, 750, 753], "stub": [254, 255], "student": 777, "student_vers": [758, 759, 760, 761, 762, 763, 765, 766], "studi": 755, "style": 579, "sub_circuit_nam": 14, "subject": [749, 761], "sublicens": [749, 761], "submiss": 774, "submit": [747, 775], "subsequ": [754, 765], "substanti": [749, 761], "substrat": [749, 750], "succe": [105, 701, 712, 713, 714], "succeed": [23, 391, 393, 517, 518, 544, 546, 646], "success": [62, 68, 69, 72, 77, 78, 80, 82, 87, 107, 108, 109, 110, 191, 222, 231, 254, 255, 356, 384, 386, 387, 509, 522, 529, 530, 532, 542, 575, 577, 578, 581, 582, 583, 592, 602, 604, 617, 625, 626, 627, 631, 639, 651, 652, 653, 659, 695, 706, 707, 711, 725, 727, 728, 729, 730, 733, 739, 742, 743], "suffix": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 773], "suit": 774, "super": [758, 759, 760, 761, 762, 763, 765, 766], "support": [68, 69, 75, 76, 78, 105, 382, 396, 403, 436, 626, 712, 713, 714, 715, 747, 769, 770, 773, 774, 775, 779, 780], "sure": [461, 779], "surfac": [382, 406, 415, 419, 422, 491, 542, 581, 584], "surface_triangle_length": 809, "surpport": 382, "surround": 750, "svia": [4, 763], "sw": [384, 386, 387], "sweep": [382, 404, 408, 409, 413, 423, 427, 431, 432, 433, 434, 435, 436, 442, 658, 750, 751, 752, 753, 754, 755, 764, 765, 770, 773, 808, 809], "sweep1": [749, 750, 751, 753, 764, 765, 770, 773, 809], "sweep_data": [753, 756], "sweep_nam": 382, "sweep_typ": [382, 749, 751, 764], "sweepdata": [753, 756], "sweephfss3dlayout": [749, 751, 764], "sweepnam": [749, 750, 751, 764], "sweeptyp": [382, 436, 658], "switch": [74, 747, 775], "swz": 810, "sy": [569, 758, 759, 760, 761, 762, 763, 765, 766], "symbol": [690, 771], "symmetr": 698, "syntax": [241, 778], "syslib": [568, 749, 750, 751, 753, 754, 758, 763, 764], "system": [7, 777], "syz": [382, 667, 756, 807], "t": [382, 527, 759, 763, 774], "t1": 751, "t10": 759, "t2": 751, "t28": 759, "t29": 759, "tag": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "take": [74, 75, 382, 527, 584, 760, 766], "taken": [602, 651, 653], "talk": 440, "tan": 191, "tangent": [555, 556, 557, 559], "target": [519, 525, 526, 528, 536, 714], "target_aedb": [752, 755], "target_fil": [384, 386, 387], "target_padstack_nam": 632, "target_path": [228, 640], "targetfil": [701, 759, 760, 761, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "targetfile1": [89, 711, 712, 713, 714, 718], "targetfile2": [712, 713, 714], "targetfold": 762, "task": 789, "team": [747, 775, 779], "technologi": 774, "technology_fil": 765, "temp": [382, 391, 393, 483, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773], "temp_dir": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 765, 766], "temp_fil": 773, "temp_fold": [759, 761, 768, 769, 770, 771, 773, 778, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 801, 803, 806, 807, 809, 811], "tempfil": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 765, 766, 768, 769, 770, 771, 773], "temporari": [382, 751, 752, 755, 756, 759, 763, 765, 766], "temporarydirectori": [750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 765, 766, 768, 769, 770, 771, 773], "termin": [75, 221, 223, 229, 262, 271, 272, 273, 274, 282, 284, 285, 291, 296, 298, 308, 309, 310, 311, 320, 322, 323, 330, 333, 385, 504, 519, 525, 526, 527, 528, 533, 536, 546, 628, 666, 671, 672, 684, 747, 750, 769, 773, 775, 777], "terminal_point": [527, 795], "test": [340, 393, 557, 777, 792], "test2": 804, "test_0rlc": 787, "test_dc": 807, "test_isrc": 382, "test_layout": 750, "test_port": 792, "test_renam": 792, "test_sweep": 382, "test_vsrc": 382, "text": [83, 99, 111], "than": [74, 81, 254, 255, 549, 610, 646, 747, 775], "thei": [81, 711, 755], "them": [81, 382, 646, 748, 781], "therebi": 754, "therefor": [586, 754, 774], "thermal": [382, 484, 774], "thermal_conduct": 768, "theta": 750, "thi": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 18, 24, 68, 74, 75, 78, 105, 111, 121, 122, 161, 176, 191, 217, 225, 232, 233, 234, 254, 255, 262, 264, 265, 268, 280, 293, 298, 300, 301, 305, 318, 332, 353, 355, 357, 364, 367, 368, 382, 389, 403, 406, 422, 440, 461, 509, 510, 511, 512, 513, 514, 515, 527, 530, 533, 574, 584, 621, 625, 626, 628, 646, 658, 696, 700, 711, 713, 714, 715, 716, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 782, 783, 785, 786, 787, 789, 790, 792, 793, 794, 795, 796, 798, 799, 801, 803, 804, 806, 807, 808, 809, 811], "thick": [191, 200, 651, 690, 696, 698, 702, 715, 749, 750, 751, 753, 758, 771, 799, 801, 804, 808], "thoroughli": [747, 775], "those": [546, 773], "three": [750, 751], "threshold": [98, 429, 440, 608, 610], "through": [7, 98, 202, 611, 626, 756, 759, 774, 777], "thu": [749, 750, 751, 752, 755, 758, 759, 760, 762, 763, 764, 765, 766, 771, 774, 783], "ti": 382, "time": [382, 584, 668, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 773, 783, 803], "time_xtalk": 668, "timer_start": [760, 766], "titl": [747, 775], "tm": [749, 750], "tmp0utnt4cz": 750, "tmp22591j55": 759, "tmp2zok2jju": 769, "tmp3t8df56j": 756, "tmp4q4plqj0": 765, "tmp6_an3udz": 773, "tmpdh7zpfpo": 754, "tmpfold": 749, "tmpgbdv50wz": 751, "tmphqsr4b9o": 752, "tmpn5fkbr4e": 770, "tmpo1mxg78k": 766, "tmptf36jdhi": 755, "tmptmwaqofm": 763, "tmptv2gcqbz": 758, "tmpukbluj8i": 760, "tmpv5c4iy7u": 753, "togeth": 768, "tolay": [650, 749, 750, 754], "toler": [423, 581], "too": 382, "tool": [7, 747, 775], "top": [2, 6, 32, 59, 178, 216, 222, 255, 259, 613, 621, 627, 654, 694, 696, 707, 711, 712, 713, 714, 715, 749, 750, 751, 753, 754, 758, 759, 763, 764, 765, 771, 795, 801], "top_el": 759, "top_lay": 801, "top_layer_obj": [6, 764], "topic": 777, "tornado": [758, 759, 760, 761, 762, 763, 765, 766], "tort": [749, 761], "total": [194, 351, 539, 801], "touch": 165, "touchston": [107, 667, 773], "touchstone_file_path": 667, "trace": [110, 171, 530, 533, 540, 579, 593, 646, 750, 753, 755, 763, 795, 797, 804, 808, 811], "trace_in_lay": [754, 763], "trace_in_width": [754, 763], "trace_n": 751, "trace_out_lay": [754, 763], "trace_out_width": [754, 763], "trace_p": 751, "trace_path": 764, "trace_seg": 766, "trace_w": 750, "trace_w2": 750, "trace_width": [593, 754], "trace_with_via_f": 804, "traceback": [758, 759, 760, 761, 762, 763, 765, 766], "traitlet": [758, 759, 760, 761, 762, 763, 765, 766], "transform": [712, 713, 714], "transient": 753, "transit": 751, "translat": [765, 774], "treat": 382, "tree": 614, "tri": 530, "trigger": 654, "trim": [467, 546], "trim_to_termin": 546, "troubleshoot": [776, 781], "true": [0, 8, 23, 29, 31, 32, 62, 68, 69, 72, 74, 75, 76, 77, 78, 80, 82, 87, 105, 107, 108, 109, 110, 111, 121, 122, 170, 176, 191, 222, 228, 229, 231, 234, 254, 255, 351, 367, 382, 384, 386, 387, 391, 393, 406, 407, 408, 409, 411, 424, 429, 434, 437, 439, 442, 451, 454, 455, 457, 458, 459, 460, 468, 469, 470, 471, 472, 474, 476, 478, 481, 484, 487, 488, 497, 498, 499, 500, 502, 505, 509, 517, 518, 522, 529, 530, 532, 542, 544, 546, 548, 581, 582, 583, 584, 592, 602, 604, 610, 613, 615, 616, 617, 621, 625, 626, 628, 631, 640, 646, 651, 652, 653, 654, 659, 667, 674, 679, 682, 695, 698, 700, 701, 706, 707, 711, 712, 713, 714, 715, 725, 727, 728, 729, 730, 733, 739, 742, 743, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 782, 795, 804, 808, 809], "truncat": 468, "try": [602, 751], "tupl": [73, 89, 118, 176, 215, 216, 519, 525, 536, 586, 621, 635, 637, 715], "turn": 770, "tutori": [781, 790], "two": [68, 75, 78, 519, 525, 526, 527, 528, 531, 536, 586, 646, 662, 665, 673, 675, 678, 684, 713, 714, 751, 756, 763], "txt": [7, 747, 775], "type": [16, 28, 31, 37, 50, 63, 69, 74, 81, 99, 105, 107, 111, 178, 179, 204, 234, 252, 259, 263, 275, 296, 299, 312, 333, 364, 376, 382, 400, 426, 528, 574, 578, 590, 601, 635, 658, 668, 689, 690, 691, 692, 693, 694, 703, 708, 715, 728, 750, 752, 756, 766, 769, 770, 771, 773, 781, 798, 809], "typic": 382, "u": 777, "u1": [75, 752, 755, 756, 759, 769, 773, 782, 785, 786, 787, 792, 793, 794, 796], "u100": [89, 712, 713, 714], "u15": [769, 782], "u1_pcie_gen4_tx3_cap_n": 756, "u1_pcie_gen4_tx3_cap_p": 756, "u2": 759, "u2a5": [0, 8, 74, 75, 520, 521, 523, 524, 531, 534, 535, 660, 661, 663, 664, 666, 673, 676, 677], "u7": [769, 796], "u7_gnd": 796, "u7_vdd_ddr_a1": 769, "u7_vdd_ddr_a9": 769, "u7_vdd_ddr_b3": 769, "u7_vdd_ddr_b9": 769, "u7_vdd_ddr_c1": 769, "u7_vdd_ddr_d1": 769, "u7_vdd_ddr_d9": 769, "u7_vdd_ddr_f2": 769, "u7_vdd_ddr_f8": 769, "u7_vdd_ddr_g1": 769, "u7_vdd_ddr_g7": 769, "u7_vdd_ddr_g9": 769, "u7_vdd_ddr_j1": 769, "u7_vdd_ddr_j2": 769, "u7_vdd_ddr_j8": 769, "u7_vdd_ddr_j9": 769, "u7_vdd_ddr_l1": 769, "u7_vdd_ddr_l9": 769, "u7_vdd_ddr_r1": 769, "u7_vdd_ddr_t9": 769, "u9": [769, 789], "u9_5v_1": 769, "u9_gnd": 769, "u9_gnd_pin": 789, "ui": [750, 751, 774], "um": 765, "uncom": 764, "undefin": [59, 117, 202, 259, 364], "undefinedlayertyp": 689, "under": 780, "understand": [776, 781], "union": 809, "union_polygon": 809, "uniqu": [74, 628], "unit": [240, 593, 602, 626, 627, 749, 750, 751, 752, 759, 760, 762, 764, 765], "unitless": 382, "unless": 382, "unspecifi": [385, 504], "unwant": 527, "up": [382, 696, 715, 751, 752, 755, 756, 763, 766, 777, 779, 783, 784, 798], "updat": [108, 111, 570, 750, 779, 801], "upgrad": [747, 775, 777], "upper": [15, 61, 261, 264, 300, 352, 353, 526, 538, 578, 747, 753, 775], "upper_pad_to_lower_pad": [202, 626], "upper_right_point": [6, 578, 764], "us": [0, 1, 3, 4, 62, 69, 72, 74, 75, 76, 83, 86, 99, 110, 111, 214, 222, 228, 382, 384, 386, 387, 406, 423, 427, 439, 444, 445, 446, 450, 451, 453, 460, 461, 467, 469, 470, 471, 472, 473, 474, 475, 476, 481, 492, 493, 495, 505, 506, 527, 530, 533, 557, 584, 592, 593, 608, 613, 625, 626, 628, 634, 636, 640, 641, 646, 658, 667, 674, 700, 712, 713, 714, 724, 729, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 775, 776, 777, 778, 780, 781, 798, 803, 808, 811], "usag": [382, 779, 809], "usb3_d_n": 794, "usb3_vbu": 759, "use_airbox_horizontal_extent_multipl": 808, "use_airbox_negative_vertical_extent_multipl": 808, "use_airbox_positive_vertical_extent_multipl": 808, "use_arc_to_chord_error": 809, "use_dc_custom_set": 759, "use_default_coax_port_radial_extens": [382, 782], "use_default_cutout": [8, 382], "use_defeatur": 809, "use_defeature_abs_length": 809, "use_dielectric_extent_multipl": 808, "use_dot_separ": 628, "use_pp": 765, "use_pyaedt_cutout": 752, "use_pyaedt_extent_comput": 760, "use_q3d_for_dc": [382, 749, 751, 764], "use_radiation_boundari": 382, "use_round_corn": 760, "use_shell_el": 809, "user": [382, 459, 690, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 773, 774, 779, 781], "user_defined_component_nam": 750, "user_defined_ext": 533, "user_global_n": [758, 759, 760, 761, 762, 763, 765, 766], "user_n": [758, 759, 760, 761, 762, 763, 765, 766], "userwarn": [749, 750, 751, 752, 753, 756, 758, 759, 760, 762, 763, 764, 765, 766, 771, 773], "usual": [382, 646], "util": [508, 754, 763, 770], "v": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 777], "v0": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "v1": [384, 386, 387, 759], "v1p0_s0": [338, 339, 348], "v1p5_s3": [520, 523, 534, 660, 663, 666, 676], "v222": 777, "v231": 779, "v241": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 773], "v28": 759, "v29": 759, "v3": [749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773], "val": [180, 181, 644, 645], "vale": [74, 97], "valid": [527, 547, 690, 707, 755], "validate_full_design": 755, "validation_info": 755, "valu": [16, 22, 28, 50, 51, 69, 72, 74, 75, 76, 83, 93, 98, 99, 108, 111, 112, 180, 181, 186, 188, 195, 196, 198, 201, 202, 203, 222, 228, 253, 254, 255, 267, 295, 351, 382, 384, 385, 386, 387, 392, 401, 402, 404, 405, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 438, 439, 440, 442, 444, 445, 446, 447, 450, 453, 457, 460, 467, 469, 470, 471, 472, 474, 479, 480, 481, 484, 485, 487, 488, 490, 491, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 514, 515, 519, 520, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 538, 552, 555, 574, 586, 593, 610, 613, 621, 625, 633, 635, 637, 638, 640, 644, 645, 646, 650, 652, 654, 658, 660, 663, 664, 668, 670, 673, 674, 676, 677, 679, 702, 711, 712, 713, 714, 715, 750, 752, 753, 754, 759, 770, 773, 780, 789, 801, 805, 806], "value_col": [99, 752], "valuefield": 111, "variabl": [113, 114, 115, 116, 217, 246, 509, 510, 511, 512, 513, 514, 515, 746, 750, 753, 754, 766, 777, 780, 798], "variable_valu": [593, 760], "variableserv": [508, 754, 763], "variat": 750, "variou": [777, 798], "vcc": 382, "vdd": 754, "vdd_ddr": [759, 769], "ve": 773, "vector": [89, 592, 712], "venv": [749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 771, 773], "veri": 382, "version": [86, 88, 91, 92, 93, 95, 96, 98, 214, 520, 521, 523, 524, 531, 534, 535, 660, 661, 663, 664, 666, 673, 676, 677, 724, 726, 745, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 773, 775, 776, 781, 782, 783, 793, 795, 796, 806, 809], "vertic": [222, 335, 382, 445, 446, 519, 525, 527, 528, 530, 536], "vertical_extent_factor": [519, 525, 528, 536], "via": [122, 191, 198, 208, 240, 382, 488, 500, 507, 625, 630, 641, 642, 643, 646, 650, 711, 728, 746, 751, 754, 762, 765], "via_0": 804, "via_ap_d": 753, "via_dens": 809, "via_diam": 751, "via_hol": 755, "via_hole_s": [4, 754, 763], "via_materi": 809, "via_nam": [650, 749, 750, 751], "via_num_sid": 809, "via_pitch": 763, "via_report_fil": 382, "via_set": 809, "via_spac": [750, 751], "via_styl": 809, "view": [746, 756, 762, 774, 778, 781], "virt_gnd": [749, 750], "virtual": [777, 779], "visibl": [711, 750], "visual": [755, 759, 766, 774], "visualz": 756, "vname": 766, "void": [232, 235, 351, 369, 382, 421, 422, 491, 572, 577, 583, 751, 766, 809], "void_poli": 751, "void_shap": [572, 751], "volt": [384, 387], "voltag": [77, 283, 321, 382, 384, 386, 387, 498, 534, 535, 675, 676, 677, 678, 679, 684, 687, 759, 797], "voltage_valu": [384, 386, 387, 534, 535, 676, 677], "voltagesourc": 671, "volum": [240, 750], "vp_neg": 794, "vp_po": 794, "vprobe": 794, "vrm": 759, "vrm_current_sourc": 794, "vrm_po": 794, "vrm_voltage_sourc": 794, "vss": 754, "w": [766, 768, 769, 770, 771, 773], "w1": 750, "w11": 759, "w18": 759, "w19": 759, "w1_name": 750, "w2": 750, "wa": [749, 750, 752, 755, 756, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 773], "wai": [747, 759, 774, 775], "wall": 646, "want": [382, 461, 530, 754, 755, 783], "warn": [747, 749, 750, 751, 752, 753, 754, 755, 756, 764, 773, 775], "warranti": [749, 761], "wave": [266, 270, 272, 298, 302, 307, 309, 519, 525, 528, 536, 751, 753, 795], "wave_horizontal_extens": 764, "wave_port_1": 751, "wave_port_2": 751, "wave_vertical_extens": 764, "waveguid": 764, "wavelength": [750, 753], "waveport": [266, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 746, 753], "we": [382, 759, 765, 769, 770], "websit": [774, 777], "well": 774, "were": [583, 607], "what": 776, "wheelhous": 779, "when": [10, 62, 68, 69, 72, 74, 75, 76, 77, 78, 80, 82, 87, 92, 97, 105, 107, 108, 109, 110, 191, 222, 228, 229, 231, 356, 382, 384, 386, 387, 391, 393, 406, 408, 409, 423, 424, 434, 437, 439, 442, 444, 445, 446, 447, 451, 453, 454, 457, 458, 460, 461, 467, 469, 470, 471, 472, 474, 481, 484, 487, 488, 497, 498, 499, 500, 502, 505, 509, 517, 518, 522, 527, 529, 530, 532, 542, 544, 546, 575, 577, 578, 581, 582, 583, 584, 592, 604, 610, 616, 617, 625, 631, 640, 646, 652, 659, 667, 674, 700, 701, 706, 707, 712, 713, 714, 725, 727, 728, 729, 730, 733, 739, 742, 743, 752, 753, 769, 773], "where": [59, 74, 75, 527, 650, 654, 690, 708, 752, 754, 779], "whether": [12, 68, 72, 75, 78, 81, 108, 109, 121, 122, 176, 191, 221, 224, 228, 229, 231, 234, 269, 278, 279, 281, 282, 283, 294, 303, 306, 316, 317, 319, 320, 321, 340, 367, 469, 471, 473, 474, 475, 511, 549, 602, 610, 621, 626, 628, 640, 650, 658, 667, 690, 698, 700, 706, 711, 715, 725, 749, 761, 769, 770], "which": [73, 74, 75, 81, 83, 95, 99, 111, 221, 222, 228, 238, 271, 292, 308, 331, 382, 463, 473, 520, 523, 527, 534, 549, 550, 575, 577, 578, 579, 592, 593, 602, 610, 627, 628, 635, 640, 646, 651, 658, 660, 663, 676, 700, 712, 713, 714, 724, 750, 751, 754, 755, 756, 759, 760, 761, 762, 765, 769, 774, 777, 783], "while": [586, 749, 750, 753, 754, 755, 760, 774, 780], "white": [727, 730], "who": 777, "whom": [749, 761], "why": 776, "wide": [754, 763], "width": [110, 171, 176, 328, 519, 525, 528, 536, 540, 574, 578, 579, 593, 621, 715, 749, 750, 751, 755, 758, 763, 764, 766, 808, 811], "win64": [749, 750, 751, 752, 753, 754, 755, 756, 759, 764, 773], "window": [7, 747, 759, 774, 775, 777], "winerror": [758, 759, 760, 761, 762, 763, 765, 766], "winx64": 779, "wire": [382, 499], "wirebond": [382, 690], "within": 746, "without": [749, 750, 761, 763, 777], "won": 382, "work": [527, 657, 754, 755, 759, 777, 778, 779, 798], "workflow": 774, "working_dir": 765, "working_fold": 753, "would": 776, "write": [1, 747, 771, 775, 779], "write_xml": 765, "written": [759, 774], "writtent": 707, "x": [15, 93, 109, 182, 195, 251, 264, 300, 338, 345, 348, 352, 353, 354, 533, 538, 574, 575, 577, 585, 586, 589, 592, 626, 650, 653, 711, 712, 713, 714, 759], "x1": [577, 637, 752, 755, 756, 765, 769], "x1_pcie_gen4_tx3_n": 756, "x1_pcie_gen4_tx3_p": 756, "x2": [577, 637, 765], "x64": [758, 759, 760, 761, 762, 763, 764, 765, 766], "x_size": [626, 751, 804], "x_valu": 348, "xc": 577, "xloc": 763, "xlsx": 700, "xml": [700, 707, 753, 758, 760], "xn": 577, "xy": [34, 769], "y": [15, 93, 109, 183, 196, 251, 264, 300, 338, 345, 348, 352, 353, 354, 533, 538, 574, 575, 577, 585, 586, 589, 592, 626, 650, 653, 711, 712, 713, 714, 759], "y1": [577, 637, 765], "y11": 759, "y2": [577, 637, 765], "y28": 759, "y29": 759, "y_size": [626, 751, 804], "y_valu": 348, "yc": 577, "yield": 562, "yloc": 763, "yloc_l": 764, "yloc_u": 764, "yn": 577, "you": [111, 382, 461, 530, 746, 747, 748, 749, 750, 751, 753, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 773, 774, 775, 776, 777, 778, 779, 780, 783, 789, 798, 803], "your": [382, 748, 750, 754, 758, 764, 777, 779, 798], "z": [711, 714, 773], "z0": [295, 438], "zero": [191, 382, 403, 752, 755, 806], "zip": 777, "zmqshell": [758, 759, 760, 761, 762, 763, 765, 766]}, "titles": ["Components", "EDB manager", "Stackup &amp; layers", "Nets", "vias and padstacks", "Ports", "Modeler &amp; primitives", "Siwave manager", "Simulation configuration", "Sources and excitations", "pyedb.dotnet.edb", "EDBComponent", "assign_rlc_model", "assign_s_param_model", "assign_spice_model", "bounding_box", "cap_value", "center", "component", "component_def", "component_instance", "component_property", "create_clearance_on_component", "create_package_def", "delete", "enabled", "group_type", "id", "ind_value", "is_enabled", "is_null", "is_parallel_rlc", "is_top_mounted", "layout_instance", "location", "lower_elevation", "model", "model_type", "name", "net", "netlist_model", "nets", "numpins", "package_def", "part_name", "partname", "pinlist", "pins", "placement_layer", "refdes", "res_value", "rlc_values", "rotation", "s_param_model", "solder_ball_diameter", "solder_ball_height", "solder_ball_placement", "solder_ball_shape", "spice_model", "top_bottom_association", "type", "upper_elevation", "use_s_parameter_model", "value", "Components", "ICs", "IOs", "Others", "add_port_on_rlc_component", "add_rlc_boundary", "capacitors", "components_by_partname", "create", "create_pingroup_from_pins", "create_port_on_component", "create_port_on_pins", "create_rlc_component", "create_source_on_component", "deactivate_rlc_component", "definitions", "delete", "delete_single_pin_rlc", "disable_rlc_component", "export_bom", "export_definition", "find_by_reference_designator", "get_aedt_pin_name", "get_component_by_name", "get_component_net_connection_info", "get_component_placement_vector", "get_components_from_nets", "get_nets_from_pin_list", "get_pin_from_component", "get_pin_position", "get_pins", "get_pins_name_from_net", "get_rats", "get_solder_ball_height", "get_through_resistor_list", "import_bom", "import_definition", "inductors", "instances", "nport_comp_definition", "refresh_components", "replace_rlc_by_gap_boundaries", "resistors", "set_component_model", "set_component_rlc", "set_solder_ball", "short_component_pins", "update_rlc_from_bom", "EdbValue", "name", "tofloat", "tostring", "value", "LayerEdbClass", "color", "fill_material", "id", "is_stackup_layer", "is_via_layer", "name", "transparency", "type", "update", "EDBDifferentialPairData", "add_net", "api_class", "api_create", "api_negative_net", "api_nets", "api_positive_net", "delete", "find_by_name", "is_null", "name", "negative_net", "positive_net", "EDBExtendedNetData", "add_net", "api_class", "api_create", "api_nets", "components", "delete", "find_by_name", "is_null", "name", "nets", "rlc", "serial_rlc", "shunt_rlc", "EDBNetClassData", "add_net", "api_create", "api_nets", "delete", "is_null", "name", "nets", "EDBNetsData", "api_class", "api_object", "components", "create", "delete", "extended_net", "find_by_name", "find_dc_short", "get_smallest_trace_width", "is_null", "is_power_ground", "name", "padstack_instances", "plot", "primitives", "EDBPadProperties", "geometry_type", "int_to_geometry_type", "int_to_pad_type", "offset_x", "offset_y", "parameters", "parameters_values", "parameters_values_string", "polygon_data", "rotation", "shape", "EDBPadstack", "convert_to_3d_microvias", "hole_diameter", "hole_diameter_string", "hole_finished_size", "hole_offset_x", "hole_offset_y", "hole_parameters", "hole_params", "hole_plating_ratio", "hole_plating_thickness", "hole_properties", "hole_range", "hole_rotation", "hole_type", "instances", "material", "name", "padstack_instances", "split_to_microvias", "via_layers", "via_start_layer", "via_stop_layer", "EDBPadstackInstance", "aedt_name", "backdrill_bottom", "backdrill_top", "bounding_box", "component", "component_pin", "create_coax_port", "create_port", "create_rectangle_in_pad", "create_terminal", "dcir_equipotential_region", "delete", "get_connected_object_id_set", "get_connected_objects", "get_reference_pins", "get_terminal", "id", "in_polygon", "in_voids", "is_null", "is_pin", "is_void", "layer", "layer_name", "layer_range_names", "lower_elevation", "metal_volume", "name", "net", "net_name", "object_instance", "padstack_definition", "parametrize_position", "pin", "pin_number", "pingroups", "placement_layer", "position", "primitive_type", "rotation", "set_backdrill_bottom", "set_backdrill_top", "start_layer", "stop_layer", "terminal", "top_bottom_association", "type", "upper_elevation", "GapPort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "id", "impedance", "is_circuit_port", "is_current_source", "is_null", "is_port", "is_reference_terminal", "is_voltage_source", "layer", "location", "magnitude", "name", "net", "net_name", "phase", "ref_terminal", "reference_net_name", "reference_object", "renormalize", "renormalize_z0", "terminal_type", "type", "WavePort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "deembed_length", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "horizontal_extent_factor", "id", "impedance", "is_circuit_port", "is_current_source", "is_null", "is_port", "is_reference_terminal", "is_voltage_source", "layer", "location", "magnitude", "name", "net", "net_name", "pec_launch_width", "phase", "ref_terminal", "reference_net_name", "reference_object", "terminal_type", "type", "vertical_extent_factor", "EDBArcs", "center", "end", "height", "is_ccw", "is_point", "is_segment", "length", "mid_point", "points", "points_raw", "radius", "start", "EDBPrimitives", "arcs", "area", "bbox", "bounding_box", "center", "component", "convert_to_polygon", "delete", "get_closest_arc_midpoint", "get_closest_point", "get_connected_object_id_set", "get_connected_objects", "id", "intersect", "intersection_type", "is_arc", "is_intersecting", "is_negative", "is_null", "is_void", "layer", "layer_name", "longest_arc", "name", "net", "net_name", "primitive_type", "shortest_arc", "subtract", "type", "unite", "voids", "SimulationConfiguration", "ac_settings", "add_current_source", "add_dc_ground_source_term", "add_rlc", "add_voltage_source", "batch_solve_settings", "build_simulation_project", "dc_settings", "export_json", "filename", "import_json", "open_edb_after_build", "setup_name", "solver_type", "SimulationConfigurationAc", "adaptive_high_freq", "adaptive_low_freq", "adaptive_type", "arc_angle", "arc_to_chord_error", "basis_order", "decade_count", "defeature_abs_length", "defeature_layout", "do_lambda_refinement", "enforce_causality", "enforce_passivity", "ignore_non_functional_pads", "include_inter_plane_coupling", "max_arc_points", "max_mag_delta_s", "max_num_passes", "max_suf_dev", "mesh_freq", "mesh_sizefactor", "min_num_passes", "min_pad_area_to_mesh", "min_plane_area_to_mesh", "min_void_area", "minimum_void_surface", "passivity_tolerance", "percentage_error_z0", "process_padstack_definitions", "radiation_box", "relative_error", "return_current_distribution", "snap_length_threshold", "start_azimuth", "start_freq", "step_freq", "stop_freq", "sweep_interpolating", "sweep_name", "sweep_type", "use_arc_to_chord_error", "use_error_z0", "use_q3d_for_dc", "xtalk_threshold", "SimulationConfigurationBatch", "add_frequency_sweep", "add_source", "airbox_horizontal_extent", "airbox_negative_vertical_extent", "airbox_positive_vertical_extent", "coax_solder_ball_diameter", "components", "coplanar_instances", "cutout_subdesign_expansion", "cutout_subdesign_round_corner", "cutout_subdesign_type", "dielectric_extent", "do_cutout_subdesign", "do_pingroup", "etching_factor_instances", "generate_excitations", "generate_solder_balls", "honor_user_dielectric", "include_only_selected_nets", "output_aedb", "power_nets", "signal_layer_etching_instances", "signal_layers_properties", "signal_nets", "sources", "trim_reference_size", "truncate_airbox_at_ground", "use_airbox_horizontal_extent_multiple", "use_airbox_negative_vertical_extent_multiple", "use_airbox_positive_vertical_extent_multiple", "use_default_coax_port_radial_extension", "use_default_cutout", "use_dielectric_extent_multiple", "use_pyaedt_cutout", "use_radiation_boundary", "SimulationConfigurationDc", "dc_compute_inductance", "dc_contact_radius", "dc_error_energy", "dc_export_thermal_data", "dc_full_report_path", "dc_icepak_temp_file", "dc_import_thermal_data", "dc_max_init_mesh_edge_length", "dc_max_num_pass", "dc_mesh_bondwires", "dc_mesh_vias", "dc_min_num_pass", "dc_min_plane_area_to_mesh", "dc_min_void_area_to_mesh", "dc_num_bondwire_sides", "dc_num_via_sides", "dc_per_pin_res_path", "dc_per_pin_use_pin_format", "dc_percent_local_refinement", "dc_perform_adaptive_refinement", "dc_plot_jv", "dc_refine_bondwires", "dc_refine_vias", "dc_report_config_file", "dc_report_show_Active_devices", "dc_slide_position", "dc_source_terms_to_ground", "dc_use_dc_custom_settings", "dc_use_loop_res_for_per_pin", "dc_via_report_path", "Variable", "delete", "description", "is_parameter", "name", "value", "value_object", "value_string", "EdbHfss", "configure_hfss_analysis_setup", "configure_hfss_extents", "create_bundle_wave_port", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_coax_port_on_component", "create_current_source_on_net", "create_current_source_on_pin", "create_differential_wave_port", "create_edge_port_horizontal", "create_edge_port_on_polygon", "create_edge_port_vertical", "create_hfss_ports_on_padstack", "create_lumped_port_on_net", "create_resistor_on_pin", "create_rlc_boundary_on_pins", "create_vertical_circuit_port_on_clipped_traces", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_wave_port", "excitations", "get_layout_bounding_box", "get_ports_number", "get_trace_width_for_traces_with_ports", "hfss_extent_info", "layout_defeaturing", "probes", "set_coax_port_attributes", "sources", "trim_component_reference_size", "LayoutValidation", "dc_shorts", "disjoint_nets", "fix_self_intersections", "illegal_net_names", "illegal_rlc_values", "Materials", "add_conductor_material", "add_debye_material", "add_dielectric_material", "add_djordjevicsarkar_dielectric", "add_material", "add_multipole_debye_material", "delete_material", "duplicate", "iterate_materials_in_amat", "load_amat", "load_material", "material_property_to_id", "materials", "read_materials", "read_syslib_material", "syslib", "update_material", "Modeler", "add_void", "circles", "create_bondwire", "create_circle", "create_pin_group", "create_polygon", "create_rectangle", "create_trace", "db", "defeature_polygon", "delete_primitives", "fix_circle_void_for_clipping", "get_layout_statistics", "get_polygon_bounding_box", "get_polygon_points", "get_polygons_by_layer", "get_primitive", "get_primitive_by_layer_and_point", "get_primitives", "layers", "parametrize_polygon", "parametrize_trace_width", "paths", "polygons", "polygons_by_layer", "primitives", "primitives_by_layer", "primitives_by_net", "rectangles", "shape_to_polygon_data", "unite_polygons_on_layer", "EdbNets", "classify_nets", "components_by_nets", "db", "delete", "eligible_power_nets", "find_or_create_net", "generate_extended_nets", "get_dcconnected_net_list", "get_net_by_name", "get_plot_data", "get_powertree", "is_net_in_component", "is_power_gound_net", "merge_nets_polygons", "netlist", "nets", "nets_by_components", "plot", "power", "signal", "EdbPadstacks", "check_and_fix_via_plating", "create", "create_circular_padstack", "create_coax_port", "db", "definitions", "delete_padstack_instances", "duplicate", "find_instance_by_id", "get_instances", "get_pad_parameters", "get_padstack_instance_by_net_name", "get_padstack_instances_intersecting_bounding_box", "get_padstack_instances_rtree_index", "get_pinlist_from_component_and_net", "get_reference_pins", "get_via_instance_from_net", "instances", "instances_by_name", "int_to_geometry_type", "int_to_pad_type", "merge_via_along_lines", "pad_type", "pingroups", "pins", "place", "remove_pads_from_padstack", "set_all_antipad_value", "set_pad_property", "set_solderball", "vias", "EdbSiwave", "add_siwave_dc_analysis", "add_siwave_syz_analysis", "configure_siw_analysis_setup", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_circuit_port_on_pin_group", "create_current_source_on_net", "create_current_source_on_pin", "create_current_source_on_pin_group", "create_dc_terminal", "create_exec_file", "create_impedance_crosstalk_scan", "create_pin_group", "create_pin_group_on_net", "create_pin_group_terminal", "create_port_between_pin_and_layer", "create_resistor_on_pin", "create_rlc_component", "create_voltage_probe_on_pin_group", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_voltage_source_on_pin_group", "create_vrm_module", "excitations", "icepak_component_file", "icepak_use_minimal_comp_defaults", "pin_groups", "place_voltage_probe", "probes", "sources", "voltage_regulator_modules", "Stackup", "add_document_layer", "add_layer", "add_layer_above", "add_layer_below", "add_layer_bottom", "add_layer_top", "add_outline_layer", "adjust_solder_dielectrics", "all_layers", "create_symmetric_stackup", "dielectric_layers", "export", "flip_design", "get_layout_thickness", "layer_types", "layers", "layers_by_id", "limits", "load", "mode", "non_stackup_layers", "num_layers", "place_a3dcomp_3d_placement", "place_in_layout", "place_in_layout_3d_placement", "place_instance", "plot", "refresh_layer_collection", "remove_layer", "residual_copper_area_per_layer", "set_layer_clone", "signal_layers", "stackup_layers", "thickness", "update_layout", "Siwave", "close_project", "current_version", "export_dc_simulation_report", "export_element_data", "export_icepak_project", "export_siwave_report", "icepak", "lock_file", "open_project", "oproject", "project_file", "project_name", "project_path", "pyaedt_dir", "quit_application", "results_directory", "run_dc_simulation", "run_icepak_simulation", "save_project", "src_dir", "version_keys", "API reference", "Contribute", "Examples", "EDB: 5G linear array antenna", "EDB: Layout Components", "EDB: fully parametrized design", "EDB: Pin to Pin project", "EDB: geometry creation", "EDB: Layout Creation and Setup", "EDB: parameterized design", "EDB: Network Analysis in SIwave", "AEDT integration", "EDB: geometry creation", "EDB: SIwave DC-IR Analysis", "EDB: IPC2581 export", "EDB: Rename nets and ports", "EDB: plot nets with Matplotlib", "EDB: parametric via creation", "EDB: fully parametrized CPWG design", "EDB: Edit Control File and import gds", "EDB: post-layout parameterization", "Standalone", "Import Materials", "Import Ports", "Import Setup AC", "Import Stackup", "Use configuration", "Set up EDB for Power Integrity Analysis", "About PyEDB", "Contribute", "Getting started", "Installation", "Quick code", "Troubleshooting", "Versions and interfaces", "PyEDB documentation 0.20.0", "Build a signal integrity project", "Clip a design", "Build simulation projects", "Create a resistor boundary on pins", "Create an RLC boundary on pins", "Create an RLC component between pins", "Working with a component", "Get layout statistics", "Get layout size", "Run layout queries", "Create a circuit port", "Create a coaxial port", "Create current and voltage sources", "Create an edge port", "Create port between a pin and layer", "Create sources", "User guide", "Add a layer in a layout stackup", "Work with a layer stackup", "Edit a layer stackup in a layout stackup", "Load a layout file", "Load a layout", "Create a padstack instance", "Work with a padstack", "Edit a padstack definition", "Set up a SIwave analysis", "Define an HFSS extent", "Set up an HFSS simulation", "Set up simulations", "Define design variables"], "titleterms": {"": [764, 773], "0": 781, "20": 781, "3d": [749, 750, 773], "5g": 749, "about": 774, "ac": 770, "ac_set": 383, "activ": 764, "adaptive_high_freq": 398, "adaptive_low_freq": 399, "adaptive_typ": 400, "add": [749, 751, 754, 758, 768, 769, 770, 799], "add_conductor_materi": 554, "add_current_sourc": 384, "add_dc_ground_source_term": 385, "add_debye_materi": 555, "add_dielectric_materi": 556, "add_djordjevicsarkar_dielectr": 557, "add_document_lay": 689, "add_frequency_sweep": 442, "add_lay": 690, "add_layer_abov": 691, "add_layer_below": 692, "add_layer_bottom": 693, "add_layer_top": 694, "add_materi": 558, "add_multipole_debye_materi": 559, "add_net": [128, 141, 155], "add_outline_lay": 695, "add_port_on_rlc_compon": 68, "add_rlc": 386, "add_rlc_boundari": 69, "add_siwave_dc_analysi": 657, "add_siwave_syz_analysi": 658, "add_sourc": 443, "add_void": 572, "add_voltage_sourc": 387, "addit": 765, "adher": [747, 775], "adjust_solder_dielectr": 696, "aedb": [760, 778], "aedt": [749, 750, 752, 755, 757, 764], "aedt_nam": 214, "airbox": 764, "airbox_horizontal_ext": 444, "airbox_negative_vertical_ext": 445, "airbox_positive_vertical_ext": 446, "all": [761, 769, 770, 773, 789], "all_lay": 697, "an": [755, 760, 762, 769, 770, 773, 778, 786, 787, 795, 808, 809], "analysi": [750, 756, 759, 773, 807], "analyz": [752, 773], "ansi": [759, 761], "antenna": 749, "api": 746, "api_class": [129, 142, 163], "api_cr": [130, 143, 156], "api_negative_net": 131, "api_net": [132, 144, 157], "api_object": 164, "api_positive_net": 133, "applic": [754, 755], "arc": 350, "arc_angl": 401, "arc_to_chord_error": 402, "area": 351, "arrai": 749, "assign": [750, 773], "assign_rlc_model": 12, "assign_s_param_model": 13, "assign_spice_model": 14, "backdrill_bottom": 215, "backdrill_top": 216, "basis_ord": 403, "batch_solve_set": 388, "bbox": 352, "between": [769, 787, 796], "bom": 752, "boundari": [750, 765, 785, 786], "boundary_typ": [263, 299], "bounding_box": [15, 217, 264, 300, 353], "build": [782, 784], "build_simulation_project": 389, "cap_valu": 16, "capacitor": 70, "capactitor": 773, "center": [17, 337, 354], "check": [752, 768], "check_and_fix_via_pl": 625, "circl": 573, "circuit": [769, 792], "class": [750, 762], "classify_net": 604, "clean": [750, 753, 754, 758, 760], "cleanup": 771, "clearanc": 764, "clip": 783, "clone": [747, 775], "close": [749, 750, 752, 753, 758, 760, 761, 764, 765, 768, 769, 770], "close_project": 725, "coax": 769, "coax_solder_ball_diamet": 447, "coaxial": [761, 793], "code": [747, 775, 778], "color": 118, "compat": 779, "compon": [0, 18, 64, 145, 165, 218, 265, 301, 355, 448, 750, 752, 754, 759, 761, 787, 788, 789], "component_def": 19, "component_inst": 20, "component_pin": 219, "component_properti": 21, "components_by_net": 605, "components_by_partnam": 71, "conda": 779, "configur": [8, 752, 756, 768, 769, 770, 771, 772, 773], "configure_hfss_analysis_setup": 517, "configure_hfss_ext": 518, "configure_siw_analysis_setup": 659, "connect": [759, 778, 789], "connector": [749, 754], "contribut": [747, 775], "control": 765, "convert_to_3d_microvia": 191, "convert_to_polygon": 356, "coordin": 769, "copi": [760, 762], "coplanar_inst": 449, "couple_port": [266, 302], "cpwg": 764, "cpython": 777, "creat": [72, 166, 626, 749, 750, 753, 754, 755, 756, 758, 760, 761, 762, 763, 764, 766, 769, 770, 773, 785, 786, 787, 792, 793, 794, 795, 796, 797, 804], "create_bondwir": 574, "create_bundle_wave_port": 519, "create_circl": 575, "create_circuit_port_on_net": [520, 660], "create_circuit_port_on_pin": [521, 661], "create_circuit_port_on_pin_group": 662, "create_circular_padstack": 627, "create_clearance_on_compon": 22, "create_coax_port": [220, 628], "create_coax_port_on_compon": 522, "create_current_source_on_net": [523, 663], "create_current_source_on_pin": [524, 664], "create_current_source_on_pin_group": 665, "create_dc_termin": 666, "create_differential_wave_port": 525, "create_edge_port_horizont": 526, "create_edge_port_on_polygon": 527, "create_edge_port_vert": 528, "create_exec_fil": 667, "create_hfss_ports_on_padstack": 529, "create_impedance_crosstalk_scan": 668, "create_lumped_port_on_net": 530, "create_package_def": 23, "create_pin_group": [576, 669], "create_pin_group_on_net": 670, "create_pin_group_termin": 671, "create_pingroup_from_pin": 73, "create_polygon": 577, "create_port": 221, "create_port_between_pin_and_lay": 672, "create_port_on_compon": 74, "create_port_on_pin": 75, "create_rectangl": 578, "create_rectangle_in_pad": 222, "create_resistor_on_pin": [531, 673], "create_rlc_boundary_on_pin": 532, "create_rlc_compon": [76, 674], "create_source_on_compon": 77, "create_symmetric_stackup": 698, "create_termin": 223, "create_trac": 579, "create_vertical_circuit_port_on_clipped_trac": 533, "create_voltage_probe_on_pin_group": 675, "create_voltage_source_on_net": [534, 676], "create_voltage_source_on_pin": [535, 677], "create_voltage_source_on_pin_group": 678, "create_vrm_modul": 679, "create_wave_port": 536, "creation": [753, 754, 758, 763], "current": 794, "current_vers": 726, "cutout": [752, 756, 760, 766, 773], "cutout_subdesign_expans": 450, "cutout_subdesign_round_corn": 451, "cutout_subdesign_typ": 452, "data": [750, 765], "databas": [759, 762], "db": [580, 606, 629], "dc": 759, "dc_compute_induct": 478, "dc_contact_radiu": 479, "dc_error_energi": 480, "dc_export_thermal_data": 481, "dc_full_report_path": 482, "dc_icepak_temp_fil": 483, "dc_import_thermal_data": 484, "dc_max_init_mesh_edge_length": 485, "dc_max_num_pass": 486, "dc_mesh_bondwir": 487, "dc_mesh_via": 488, "dc_min_num_pass": 489, "dc_min_plane_area_to_mesh": 490, "dc_min_void_area_to_mesh": 491, "dc_num_bondwire_sid": 492, "dc_num_via_sid": 493, "dc_per_pin_res_path": 494, "dc_per_pin_use_pin_format": 495, "dc_percent_local_refin": 496, "dc_perform_adaptive_refin": 497, "dc_plot_jv": 498, "dc_refine_bondwir": 499, "dc_refine_via": 500, "dc_report_config_fil": 501, "dc_report_show_active_devic": 502, "dc_set": 390, "dc_short": 548, "dc_slide_posit": 503, "dc_source_terms_to_ground": 504, "dc_use_dc_custom_set": 505, "dc_use_loop_res_for_per_pin": 506, "dc_via_report_path": 507, "dcir": 759, "dcir_equipotential_region": 224, "ddr4_dq": 761, "deactivate_rlc_compon": 78, "decade_count": 404, "declar": 778, "deemb": [267, 303], "deembed_length": 304, "defeature_abs_length": 405, "defeature_layout": 406, "defeature_polygon": 581, "defin": [754, 763, 764, 765, 773, 808, 811], "definit": [0, 4, 79, 630, 752, 768, 771, 806], "delet": [24, 80, 134, 146, 158, 167, 225, 268, 305, 357, 509, 607], "delete_materi": 560, "delete_padstack_inst": 631, "delete_primit": 582, "delete_single_pin_rlc": 81, "depend": 755, "descript": 510, "design": [751, 754, 755, 764, 783, 811], "desktop": [749, 752, 773], "dictionari": [769, 770, 773], "dielectric_ext": 453, "dielectric_lay": 699, "directori": [750, 754, 758, 760], "disable_rlc_compon": 82, "discuss": 779, "disjoint_net": 549, "displai": 752, "distribut": 769, "do_cutout_subdesign": 454, "do_lambda_refin": 407, "do_pingroup": 455, "do_renorm": [269, 306], "document": [747, 775, 781], "dotnet": 10, "down": 773, "download": [756, 760, 761, 762], "draw": [751, 764], "duplic": [561, 632], "e": 750, "edb": [1, 10, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 773, 774, 778], "edbarc": 336, "edbcompon": 11, "edbdifferentialpairdata": 127, "edbextendednetdata": 140, "edbhfss": 516, "edbnet": 603, "edbnetclassdata": 154, "edbnetsdata": 162, "edbpadproperti": 178, "edbpadstack": [190, 624], "edbpadstackinst": 213, "edbprimit": 349, "edbsiwav": 656, "edbvalu": 112, "edg": 795, "edit": [764, 765, 768, 801, 806], "electron": [749, 752, 759, 762, 773], "eligible_power_net": 608, "empti": [769, 770, 773], "enabl": 25, "end": 338, "enforce_caus": 408, "enforce_pass": 409, "error": [747, 775, 778, 779], "etching_factor_inst": 456, "exampl": [748, 765, 768, 769, 770, 771, 773], "excit": [9, 537, 680, 749], "exist": 768, "explicit": 778, "export": [700, 759, 760], "export_bom": 83, "export_dc_simulation_report": 727, "export_definit": 84, "export_element_data": 728, "export_icepak_project": 729, "export_json": 391, "export_siwave_report": 730, "expos": 750, "extend": 756, "extended_net": 168, "extent": [764, 808], "far": 750, "fetch": 765, "field": 750, "file": [756, 760, 765, 768, 769, 770, 771, 773, 777, 778, 802], "filenam": 392, "fill_materi": 119, "find_by_nam": [135, 147, 169], "find_by_reference_design": 85, "find_dc_short": 170, "find_instance_by_id": 633, "find_or_create_net": 609, "finish": 753, "fix_circle_void_for_clip": 583, "fix_self_intersect": 550, "flip_design": 701, "folder": [753, 760, 762], "from": [754, 755, 768, 771, 777, 778, 789], "fulli": [751, 764], "gapport": 262, "gd": 765, "gener": [756, 758], "generate_excit": 457, "generate_extended_net": 610, "generate_solder_bal": 458, "geometri": [749, 753, 758], "geometry_typ": 179, "get": [776, 789, 790], "get_aedt_pin_nam": 86, "get_closest_arc_midpoint": 358, "get_closest_point": 359, "get_component_by_nam": 87, "get_component_net_connection_info": 88, "get_component_placement_vector": 89, "get_components_from_net": 90, "get_connected_object": [227, 361], "get_connected_object_id_set": [226, 360], "get_dcconnected_net_list": 611, "get_edge_terminal_reference_primit": [270, 307], "get_inst": 634, "get_layout_bounding_box": 538, "get_layout_statist": 584, "get_layout_thick": 702, "get_net_by_nam": 612, "get_nets_from_pin_list": 91, "get_pad_edge_terminal_reference_pin": [271, 308], "get_pad_paramet": 635, "get_padstack_instance_by_net_nam": 636, "get_padstack_instances_intersecting_bounding_box": 637, "get_padstack_instances_rtree_index": 638, "get_padstack_terminal_reference_pin": [272, 309], "get_pin": 94, "get_pin_from_compon": 92, "get_pin_group_terminal_reference_pin": [273, 310], "get_pin_posit": 93, "get_pinlist_from_component_and_net": 639, "get_pins_name_from_net": 95, "get_plot_data": 613, "get_point_terminal_reference_primit": [274, 311], "get_polygon_bounding_box": 585, "get_polygon_point": 586, "get_polygons_by_lay": 587, "get_ports_numb": 539, "get_powertre": 614, "get_primit": [588, 590], "get_primitive_by_layer_and_point": 589, "get_rat": 96, "get_reference_pin": [228, 640], "get_smallest_trace_width": 171, "get_solder_ball_height": 97, "get_termin": 229, "get_through_resistor_list": 98, "get_trace_width_for_traces_with_port": 540, "get_via_instance_from_net": 641, "graphic": [749, 750, 751, 764], "ground": [749, 758, 764], "group": 769, "group_typ": 26, "grpc": [779, 780], "guid": 798, "hard": [747, 775], "height": 339, "hfss": [749, 750, 751, 753, 770, 773, 808, 809], "hfss3dlayout": 756, "hfss_extent_info": 541, "hfss_type": [275, 312], "hole_diamet": 192, "hole_diameter_str": 193, "hole_finished_s": 194, "hole_offset_i": 196, "hole_offset_x": 195, "hole_param": 198, "hole_paramet": 197, "hole_plating_ratio": 199, "hole_plating_thick": 200, "hole_properti": 201, "hole_rang": 202, "hole_rot": 203, "hole_typ": 204, "honor_user_dielectr": 459, "horizontal_extent_factor": 313, "host": [769, 770, 773], "i": 774, "ic": 65, "icepak": 731, "icepak_component_fil": 681, "icepak_use_minimal_comp_default": 682, "id": [27, 120, 230, 276, 314, 362, 778], "identifi": 759, "ignore_non_functional_pad": 410, "illegal_net_nam": 551, "illegal_rlc_valu": 552, "imped": [277, 315, 773], "implement": 752, "import": [749, 750, 752, 755, 756, 758, 761, 762, 764, 765, 768, 769, 770, 771, 773], "import_bom": 99, "import_definit": 100, "import_json": 393, "in_polygon": 231, "in_void": 232, "include_inter_plane_coupl": 411, "include_only_selected_net": 460, "ind_valu": 28, "indic": 781, "inductor": 101, "instal": [777, 779], "instanc": [0, 4, 102, 205, 642, 749, 755, 762, 804], "instances_by_nam": 643, "int_to_geometry_typ": [180, 644], "int_to_pad_typ": [181, 645], "integr": [757, 773, 782], "interfac": 780, "intersect": 363, "intersection_typ": 364, "io": 66, "ipc2581": 760, "ir": 759, "is_arc": 365, "is_ccw": 340, "is_circuit_port": [278, 316], "is_current_sourc": [279, 317], "is_en": 29, "is_intersect": 366, "is_neg": 367, "is_net_in_compon": 615, "is_nul": [30, 136, 148, 159, 172, 233, 280, 318, 368], "is_parallel_rlc": 31, "is_paramet": 511, "is_pin": 234, "is_point": 341, "is_port": [281, 319], "is_power_gound_net": 616, "is_power_ground": 173, "is_reference_termin": [282, 320], "is_seg": 342, "is_stackup_lay": 121, "is_top_mount": 32, "is_via_lay": 122, "is_void": [235, 369], "is_voltage_sourc": [283, 321], "issu": [747, 775, 779], "iterate_materials_in_amat": 562, "json": [768, 769, 770, 771, 773], "kernel": [754, 755], "latest": 777, "launch": [749, 750, 751, 752, 756, 759, 760, 764], "layer": [2, 236, 284, 322, 370, 591, 704, 749, 750, 758, 796, 799, 800, 801], "layer_nam": [237, 371], "layer_range_nam": 238, "layer_typ": 703, "layeredbclass": 117, "layers_by_id": 705, "layout": [749, 750, 754, 755, 758, 759, 764, 766, 768, 769, 770, 771, 773, 789, 790, 791, 799, 801, 802, 803], "layout_defeatur": 542, "layout_inst": 33, "layoutvalid": 547, "legaci": 780, "length": [343, 747, 775], "limit": 706, "line": [747, 775], "linear": 749, "linux": 777, "load": [707, 768, 769, 770, 771, 773, 778, 789, 802, 803], "load_amat": 563, "load_materi": 564, "locat": [34, 285, 323], "lock_fil": 732, "log": [747, 775], "longest_arc": 372, "loss": 753, "lower_elev": [35, 239], "magnitud": [286, 324], "manag": [1, 7, 778], "materi": [206, 553, 566, 768], "material_property_to_id": 565, "matplotlib": [762, 789], "max_arc_point": 412, "max_mag_delta_": 413, "max_num_pass": 414, "max_suf_dev": 415, "maximum": [747, 775], "memori": 778, "merge_nets_polygon": 617, "merge_via_along_lin": 646, "mesh_freq": 416, "mesh_sizefactor": 417, "metal_volum": 240, "mid_point": 344, "min_num_pass": 418, "min_pad_area_to_mesh": 419, "min_plane_area_to_mesh": 420, "min_void_area": 421, "minimum_void_surfac": 422, "mode": [708, 749, 750, 751, 764], "model": [6, 36, 571, 754, 773], "model_typ": 37, "modifi": [768, 771], "modul": 1, "name": [38, 113, 123, 137, 149, 160, 174, 207, 241, 287, 325, 373, 512], "neareast": 769, "negative_net": 138, "net": [3, 39, 41, 150, 161, 242, 288, 326, 374, 619, 750, 753, 756, 758, 759, 761, 762, 769, 789], "net_nam": [243, 289, 327, 375], "netlist": 618, "netlist_model": 40, "nets_by_compon": 620, "network": 756, "new": 768, "non": [749, 750, 751, 764], "non_stackup_lay": 709, "nport_comp_definit": 103, "num_lay": 710, "numpin": 42, "object": [755, 758], "object_inst": 244, "offlin": 777, "offset_i": 183, "offset_x": 182, "open": [749, 752, 755, 761, 764, 765], "open_edb_after_build": 394, "open_project": 733, "oproject": 734, "origin": 771, "other": 67, "output_aedb": 461, "outsid": [749, 750], "packag": [768, 769, 770, 771, 773], "package_def": 43, "pad_typ": 647, "padstack": [4, 763, 764, 804, 805, 806], "padstack_definit": 245, "padstack_inst": [175, 208], "paramet": [184, 750, 754, 763, 764, 773], "parameter": [753, 755, 766], "parameters_valu": 185, "parameters_values_str": 186, "parametr": [751, 758, 760, 763, 764], "parametrize_polygon": 592, "parametrize_posit": 246, "parametrize_trace_width": 593, "part_nam": 44, "partnam": 45, "passivity_toler": 423, "patch": 749, "path": 594, "pcb": [753, 754], "pec_launch_width": 328, "percentage_error_z0": 424, "perform": [749, 750, 752, 756, 761, 762, 764], "phase": [290, 329], "pin": [47, 247, 649, 749, 752, 754, 759, 769, 785, 786, 787, 789, 796], "pin_group": 683, "pin_numb": 248, "pingroup": [249, 648], "pinlist": 46, "pip": 779, "place": [650, 753, 764], "place_a3dcomp_3d_plac": 711, "place_in_layout": 712, "place_in_layout_3d_plac": 713, "place_inst": 714, "place_voltage_prob": 684, "placement_lay": [48, 250], "plane": [758, 764], "plot": [176, 621, 715, 749, 750, 752, 758, 760, 762, 764, 765, 773, 789], "point": 345, "points_raw": 346, "polygon": 595, "polygon_data": 187, "polygons_by_lay": 596, "port": [5, 749, 756, 761, 764, 769, 773, 792, 793, 795, 796], "posit": [251, 758, 759], "positive_net": 139, "post": [747, 766, 775], "power": [622, 759, 773], "power_net": 462, "prepar": 755, "primit": [6, 177, 597], "primitive_typ": [252, 376], "primitives_by_lay": 598, "primitives_by_net": 599, "prior": 749, "probe": [543, 685], "process_padstack_definit": 425, "project": [752, 753, 755, 782, 784], "project_fil": 735, "project_nam": 736, "project_path": 737, "properti": [3, 6, 768], "provid": 765, "pyaedt_dir": 738, "pyedb": [10, 747, 755, 762, 774, 775, 777, 778, 779, 781], "pypi": 777, "python": [754, 755, 777, 778, 779], "queri": 791, "quick": 778, "quit_appl": 739, "radiat": 750, "radiation_box": 426, "radiu": 347, "read_materi": 567, "read_syslib_materi": 568, "rectangl": 600, "ref_termin": [291, 330], "refd": 49, "refer": [746, 769], "reference_net_nam": [292, 331], "reference_object": [293, 332], "refresh_compon": 104, "refresh_layer_collect": 716, "relative_error": 427, "releas": [754, 755, 764], "remov": 759, "remove_lay": 717, "remove_pads_from_padstack": 651, "renam": 761, "renorm": 294, "renormalize_z0": 295, "replace_rlc_by_gap_boundari": 105, "report": 749, "repositori": [747, 775], "requir": [749, 750, 752, 756, 761, 762, 764, 768, 769, 770, 771, 773, 777], "res_valu": 50, "residual_copper_area_per_lay": 718, "resistor": [106, 785], "result": [749, 750, 752, 759], "results_directori": 740, "return": 753, "return_current_distribut": 428, "review": [768, 769, 770, 771], "rlc": [151, 786, 787], "rlc_valu": 51, "rotat": [52, 188, 253], "run": [753, 779, 791], "run_dc_simul": 741, "run_icepak_simul": 742, "s_param_model": 53, "save": [749, 752, 753, 758, 761, 764, 769, 770], "save_project": 743, "see": 753, "serial_rlc": 152, "set": [749, 750, 751, 753, 759, 764, 765, 773, 807, 809, 810], "set_all_antipad_valu": 652, "set_backdrill_bottom": 254, "set_backdrill_top": 255, "set_coax_port_attribut": 544, "set_component_model": 107, "set_component_rlc": 108, "set_layer_clon": 719, "set_pad_properti": 653, "set_solder_bal": 109, "set_solderbal": 654, "setup": [749, 751, 752, 754, 764, 769, 770, 773], "setup_nam": 395, "shape": 189, "shape_to_polygon_data": 601, "short_component_pin": 110, "shortest_arc": 377, "shunt_rlc": 153, "shut": 773, "signal": [623, 753, 758, 761, 782], "signal_lay": 720, "signal_layer_etching_inst": 463, "signal_layers_properti": 464, "signal_net": 465, "simul": [8, 751, 752, 753, 755, 765, 784, 809, 810], "simulationconfigur": 382, "simulationconfigurationac": 397, "simulationconfigurationbatch": 441, "simulationconfigurationdc": 477, "siwav": [7, 724, 756, 759, 770, 773, 807], "size": 790, "snap_length_threshold": 429, "solder_ball_diamet": 54, "solder_ball_height": 55, "solder_ball_plac": 56, "solder_ball_shap": 57, "solv": [749, 759, 764], "solver_typ": 396, "sourc": [9, 466, 545, 686, 794, 797], "spice_model": 58, "split_to_microvia": 209, "src_dir": 744, "stackup": [2, 688, 749, 753, 758, 763, 764, 765, 771, 799, 800, 801], "stackup_lay": 721, "standalon": 767, "start": [348, 776], "start_azimuth": 430, "start_freq": 431, "start_lay": 256, "statist": 789, "step_freq": 432, "stitch": 764, "stop_freq": 433, "stop_lay": 257, "style": [747, 775], "subtract": 378, "support": 777, "sweep": 749, "sweep_interpol": 434, "sweep_nam": 435, "sweep_typ": 436, "symmetr": 764, "syslib": 569, "syz": [770, 773], "tabl": 781, "temporari": [750, 753, 754, 758, 760, 762], "termin": 258, "terminal_typ": [296, 333], "them": 789, "thick": 722, "tofloat": 114, "top_bottom_associ": [59, 259], "tostr": 115, "trace": [751, 754, 760, 764], "transpar": 124, "tree": 759, "trim_component_reference_s": 546, "trim_reference_s": 467, "troubleshoot": 779, "truncate_airbox_at_ground": 468, "two": 769, "type": [60, 125, 260, 297, 334, 379], "u1": 761, "unit": 380, "unite_polygons_on_lay": 602, "unus": 759, "up": [750, 753, 754, 758, 759, 760, 765, 773, 807, 809, 810], "updat": [126, 777], "update_layout": 723, "update_materi": 570, "update_rlc_from_bom": 111, "upper_elev": [61, 261], "us": [762, 772, 774, 779], "use_airbox_horizontal_extent_multipl": 469, "use_airbox_negative_vertical_extent_multipl": 470, "use_airbox_positive_vertical_extent_multipl": 471, "use_arc_to_chord_error": 437, "use_default_coax_port_radial_extens": 472, "use_default_cutout": 473, "use_dielectric_extent_multipl": 474, "use_error_z0": 438, "use_pyaedt_cutout": 475, "use_q3d_for_dc": 439, "use_radiation_boundari": 476, "use_s_parameter_model": 62, "user": 798, "valu": [63, 116, 513, 747, 775], "value_object": 514, "value_str": 515, "variabl": [508, 778, 811], "verifi": 752, "version": [777, 780], "version_kei": 745, "vertical_extent_factor": 335, "via": [4, 655, 753, 758, 763, 764], "via_lay": 210, "via_start_lay": 211, "via_stop_lay": 212, "view": [747, 752, 754, 759, 775], "visual": 753, "void": 381, "voltag": 794, "voltage_regulator_modul": 687, "wave": 764, "waveport": 298, "what": 774, "wheelhous": 777, "why": 774, "width": 760, "work": [788, 800, 805], "write": [765, 768, 769, 770, 773], "xml": 765, "xtalk_threshold": 440}})