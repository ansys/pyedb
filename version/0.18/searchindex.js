Search.setIndex({"alltitles": {"AEDT integration": [[732, "aedt-integration"], [741, "aedt-integration"]], "API reference": [[730, "api-reference"]], "About PyEDB": [[755, "about-pyedb"]], "Add HFSS simulation setup": [[735, "add-hfss-simulation-setup"]], "Add a layer in a layout stackup": [[781, "add-a-layer-in-a-layout-stackup"]], "Add connector ground": [[733, "add-connector-ground"], [734, "add-connector-ground"]], "Add connector pin": [[733, "add-connector-pin"], [734, "add-connector-pin"]], "Add design variables": [[738, "add-design-variables"]], "Add excitation port": [[733, "add-excitation-port"], [734, "add-excitation-port"]], "Add frequency sweep to setup": [[737, "add-frequency-sweep-to-setup"]], "Add ground": [[733, "add-ground"], [734, "add-ground"]], "Add mesh operation to setup": [[737, "add-mesh-operation-to-setup"]], "Add stackup layers": [[733, "add-stackup-layers"], [734, "add-stackup-layers"], [743, "add-stackup-layers"]], "Add the layout component": [[734, "add-the-layout-component"]], "Additional stackup settings": [[750, "additional-stackup-settings"]], "Adhere to code style": [[731, "adhere-to-code-style"], [756, "adhere-to-code-style"]], "Analyze": [[736, "analyze"]], "Assign net names": [[735, "assign-net-names"]], "Boundaries": [[734, "boundaries"]], "Boundaries settings": [[750, "boundaries-settings"]], "Build a signal integrity project": [[764, "build-a-signal-integrity-project"]], "Build simulation project": [[739, "build-simulation-project"]], "Build simulation projects": [[766, "build-simulation-projects"]], "Check Component Definition": [[736, "check-component-definition"]], "Check Component Values": [[736, "check-component-values"]], "Clip a design": [[765, "clip-a-design"]], "Clone the repository": [[731, "clone-the-repository"], [756, "clone-the-repository"]], "Close AEDT": [[733, "close-aedt"], [734, "close-aedt"], [740, "close-aedt"]], "Close EDB": [[744, "close-edb"], [745, "close-edb"], [747, "close-edb"]], "Close Edb": [[750, "close-edb"]], "Components": [[0, "components"], [62, "components"]], "Computation times": [[742, "computation-times"], [753, "computation-times"], [754, "computation-times"], [763, "computation-times"]], "Compute nets and components": [[744, "compute-nets-and-components"]], "Compute rats": [[744, "compute-rats"]], "Configure EDB": [[740, "configure-edb"]], "Configure Setup": [[736, "configure-setup"]], "Connect to EDB from a Python IDE": [[759, "connect-to-edb-from-a-python-ide"]], "Contribute": [[731, "contribute"], [756, "contribute"]], "Control file": [[750, "control-file"]], "Create EDB": [[748, "create-edb"]], "Create FR4 material": [[737, "create-fr4-material"]], "Create IPC2581 file": [[745, "create-ipc2581-file"]], "Create SYZ analysis setup": [[740, "create-syz-analysis-setup"]], "Create SimulationConfiguration object and define simulation parameters": [[739, "create-simulationconfiguration-object-and-define-simulation-parameters"]], "Create a circuit port": [[774, "create-a-circuit-port"]], "Create a coaxial port": [[775, "create-a-coaxial-port"]], "Create a padstack instance": [[786, "create-a-padstack-instance"]], "Create a resistor boundary on pins": [[767, "create-a-resistor-boundary-on-pins"]], "Create a wave port at the end of the signal trace": [[737, "create-a-wave-port-at-the-end-of-the-signal-trace"]], "Create an RLC boundary on pins": [[768, "create-an-rlc-boundary-on-pins"]], "Create an RLC component between pins": [[769, "create-an-rlc-component-between-pins"]], "Create an edge port": [[777, "create-an-edge-port"]], "Create and assign clearance variable per layer": [[751, "create-and-assign-clearance-variable-per-layer"]], "Create and assign delta w variable per layer": [[751, "create-and-assign-delta-w-variable-per-layer"]], "Create component from pins": [[738, "create-component-from-pins"]], "Create connector 1": [[738, "create-connector-1"]], "Create connector 2": [[738, "create-connector-2"]], "Create current and voltage sources": [[776, "create-current-and-voltage-sources"]], "Create definitions": [[748, "create-definitions"]], "Create ground plane": [[748, "create-ground-plane"]], "Create ground planes": [[737, "create-ground-planes"], [738, "create-ground-planes"]], "Create ground via padstack and place ground stitching vias": [[749, "create-ground-via-padstack-and-place-ground-stitching-vias"]], "Create ground vias along signal trace": [[737, "create-ground-vias-along-signal-trace"]], "Create ground vias around signal via": [[737, "create-ground-vias-around-signal-via"]], "Create layout pins": [[738, "create-layout-pins"]], "Create linear array": [[733, "create-linear-array"], [734, "create-linear-array"]], "Create padstack definition": [[738, "create-padstack-definition"]], "Create padstack for signal via": [[735, "create-padstack-for-signal-via"]], "Create port between a pin and layer": [[778, "create-port-between-a-pin-and-layer"]], "Create ports": [[740, "create-ports"]], "Create report outside AEDT": [[740, "create-report-outside-aedt"]], "Create return loss plot": [[737, "create-return-loss-plot"]], "Create setup and sweeps": [[733, "create-setup-and-sweeps"], [734, "create-setup-and-sweeps"]], "Create signal net and ground planes": [[743, "create-signal-net-and-ground-planes"]], "Create signal vias": [[737, "create-signal-vias"]], "Create sources": [[779, "create-sources"]], "Create stackup": [[748, "create-stackup"], [749, "create-stackup"]], "Create stackup layers": [[748, "create-stackup-layers"]], "Create trace to plane clearance": [[749, "create-trace-to-plane-clearance"]], "Create variables": [[748, "create-variables"]], "Create vias with parametric positions": [[743, "create-vias-with-parametric-positions"]], "Create voltage source and Siwave DCIR analysis": [[744, "create-voltage-source-and-siwave-dcir-analysis"]], "Create wave ports": [[735, "create-wave-ports"]], "Creating coaxial port on component U1 and all ddr4_dqs nets": [[746, "creating-coaxial-port-on-component-u1-and-all-ddr4-dqs-nets"]], "Creating data classes": [[734, "creating-data-classes"]], "Creating ports and adding simulation setup using SimulationConfiguration class": [[738, "creating-ports-and-adding-simulation-setup-using-simulationconfiguration-class"]], "Cutout": [[740, "cutout"], [745, "cutout"], [751, "cutout"]], "Define an HFSS extent": [[790, "define-an-hfss-extent"]], "Define design variables": [[793, "define-design-variables"]], "Define input parameters": [[751, "define-input-parameters"]], "Define parameters": [[735, "define-parameters"], [749, "define-parameters"]], "Define stackup layers": [[735, "define-stackup-layers"]], "Delete all RLCs with only one pin": [[744, "delete-all-rlcs-with-only-one-pin"]], "Delete components": [[744, "delete-components"]], "Delete existing clearance": [[751, "delete-existing-clearance"]], "Delete nets": [[744, "delete-nets"]], "Download ANSYS EDB": [[746, "download-ansys-edb"]], "Download and open example layout file in edb format": [[751, "download-and-open-example-layout-file-in-edb-format"]], "Download file": [[736, "download-file"], [740, "download-file"], [745, "download-file"], [747, "download-file"], [750, "download-file"]], "Draw ground polygons": [[735, "draw-ground-polygons"]], "Draw planes": [[749, "draw-planes"]], "Draw trace": [[749, "draw-trace"]], "EDB manager": [[1, "edb-manager"]], "EDB modules": [[1, "edb-modules"]], "EDB: 5G linear array antenna": [[733, "edb-5g-linear-array-antenna"]], "EDB: Edit Control File and import gds": [[750, "edb-edit-control-file-and-import-gds"]], "EDB: IPC2581 export": [[745, "edb-ipc2581-export"]], "EDB: Layout Components": [[734, "edb-layout-components"]], "EDB: Pin to Pin project": [[736, "edb-pin-to-pin-project"]], "EDB: Rename nets and ports": [[746, "edb-rename-nets-and-ports"]], "EDB: SYZ analysis": [[740, "edb-syz-analysis"]], "EDB: Siwave analysis from EDB setup": [[744, "edb-siwave-analysis-from-edb-setup"]], "EDB: fully parametrized CPWG design": [[749, "edb-fully-parametrized-cpwg-design"]], "EDB: fully parametrized design": [[735, "edb-fully-parametrized-design"]], "EDB: geometry creation": [[737, "edb-geometry-creation"], [738, "edb-geometry-creation"], [743, "edb-geometry-creation"]], "EDB: parameterized design": [[739, "edb-parameterized-design"]], "EDB: parametric via creation": [[748, "edb-parametric-via-creation"]], "EDB: plot nets with Matplotlib": [[747, "edb-plot-nets-with-matplotlib"]], "EDB: post-layout parameterization": [[751, "edb-post-layout-parameterization"]], "EDBArcs": [[324, "edbarcs"]], "EDBComponent": [[10, "edbcomponent"]], "EDBDifferentialPairData": [[125, "edbdifferentialpairdata"]], "EDBExtendedNetData": [[138, "edbextendednetdata"]], "EDBNetClassData": [[152, "edbnetclassdata"]], "EDBNetsData": [[160, "edbnetsdata"]], "EDBPadProperties": [[176, "edbpadproperties"]], "EDBPadstack": [[188, "edbpadstack"]], "EDBPadstackInstance": [[211, "edbpadstackinstance"]], "EDBPrimitives": [[337, "edbprimitives"]], "EdbHfss": [[503, "edbhfss"]], "EdbLayout": [[534, "edblayout"]], "EdbNets": [[588, "edbnets"]], "EdbPadstacks": [[609, "edbpadstacks"]], "EdbSiwave": [[640, "edbsiwave"]], "EdbValue": [[110, "edbvalue"]], "Edit Parameters": [[734, "edit-parameters"]], "Edit a layer stackup in a layout stackup": [[783, "edit-a-layer-stackup-in-a-layout-stackup"]], "Edit a padstack definition": [[788, "edit-a-padstack-definition"]], "Error installing PyEDB using pip": [[760, "error-installing-pyedb-using-pip"]], "Error installing Python or Conda": [[760, "error-installing-python-or-conda"]], "Examples": [[732, "examples"]], "Explicit PyEDB declaration and error management": [[759, "explicit-pyedb-declaration-and-error-management"]], "Export Siwave Reports": [[744, "export-siwave-reports"]], "GapPort": [[258, "gapport"]], "Generate Plot": [[735, "generate-plot"]], "Generate extended nets": [[740, "generate-extended-nets"]], "Generate ground layers": [[748, "generate-ground-layers"]], "Generate traces": [[748, "generate-traces"]], "Generated design parameters": [[739, "generated-design-parameters"]], "Geometry Plot": [[743, "geometry-plot"]], "Get Results": [[736, "get-results"]], "Get all DC-connected net lists through inductance": [[744, "get-all-dc-connected-net-lists-through-inductance"]], "Get all components and then pins from components connected to a net": [[771, "get-all-components-and-then-pins-from-components-connected-to-a-net"]], "Get all nets connected to a component": [[744, "get-all-nets-connected-to-a-component"]], "Get all trace segments from the signal net": [[751, "get-all-trace-segments-from-the-signal-net"]], "Get layout size": [[772, "get-layout-size"]], "Get layout statistics": [[771, "get-layout-statistics"]], "Get nets and plot them in Matplotlib": [[771, "get-nets-and-plot-them-in-matplotlib"]], "Get pin position": [[744, "get-pin-position"]], "Get power tree based on a specific net": [[744, "get-power-tree-based-on-a-specific-net"]], "Get stackup limits": [[744, "get-stackup-limits"]], "Get statistics": [[771, "get-statistics"]], "Getting started": [[757, "getting-started"]], "Hard-coded values": [[731, "hard-coded-values"], [756, "hard-coded-values"]], "ICs": [[63, "ics"]], "IOs": [[64, "ios"]], "Import BOM": [[736, "import-bom"]], "Import Definitions": [[736, "import-definitions"]], "Indices and tables": [[762, "indices-and-tables"]], "Initialize variables": [[738, "initialize-variables"]], "Install from a Python file": [[758, "install-from-a-python-file"]], "Install offline from a wheelhouse": [[758, "install-offline-from-a-wheelhouse"]], "Install on CPython from PyPI": [[758, "install-on-cpython-from-pypi"]], "Installation": [[758, "installation"]], "Installation troubleshooting": [[760, "installation-troubleshooting"]], "Instances and definitions": [[0, "instances-and-definitions"], [4, "instances-and-definitions"]], "Issues and discussions": [[760, "issues-and-discussions"]], "Launch EDB": [[734, "launch-edb"], [735, "launch-edb"], [736, "launch-edb"], [737, "launch-edb"], [738, "launch-edb"], [739, "launch-edb"], [744, "launch-edb"], [745, "launch-edb"], [747, "launch-edb"], [749, "launch-edb"]], "Launch HFSS 3D": [[734, "launch-hfss-3d"]], "Launch HFSS 3D Layout and open EDB": [[733, "launch-hfss-3d-layout-and-open-edb"]], "Launch Hfss3dLayout": [[737, "launch-hfss3dlayout"], [740, "launch-hfss3dlayout"]], "LayerEdbClass": [[115, "layeredbclass"]], "LayoutValidation": [[564, "layoutvalidation"]], "Legacy interface": [[761, "legacy-interface"]], "Linux support": [[758, "linux-support"]], "Load a layout": [[771, "load-a-layout"], [785, "load-a-layout"]], "Load a layout file": [[784, "load-a-layout-file"]], "Load an AEDB file into memory": [[759, "load-an-aedb-file-into-memory"]], "Log errors": [[731, "log-errors"], [756, "log-errors"]], "Materials": [[570, "materials"]], "Maximum line length": [[731, "maximum-line-length"], [756, "maximum-line-length"]], "Modeler & primitives": [[6, "modeler-primitives"]], "Net properties": [[3, "net-properties"]], "Nets": [[3, "nets"]], "Open Aedt": [[736, "open-aedt"]], "Open EDB in AEDT": [[735, "open-edb-in-aedt"]], "Open Edb": [[750, "open-edb"]], "Others": [[65, "others"]], "Parametrize net": [[745, "parametrize-net"]], "Patch linear array": [[733, "patch-linear-array"], [734, "patch-linear-array"]], "Perform required imports": [[733, "perform-required-imports"], [734, "perform-required-imports"], [735, "perform-required-imports"], [736, "perform-required-imports"], [740, "perform-required-imports"], [744, "perform-required-imports"], [745, "perform-required-imports"], [746, "perform-required-imports"], [747, "perform-required-imports"], [748, "perform-required-imports"], [749, "perform-required-imports"], [750, "perform-required-imports"], [751, "perform-required-imports"]], "Place 3D component": [[737, "place-3d-component"]], "Place padstack for ground": [[748, "place-padstack-for-ground"]], "Place padstack for signal": [[748, "place-padstack-for-signal"]], "Place signal vias": [[735, "place-signal-vias"]], "Plot": [[751, "plot"]], "Plot Cutout": [[736, "plot-cutout"]], "Plot E Field on nets and layers": [[734, "plot-e-field-on-nets-and-layers"]], "Plot EDB": [[735, "plot-edb"], [737, "plot-edb"], [738, "plot-edb"], [739, "plot-edb"]], "Plot Far Fields in AEDT": [[734, "plot-far-fields-in-aedt"], [734, "id1"]], "Plot Far Fields outside AEDT": [[734, "plot-far-fields-outside-aedt"]], "Plot Layout": [[748, "plot-layout"]], "Plot Results": [[736, "plot-results"]], "Plot Stackup": [[750, "plot-stackup"]], "Plot all nets on a layer colored by nets": [[747, "plot-all-nets-on-a-layer-colored-by-nets"]], "Plot custom set of nets colored by layer": [[747, "plot-custom-set-of-nets-colored-by-layer"]], "Plot custom set of nets colored by nets": [[747, "plot-custom-set-of-nets-colored-by-nets"]], "Plot cutout": [[745, "plot-cutout"]], "Plot geometry": [[733, "plot-geometry"], [733, "id1"], [734, "plot-geometry"]], "Plot results outside AEDT": [[733, "plot-results-outside-aedt"], [734, "plot-results-outside-aedt"]], "Plot stackup and some padstack definition": [[747, "plot-stackup-and-some-padstack-definition"]], "Ports": [[5, "ports"]], "Post issues": [[731, "post-issues"], [756, "post-issues"]], "Prepare input data for port creation": [[740, "prepare-input-data-for-port-creation"]], "Primitives properties": [[6, "primitives-properties"]], "PyEDB documentation 0.18.0": [[762, "pyedb-documentation-version"]], "Quick code": [[759, "quick-code"]], "Renaming all ports": [[746, "renaming-all-ports"]], "Renaming all signal nets": [[746, "renaming-all-signal-nets"]], "Requirements": [[758, "requirements"]], "Review extended net properties": [[740, "review-extended-net-properties"]], "Run PyEDB with gRPC": [[760, "run-pyedb-with-grpc"]], "Run Setup": [[736, "run-setup"]], "Run layout queries": [[773, "run-layout-queries"]], "Save EDB": [[735, "save-edb"]], "Save EDB and close": [[748, "save-edb-and-close"]], "Save EDB and open in AEDT": [[738, "save-edb-and-open-in-aedt"], [739, "save-edb-and-open-in-aedt"]], "Save Edb": [[736, "save-edb"]], "Save and Close AEDT": [[736, "save-and-close-aedt"]], "Save and Close EDB": [[736, "save-and-close-edb"]], "Save and close AEDT": [[740, "save-and-close-aedt"]], "Save and close EDB": [[737, "save-and-close-edb"], [743, "save-and-close-edb"], [749, "save-and-close-edb"]], "Save and close Edb": [[751, "save-and-close-edb"]], "Save and close Edb instance prior to opening it in Electronics Desktop.": [[733, "save-and-close-edb-instance-prior-to-opening-it-in-electronics-desktop"], [734, "save-and-close-edb-instance-prior-to-opening-it-in-electronics-desktop"]], "Save and close the project": [[737, "save-and-close-the-project"]], "Save modifications": [[744, "save-modifications"]], "Saving and closing EDB": [[746, "saving-and-closing-edb"]], "Set Differential Pairs.": [[735, "set-differential-pairs"]], "Set differential pair": [[740, "set-differential-pair"]], "Set non-graphical mode": [[733, "set-non-graphical-mode"], [734, "set-non-graphical-mode"], [735, "set-non-graphical-mode"], [736, "set-non-graphical-mode"], [737, "set-non-graphical-mode"], [738, "set-non-graphical-mode"], [739, "set-non-graphical-mode"], [749, "set-non-graphical-mode"]], "Set up a SIwave analysis": [[789, "set-up-a-siwave-analysis"]], "Set up an HFSS simulation": [[791, "set-up-an-hfss-simulation"]], "Set up simulations": [[792, "set-up-simulations"]], "Simulation configuration": [[8, "simulation-configuration"]], "Simulation setup": [[750, "simulation-setup"]], "SimulationConfiguration": [[369, "simulationconfiguration"]], "SimulationConfigurationAc": [[384, "simulationconfigurationac"]], "SimulationConfigurationBatch": [[428, "simulationconfigurationbatch"]], "SimulationConfigurationDc": [[464, "simulationconfigurationdc"]], "Siwave": [[708, "siwave"]], "Siwave manager": [[7, "siwave-manager"]], "Solve and plot results": [[740, "solve-and-plot-results"]], "Solve setup and create report": [[733, "solve-setup-and-create-report"], [734, "solve-setup-and-create-report"]], "Sources and excitations": [[9, "sources-and-excitations"]], "Stackup": [[672, "stackup"]], "Stackup & layers": [[2, "stackup-layers"]], "Stackup Plot": [[743, "stackup-plot"]], "Standalone": [[732, "standalone"], [752, "standalone"]], "Start HFSS solver": [[735, "start-hfss-solver"]], "Troubleshooting": [[760, "troubleshooting"]], "Update PyEDB to the latest version": [[758, "update-pyedb-to-the-latest-version"]], "User guide": [[780, "user-guide"]], "Variable": [[495, "variable"]], "Variables": [[759, "variables"]], "Versions and interfaces": [[761, "versions-and-interfaces"]], "View PyEDB documentation": [[731, "view-pyedb-documentation"], [756, "view-pyedb-documentation"]], "WavePort": [[291, "waveport"]], "What is EDB?": [[755, "what-is-edb"]], "Why use PyEDB?": [[755, "why-use-pyedb"]], "Work with a layer stackup": [[782, "work-with-a-layer-stackup"]], "Work with a padstack": [[787, "work-with-a-padstack"]], "Working with a component": [[770, "working-with-a-component"]], "Write xml": [[750, "write-xml"]], "ac_settings": [[370, "ac-settings"]], "adaptive_high_freq": [[385, "adaptive-high-freq"]], "adaptive_low_freq": [[386, "adaptive-low-freq"]], "adaptive_type": [[387, "adaptive-type"]], "add_conductor_material": [[571, "add-conductor-material"]], "add_current_source": [[371, "add-current-source"]], "add_dc_ground_source_term": [[372, "add-dc-ground-source-term"]], "add_debye_material": [[572, "add-debye-material"]], "add_dielectric_material": [[573, "add-dielectric-material"]], "add_djordjevicsarkar_dielectric": [[574, "add-djordjevicsarkar-dielectric"]], "add_document_layer": [[673, "add-document-layer"]], "add_frequency_sweep": [[429, "add-frequency-sweep"]], "add_layer": [[674, "add-layer"]], "add_layer_above": [[675, "add-layer-above"]], "add_layer_below": [[676, "add-layer-below"]], "add_layer_bottom": [[677, "add-layer-bottom"]], "add_layer_top": [[678, "add-layer-top"]], "add_material": [[575, "add-material"]], "add_multipole_debye_material": [[576, "add-multipole-debye-material"]], "add_net": [[126, "add-net"], [139, "add-net"], [153, "add-net"]], "add_outline_layer": [[679, "add-outline-layer"]], "add_port_on_rlc_component": [[66, "add-port-on-rlc-component"]], "add_rlc": [[373, "add-rlc"]], "add_rlc_boundary": [[67, "add-rlc-boundary"]], "add_siwave_dc_analysis": [[641, "add-siwave-dc-analysis"]], "add_siwave_syz_analysis": [[642, "add-siwave-syz-analysis"]], "add_source": [[430, "add-source"]], "add_void": [[535, "add-void"]], "add_voltage_source": [[374, "add-voltage-source"]], "adjust_solder_dielectrics": [[680, "adjust-solder-dielectrics"]], "aedt_name": [[212, "aedt-name"]], "airbox_horizontal_extent": [[431, "airbox-horizontal-extent"]], "airbox_negative_vertical_extent": [[432, "airbox-negative-vertical-extent"]], "airbox_positive_vertical_extent": [[433, "airbox-positive-vertical-extent"]], "all_layers": [[681, "all-layers"]], "api_class": [[127, "api-class"], [140, "api-class"], [161, "api-class"]], "api_create": [[128, "api-create"], [141, "api-create"], [154, "api-create"]], "api_negative_net": [[129, "api-negative-net"]], "api_nets": [[130, "api-nets"], [142, "api-nets"], [155, "api-nets"]], "api_object": [[162, "api-object"]], "api_positive_net": [[131, "api-positive-net"]], "arc_angle": [[388, "arc-angle"]], "arc_to_chord_error": [[389, "arc-to-chord-error"]], "arcs": [[338, "arcs"]], "area": [[339, "area"]], "assign_rlc_model": [[11, "assign-rlc-model"]], "assign_s_param_model": [[12, "assign-s-param-model"]], "assign_spice_model": [[13, "assign-spice-model"]], "backdrill_bottom": [[213, "backdrill-bottom"]], "backdrill_top": [[214, "backdrill-top"]], "basis_order": [[390, "basis-order"]], "batch_solve_settings": [[375, "batch-solve-settings"]], "bbox": [[340, "bbox"]], "boundary_type": [[259, "boundary-type"], [292, "boundary-type"]], "bounding_box": [[14, "bounding-box"], [215, "bounding-box"], [260, "bounding-box"], [293, "bounding-box"], [341, "bounding-box"]], "build_simulation_project": [[376, "build-simulation-project"]], "cap_value": [[15, "cap-value"]], "capacitors": [[68, "capacitors"]], "center": [[16, "center"], [325, "center"], [342, "center"]], "check_and_fix_via_plating": [[610, "check-and-fix-via-plating"]], "circles": [[536, "circles"]], "classify_nets": [[589, "classify-nets"]], "close_project": [[709, "close-project"]], "coax_solder_ball_diameter": [[434, "coax-solder-ball-diameter"]], "color": [[116, "color"]], "component": [[17, "component"], [216, "component"], [261, "component"], [294, "component"], [343, "component"]], "component_def": [[18, "component-def"]], "component_instance": [[19, "component-instance"]], "component_property": [[20, "component-property"]], "components": [[143, "components"], [163, "components"], [435, "components"]], "components_by_nets": [[590, "components-by-nets"]], "components_by_partname": [[69, "components-by-partname"]], "configure_hfss_analysis_setup": [[504, "configure-hfss-analysis-setup"]], "configure_hfss_extents": [[505, "configure-hfss-extents"]], "configure_siw_analysis_setup": [[643, "configure-siw-analysis-setup"]], "convert_to_3d_microvias": [[189, "convert-to-3d-microvias"]], "convert_to_polygon": [[344, "convert-to-polygon"]], "coplanar_instances": [[436, "coplanar-instances"]], "couple_ports": [[262, "couple-ports"], [295, "couple-ports"]], "create": [[70, "create"], [164, "create"], [611, "create"]], "create_bundle_wave_port": [[506, "create-bundle-wave-port"]], "create_circle": [[537, "create-circle"]], "create_circuit_port_on_net": [[507, "create-circuit-port-on-net"], [644, "create-circuit-port-on-net"]], "create_circuit_port_on_pin": [[508, "create-circuit-port-on-pin"], [645, "create-circuit-port-on-pin"]], "create_circuit_port_on_pin_group": [[646, "create-circuit-port-on-pin-group"]], "create_circular_padstack": [[612, "create-circular-padstack"]], "create_clearance_on_component": [[21, "create-clearance-on-component"]], "create_coax_port": [[217, "create-coax-port"], [613, "create-coax-port"]], "create_coax_port_on_component": [[509, "create-coax-port-on-component"]], "create_current_source_on_net": [[510, "create-current-source-on-net"], [647, "create-current-source-on-net"]], "create_current_source_on_pin": [[511, "create-current-source-on-pin"], [648, "create-current-source-on-pin"]], "create_current_source_on_pin_group": [[649, "create-current-source-on-pin-group"]], "create_dc_terminal": [[650, "create-dc-terminal"]], "create_differential_wave_port": [[512, "create-differential-wave-port"]], "create_edge_port_horizontal": [[513, "create-edge-port-horizontal"]], "create_edge_port_on_polygon": [[514, "create-edge-port-on-polygon"]], "create_edge_port_vertical": [[515, "create-edge-port-vertical"]], "create_exec_file": [[651, "create-exec-file"]], "create_hfss_ports_on_padstack": [[516, "create-hfss-ports-on-padstack"]], "create_impedance_crosstalk_scan": [[652, "create-impedance-crosstalk-scan"]], "create_lumped_port_on_net": [[517, "create-lumped-port-on-net"]], "create_package_def": [[22, "create-package-def"]], "create_pin_group": [[653, "create-pin-group"]], "create_pin_group_on_net": [[654, "create-pin-group-on-net"]], "create_pin_group_terminal": [[655, "create-pin-group-terminal"]], "create_pingroup_from_pins": [[71, "create-pingroup-from-pins"]], "create_polygon": [[538, "create-polygon"]], "create_port": [[218, "create-port"]], "create_port_between_pin_and_layer": [[656, "create-port-between-pin-and-layer"]], "create_port_on_component": [[72, "create-port-on-component"]], "create_port_on_pins": [[73, "create-port-on-pins"]], "create_rectangle": [[539, "create-rectangle"]], "create_rectangle_in_pad": [[219, "create-rectangle-in-pad"]], "create_resistor_on_pin": [[518, "create-resistor-on-pin"], [657, "create-resistor-on-pin"]], "create_rlc_boundary_on_pins": [[519, "create-rlc-boundary-on-pins"]], "create_rlc_component": [[74, "create-rlc-component"], [658, "create-rlc-component"]], "create_source_on_component": [[75, "create-source-on-component"]], "create_symmetric_stackup": [[682, "create-symmetric-stackup"]], "create_terminal": [[220, "create-terminal"]], "create_trace": [[540, "create-trace"]], "create_vertical_circuit_port_on_clipped_traces": [[520, "create-vertical-circuit-port-on-clipped-traces"]], "create_voltage_probe_on_pin_group": [[659, "create-voltage-probe-on-pin-group"]], "create_voltage_source_on_net": [[521, "create-voltage-source-on-net"], [660, "create-voltage-source-on-net"]], "create_voltage_source_on_pin": [[522, "create-voltage-source-on-pin"], [661, "create-voltage-source-on-pin"]], "create_voltage_source_on_pin_group": [[662, "create-voltage-source-on-pin-group"]], "create_vrm_module": [[663, "create-vrm-module"]], "create_wave_port": [[523, "create-wave-port"]], "current_version": [[710, "current-version"]], "cutout_subdesign_expansion": [[437, "cutout-subdesign-expansion"]], "cutout_subdesign_round_corner": [[438, "cutout-subdesign-round-corner"]], "cutout_subdesign_type": [[439, "cutout-subdesign-type"]], "db": [[541, "db"], [591, "db"], [614, "db"]], "dc_compute_inductance": [[465, "dc-compute-inductance"]], "dc_contact_radius": [[466, "dc-contact-radius"]], "dc_error_energy": [[467, "dc-error-energy"]], "dc_export_thermal_data": [[468, "dc-export-thermal-data"]], "dc_full_report_path": [[469, "dc-full-report-path"]], "dc_icepak_temp_file": [[470, "dc-icepak-temp-file"]], "dc_import_thermal_data": [[471, "dc-import-thermal-data"]], "dc_max_init_mesh_edge_length": [[472, "dc-max-init-mesh-edge-length"]], "dc_max_num_pass": [[473, "dc-max-num-pass"]], "dc_mesh_bondwires": [[474, "dc-mesh-bondwires"]], "dc_mesh_vias": [[475, "dc-mesh-vias"]], "dc_min_num_pass": [[476, "dc-min-num-pass"]], "dc_min_plane_area_to_mesh": [[477, "dc-min-plane-area-to-mesh"]], "dc_min_void_area_to_mesh": [[478, "dc-min-void-area-to-mesh"]], "dc_num_bondwire_sides": [[479, "dc-num-bondwire-sides"]], "dc_num_via_sides": [[480, "dc-num-via-sides"]], "dc_per_pin_res_path": [[481, "dc-per-pin-res-path"]], "dc_per_pin_use_pin_format": [[482, "dc-per-pin-use-pin-format"]], "dc_percent_local_refinement": [[483, "dc-percent-local-refinement"]], "dc_perform_adaptive_refinement": [[484, "dc-perform-adaptive-refinement"]], "dc_plot_jv": [[485, "dc-plot-jv"]], "dc_refine_bondwires": [[486, "dc-refine-bondwires"]], "dc_refine_vias": [[487, "dc-refine-vias"]], "dc_report_config_file": [[488, "dc-report-config-file"]], "dc_report_show_Active_devices": [[489, "dc-report-show-active-devices"]], "dc_settings": [[377, "dc-settings"]], "dc_shorts": [[565, "dc-shorts"]], "dc_slide_position": [[490, "dc-slide-position"]], "dc_source_terms_to_ground": [[491, "dc-source-terms-to-ground"]], "dc_use_dc_custom_settings": [[492, "dc-use-dc-custom-settings"]], "dc_use_loop_res_for_per_pin": [[493, "dc-use-loop-res-for-per-pin"]], "dc_via_report_path": [[494, "dc-via-report-path"]], "dcir_equipotential_region": [[221, "dcir-equipotential-region"]], "deactivate_rlc_component": [[76, "deactivate-rlc-component"]], "decade_count": [[391, "decade-count"]], "deembed": [[263, "deembed"], [296, "deembed"]], "deembed_length": [[297, "deembed-length"]], "defeature_abs_length": [[392, "defeature-abs-length"]], "defeature_layout": [[393, "defeature-layout"]], "defeature_polygon": [[542, "defeature-polygon"]], "definitions": [[77, "definitions"], [615, "definitions"]], "delete": [[23, "delete"], [78, "delete"], [132, "delete"], [144, "delete"], [156, "delete"], [165, "delete"], [222, "delete"], [264, "delete"], [298, "delete"], [345, "delete"], [496, "delete"], [592, "delete"]], "delete_material": [[577, "delete-material"]], "delete_padstack_instances": [[616, "delete-padstack-instances"]], "delete_primitives": [[543, "delete-primitives"]], "delete_single_pin_rlc": [[79, "delete-single-pin-rlc"]], "description": [[497, "description"]], "dielectric_extent": [[440, "dielectric-extent"]], "dielectric_layers": [[683, "dielectric-layers"]], "disable_rlc_component": [[80, "disable-rlc-component"]], "disjoint_nets": [[566, "disjoint-nets"]], "do_cutout_subdesign": [[441, "do-cutout-subdesign"]], "do_lambda_refinement": [[394, "do-lambda-refinement"]], "do_pingroup": [[442, "do-pingroup"]], "do_renormalize": [[265, "do-renormalize"], [299, "do-renormalize"]], "duplicate": [[578, "duplicate"], [617, "duplicate"]], "eligible_power_nets": [[593, "eligible-power-nets"]], "enabled": [[24, "enabled"]], "end": [[326, "end"]], "enforce_causality": [[395, "enforce-causality"]], "enforce_passivity": [[396, "enforce-passivity"]], "etching_factor_instances": [[443, "etching-factor-instances"]], "excitations": [[524, "excitations"], [664, "excitations"]], "export": [[684, "export"]], "export_bom": [[81, "export-bom"]], "export_dc_simulation_report": [[711, "export-dc-simulation-report"]], "export_definition": [[82, "export-definition"]], "export_element_data": [[712, "export-element-data"]], "export_icepak_project": [[713, "export-icepak-project"]], "export_json": [[378, "export-json"]], "export_siwave_report": [[714, "export-siwave-report"]], "extended_net": [[166, "extended-net"]], "filename": [[379, "filename"]], "fill_material": [[117, "fill-material"]], "find_by_name": [[133, "find-by-name"], [145, "find-by-name"], [167, "find-by-name"]], "find_by_reference_designator": [[83, "find-by-reference-designator"]], "find_dc_short": [[168, "find-dc-short"]], "find_or_create_net": [[594, "find-or-create-net"]], "fix_circle_void_for_clipping": [[544, "fix-circle-void-for-clipping"]], "fix_self_intersections": [[567, "fix-self-intersections"]], "flip_design": [[685, "flip-design"]], "gRPC compatibility:": [[760, "id1"]], "gRPC interface": [[761, "grpc-interface"]], "generate_excitations": [[444, "generate-excitations"]], "generate_extended_nets": [[595, "generate-extended-nets"]], "generate_solder_balls": [[445, "generate-solder-balls"]], "geometry_type": [[177, "geometry-type"]], "get_aedt_pin_name": [[84, "get-aedt-pin-name"]], "get_closest_arc_midpoint": [[346, "get-closest-arc-midpoint"]], "get_closest_point": [[347, "get-closest-point"]], "get_component_by_name": [[85, "get-component-by-name"]], "get_component_net_connection_info": [[86, "get-component-net-connection-info"]], "get_component_placement_vector": [[87, "get-component-placement-vector"]], "get_components_from_nets": [[88, "get-components-from-nets"]], "get_connected_object_id_set": [[223, "get-connected-object-id-set"], [348, "get-connected-object-id-set"]], "get_connected_objects": [[224, "get-connected-objects"], [349, "get-connected-objects"]], "get_dcconnected_net_list": [[596, "get-dcconnected-net-list"]], "get_edge_terminal_reference_primitive": [[266, "get-edge-terminal-reference-primitive"], [300, "get-edge-terminal-reference-primitive"]], "get_instances": [[618, "get-instances"]], "get_layout_bounding_box": [[525, "get-layout-bounding-box"]], "get_layout_statistics": [[545, "get-layout-statistics"]], "get_layout_thickness": [[686, "get-layout-thickness"]], "get_net_by_name": [[597, "get-net-by-name"]], "get_nets_from_pin_list": [[89, "get-nets-from-pin-list"]], "get_pad_edge_terminal_reference_pin": [[267, "get-pad-edge-terminal-reference-pin"], [301, "get-pad-edge-terminal-reference-pin"]], "get_pad_parameters": [[619, "get-pad-parameters"]], "get_padstack_instance_by_net_name": [[620, "get-padstack-instance-by-net-name"]], "get_padstack_instances_intersecting_bounding_box": [[621, "get-padstack-instances-intersecting-bounding-box"]], "get_padstack_instances_rtree_index": [[622, "get-padstack-instances-rtree-index"]], "get_padstack_terminal_reference_pin": [[268, "get-padstack-terminal-reference-pin"], [302, "get-padstack-terminal-reference-pin"]], "get_pin_from_component": [[90, "get-pin-from-component"]], "get_pin_group_terminal_reference_pin": [[269, "get-pin-group-terminal-reference-pin"], [303, "get-pin-group-terminal-reference-pin"]], "get_pin_position": [[91, "get-pin-position"]], "get_pinlist_from_component_and_net": [[623, "get-pinlist-from-component-and-net"]], "get_pins": [[92, "get-pins"]], "get_pins_name_from_net": [[93, "get-pins-name-from-net"]], "get_plot_data": [[598, "get-plot-data"]], "get_point_terminal_reference_primitive": [[270, "get-point-terminal-reference-primitive"], [304, "get-point-terminal-reference-primitive"]], "get_polygon_bounding_box": [[546, "get-polygon-bounding-box"]], "get_polygon_points": [[547, "get-polygon-points"]], "get_polygons_by_layer": [[548, "get-polygons-by-layer"]], "get_ports_number": [[526, "get-ports-number"]], "get_powertree": [[599, "get-powertree"]], "get_primitive": [[549, "get-primitive"]], "get_primitive_by_layer_and_point": [[550, "get-primitive-by-layer-and-point"]], "get_primitives": [[551, "get-primitives"]], "get_rats": [[94, "get-rats"]], "get_reference_pins": [[225, "get-reference-pins"], [624, "get-reference-pins"]], "get_smallest_trace_width": [[169, "get-smallest-trace-width"]], "get_solder_ball_height": [[95, "get-solder-ball-height"]], "get_terminal": [[226, "get-terminal"]], "get_through_resistor_list": [[96, "get-through-resistor-list"]], "get_trace_width_for_traces_with_ports": [[527, "get-trace-width-for-traces-with-ports"]], "get_via_instance_from_net": [[625, "get-via-instance-from-net"]], "height": [[327, "height"]], "hfss_extent_info": [[528, "hfss-extent-info"]], "hfss_type": [[271, "hfss-type"], [305, "hfss-type"]], "hole_diameter": [[190, "hole-diameter"]], "hole_diameter_string": [[191, "hole-diameter-string"]], "hole_finished_size": [[192, "hole-finished-size"]], "hole_offset_x": [[193, "hole-offset-x"]], "hole_offset_y": [[194, "hole-offset-y"]], "hole_parameters": [[195, "hole-parameters"]], "hole_params": [[196, "hole-params"]], "hole_plating_ratio": [[197, "hole-plating-ratio"]], "hole_plating_thickness": [[198, "hole-plating-thickness"]], "hole_properties": [[199, "hole-properties"]], "hole_range": [[200, "hole-range"]], "hole_rotation": [[201, "hole-rotation"]], "hole_type": [[202, "hole-type"]], "honor_user_dielectric": [[446, "honor-user-dielectric"]], "horizontal_extent_factor": [[306, "horizontal-extent-factor"]], "icepak": [[715, "icepak"]], "icepak_component_file": [[665, "icepak-component-file"]], "icepak_use_minimal_comp_defaults": [[666, "icepak-use-minimal-comp-defaults"]], "id": [[25, "id"], [118, "id"], [227, "id"], [272, "id"], [307, "id"], [350, "id"]], "ignore_non_functional_pads": [[397, "ignore-non-functional-pads"]], "illegal_net_names": [[568, "illegal-net-names"]], "illegal_rlc_values": [[569, "illegal-rlc-values"]], "impedance": [[273, "impedance"], [308, "impedance"]], "import_bom": [[97, "import-bom"]], "import_definition": [[98, "import-definition"]], "import_json": [[380, "import-json"]], "in_polygon": [[228, "in-polygon"]], "in_voids": [[229, "in-voids"]], "include_inter_plane_coupling": [[398, "include-inter-plane-coupling"]], "include_only_selected_nets": [[447, "include-only-selected-nets"]], "ind_value": [[26, "ind-value"]], "inductors": [[99, "inductors"]], "instances": [[100, "instances"], [203, "instances"], [626, "instances"]], "instances_by_name": [[627, "instances-by-name"]], "int_to_geometry_type": [[178, "int-to-geometry-type"], [628, "int-to-geometry-type"]], "int_to_pad_type": [[179, "int-to-pad-type"], [629, "int-to-pad-type"]], "intersect": [[351, "intersect"]], "intersection_type": [[352, "intersection-type"]], "is_arc": [[353, "is-arc"]], "is_ccw": [[328, "is-ccw"]], "is_circuit_port": [[274, "is-circuit-port"], [309, "is-circuit-port"]], "is_enabled": [[27, "is-enabled"]], "is_intersecting": [[354, "is-intersecting"]], "is_negative": [[355, "is-negative"]], "is_net_in_component": [[600, "is-net-in-component"]], "is_null": [[28, "is-null"], [134, "is-null"], [146, "is-null"], [157, "is-null"], [170, "is-null"], [230, "is-null"], [275, "is-null"], [310, "is-null"], [356, "is-null"]], "is_parallel_rlc": [[29, "is-parallel-rlc"]], "is_parameter": [[498, "is-parameter"]], "is_pin": [[231, "is-pin"]], "is_point": [[329, "is-point"]], "is_power_gound_net": [[601, "is-power-gound-net"]], "is_power_ground": [[171, "is-power-ground"]], "is_reference_terminal": [[276, "is-reference-terminal"], [311, "is-reference-terminal"]], "is_segment": [[330, "is-segment"]], "is_stackup_layer": [[119, "is-stackup-layer"]], "is_top_mounted": [[30, "is-top-mounted"]], "is_via_layer": [[120, "is-via-layer"]], "is_void": [[232, "is-void"], [357, "is-void"]], "iterate_materials_in_amat": [[579, "iterate-materials-in-amat"]], "layer": [[233, "layer"], [277, "layer"], [312, "layer"], [358, "layer"]], "layer_name": [[234, "layer-name"], [359, "layer-name"]], "layer_range_names": [[235, "layer-range-names"]], "layer_types": [[687, "layer-types"]], "layers": [[552, "layers"], [688, "layers"]], "layers_by_id": [[689, "layers-by-id"]], "layout_defeaturing": [[529, "layout-defeaturing"]], "layout_instance": [[31, "layout-instance"]], "length": [[331, "length"]], "limits": [[690, "limits"]], "load": [[691, "load"]], "load_amat": [[580, "load-amat"]], "load_material": [[581, "load-material"]], "location": [[32, "location"], [278, "location"], [313, "location"]], "lock_file": [[716, "lock-file"]], "longest_arc": [[360, "longest-arc"]], "lower_elevation": [[33, "lower-elevation"], [236, "lower-elevation"]], "magnitude": [[279, "magnitude"]], "material": [[204, "material"]], "material_property_to_id": [[582, "material-property-to-id"]], "materials": [[583, "materials"]], "max_arc_points": [[399, "max-arc-points"]], "max_mag_delta_s": [[400, "max-mag-delta-s"]], "max_num_passes": [[401, "max-num-passes"]], "max_suf_dev": [[402, "max-suf-dev"]], "merge_nets_polygons": [[602, "merge-nets-polygons"]], "merge_via_along_lines": [[630, "merge-via-along-lines"]], "mesh_freq": [[403, "mesh-freq"]], "mesh_sizefactor": [[404, "mesh-sizefactor"]], "metal_volume": [[237, "metal-volume"]], "mid_point": [[332, "mid-point"]], "min_num_passes": [[405, "min-num-passes"]], "min_pad_area_to_mesh": [[406, "min-pad-area-to-mesh"]], "min_plane_area_to_mesh": [[407, "min-plane-area-to-mesh"]], "min_void_area": [[408, "min-void-area"]], "minimum_void_surface": [[409, "minimum-void-surface"]], "mode": [[692, "mode"]], "model": [[34, "model"]], "model_type": [[35, "model-type"]], "name": [[36, "name"], [111, "name"], [121, "name"], [135, "name"], [147, "name"], [158, "name"], [172, "name"], [205, "name"], [238, "name"], [280, "name"], [314, "name"], [361, "name"], [499, "name"]], "negative_net": [[136, "negative-net"]], "net": [[37, "net"], [239, "net"], [281, "net"], [315, "net"], [362, "net"]], "net_name": [[240, "net-name"], [282, "net-name"], [316, "net-name"], [363, "net-name"]], "netlist": [[603, "netlist"]], "netlist_model": [[38, "netlist-model"]], "nets": [[39, "nets"], [148, "nets"], [159, "nets"], [604, "nets"]], "nets_by_components": [[605, "nets-by-components"]], "non_stackup_layers": [[693, "non-stackup-layers"]], "nport_comp_definition": [[101, "nport-comp-definition"]], "num_layers": [[694, "num-layers"]], "numpins": [[40, "numpins"]], "object_instance": [[241, "object-instance"]], "offset_x": [[180, "offset-x"]], "offset_y": [[181, "offset-y"]], "open_edb_after_build": [[381, "open-edb-after-build"]], "open_project": [[717, "open-project"]], "opening EDB": [[746, "opening-edb"]], "oproject": [[718, "oproject"]], "output_aedb": [[448, "output-aedb"]], "package_def": [[41, "package-def"]], "pad_type": [[631, "pad-type"]], "padstack_definition": [[242, "padstack-definition"]], "padstack_instances": [[173, "padstack-instances"], [206, "padstack-instances"]], "parameters": [[182, "parameters"]], "parameters_values": [[183, "parameters-values"]], "parameters_values_string": [[184, "parameters-values-string"]], "parametrize_polygon": [[553, "parametrize-polygon"]], "parametrize_position": [[243, "parametrize-position"]], "parametrize_trace_width": [[554, "parametrize-trace-width"]], "part_name": [[42, "part-name"]], "partname": [[43, "partname"]], "passivity_tolerance": [[410, "passivity-tolerance"]], "paths": [[555, "paths"]], "pec_launch_width": [[317, "pec-launch-width"]], "percentage_error_z0": [[411, "percentage-error-z0"]], "phase": [[283, "phase"]], "pin": [[244, "pin"]], "pin_groups": [[667, "pin-groups"]], "pin_number": [[245, "pin-number"]], "pingroups": [[246, "pingroups"], [632, "pingroups"]], "pinlist": [[44, "pinlist"]], "pins": [[45, "pins"], [633, "pins"]], "place": [[634, "place"]], "place_a3dcomp_3d_placement": [[695, "place-a3dcomp-3d-placement"]], "place_in_layout": [[696, "place-in-layout"]], "place_in_layout_3d_placement": [[697, "place-in-layout-3d-placement"]], "place_instance": [[698, "place-instance"]], "place_voltage_probe": [[668, "place-voltage-probe"]], "placement_layer": [[46, "placement-layer"], [247, "placement-layer"]], "plot": [[174, "plot"], [606, "plot"], [699, "plot"]], "points": [[333, "points"]], "points_raw": [[334, "points-raw"]], "polygon_data": [[185, "polygon-data"]], "polygons": [[556, "polygons"]], "polygons_by_layer": [[557, "polygons-by-layer"]], "position": [[248, "position"]], "positive_net": [[137, "positive-net"]], "power": [[607, "power"]], "power_nets": [[449, "power-nets"]], "primitives": [[175, "primitives"], [558, "primitives"]], "primitives_by_layer": [[559, "primitives-by-layer"]], "primitives_by_net": [[560, "primitives-by-net"]], "probes": [[530, "probes"], [669, "probes"]], "process_padstack_definitions": [[412, "process-padstack-definitions"]], "project_file": [[719, "project-file"]], "project_name": [[720, "project-name"]], "project_path": [[721, "project-path"]], "pyaedt_dir": [[722, "pyaedt-dir"]], "quit_application": [[723, "quit-application"]], "radiation_box": [[413, "radiation-box"]], "radius": [[335, "radius"]], "read_materials": [[584, "read-materials"]], "read_syslib_material": [[585, "read-syslib-material"]], "rectangles": [[561, "rectangles"]], "ref_terminal": [[284, "ref-terminal"], [318, "ref-terminal"]], "refdes": [[47, "refdes"]], "reference_net_name": [[285, "reference-net-name"], [319, "reference-net-name"]], "reference_object": [[286, "reference-object"], [320, "reference-object"]], "refresh_components": [[102, "refresh-components"]], "refresh_layer_collection": [[700, "refresh-layer-collection"]], "relative_error": [[414, "relative-error"]], "remove_layer": [[701, "remove-layer"]], "remove_pads_from_padstack": [[635, "remove-pads-from-padstack"]], "renormalize": [[287, "renormalize"]], "renormalize_z0": [[288, "renormalize-z0"]], "replace_rlc_by_gap_boundaries": [[103, "replace-rlc-by-gap-boundaries"]], "res_value": [[48, "res-value"]], "residual_copper_area_per_layer": [[702, "residual-copper-area-per-layer"]], "resistors": [[104, "resistors"]], "results_directory": [[724, "results-directory"]], "return_current_distribution": [[415, "return-current-distribution"]], "rlc": [[149, "rlc"]], "rlc_values": [[49, "rlc-values"]], "rotation": [[50, "rotation"], [186, "rotation"], [249, "rotation"]], "run_dc_simulation": [[725, "run-dc-simulation"]], "run_icepak_simulation": [[726, "run-icepak-simulation"]], "s_param_model": [[51, "s-param-model"]], "save_project": [[727, "save-project"]], "serial_rlc": [[150, "serial-rlc"]], "set_all_antipad_value": [[636, "set-all-antipad-value"]], "set_backdrill_bottom": [[250, "set-backdrill-bottom"]], "set_backdrill_top": [[251, "set-backdrill-top"]], "set_coax_port_attributes": [[531, "set-coax-port-attributes"]], "set_component_model": [[105, "set-component-model"]], "set_component_rlc": [[106, "set-component-rlc"]], "set_layer_clone": [[703, "set-layer-clone"]], "set_pad_property": [[637, "set-pad-property"]], "set_solder_ball": [[107, "set-solder-ball"]], "set_solderball": [[638, "set-solderball"]], "setup_name": [[382, "setup-name"]], "shape": [[187, "shape"]], "shape_to_polygon_data": [[562, "shape-to-polygon-data"]], "short_component_pins": [[108, "short-component-pins"]], "shortest_arc": [[364, "shortest-arc"]], "shunt_rlc": [[151, "shunt-rlc"]], "signal": [[608, "signal"]], "signal_layer_etching_instances": [[450, "signal-layer-etching-instances"]], "signal_layers": [[704, "signal-layers"]], "signal_layers_properties": [[451, "signal-layers-properties"]], "signal_nets": [[452, "signal-nets"]], "snap_length_threshold": [[416, "snap-length-threshold"]], "solder_ball_diameter": [[52, "solder-ball-diameter"]], "solder_ball_height": [[53, "solder-ball-height"]], "solder_ball_placement": [[54, "solder-ball-placement"]], "solder_ball_shape": [[55, "solder-ball-shape"]], "solver_type": [[383, "solver-type"]], "sources": [[453, "sources"], [532, "sources"], [670, "sources"]], "spice_model": [[56, "spice-model"]], "split_to_microvias": [[207, "split-to-microvias"]], "src_dir": [[728, "src-dir"]], "stackup_layers": [[705, "stackup-layers"]], "start": [[336, "start"]], "start_azimuth": [[417, "start-azimuth"]], "start_freq": [[418, "start-freq"]], "start_layer": [[252, "start-layer"]], "step_freq": [[419, "step-freq"]], "stop_freq": [[420, "stop-freq"]], "stop_layer": [[253, "stop-layer"]], "subtract": [[365, "subtract"]], "sweep_interpolating": [[421, "sweep-interpolating"]], "sweep_name": [[422, "sweep-name"]], "sweep_type": [[423, "sweep-type"]], "syslib": [[586, "syslib"]], "terminal": [[254, "terminal"]], "terminal_type": [[289, "terminal-type"], [321, "terminal-type"]], "thickness": [[706, "thickness"]], "tofloat": [[112, "tofloat"]], "top_bottom_association": [[57, "top-bottom-association"], [255, "top-bottom-association"]], "tostring": [[113, "tostring"]], "transparency": [[122, "transparency"]], "trim_component_reference_size": [[533, "trim-component-reference-size"]], "trim_reference_size": [[454, "trim-reference-size"]], "truncate_airbox_at_ground": [[455, "truncate-airbox-at-ground"]], "type": [[58, "type"], [123, "type"], [256, "type"], [290, "type"], [322, "type"], [366, "type"]], "unite": [[367, "unite"]], "unite_polygons_on_layer": [[563, "unite-polygons-on-layer"]], "update": [[124, "update"]], "update_layout": [[707, "update-layout"]], "update_material": [[587, "update-material"]], "update_rlc_from_bom": [[109, "update-rlc-from-bom"]], "upper_elevation": [[59, "upper-elevation"], [257, "upper-elevation"]], "use_airbox_horizontal_extent_multiple": [[456, "use-airbox-horizontal-extent-multiple"]], "use_airbox_negative_vertical_extent_multiple": [[457, "use-airbox-negative-vertical-extent-multiple"]], "use_airbox_positive_vertical_extent_multiple": [[458, "use-airbox-positive-vertical-extent-multiple"]], "use_arc_to_chord_error": [[424, "use-arc-to-chord-error"]], "use_default_coax_port_radial_extension": [[459, "use-default-coax-port-radial-extension"]], "use_default_cutout": [[460, "use-default-cutout"]], "use_dielectric_extent_multiple": [[461, "use-dielectric-extent-multiple"]], "use_error_z0": [[425, "use-error-z0"]], "use_pyaedt_cutout": [[462, "use-pyaedt-cutout"]], "use_q3d_for_dc": [[426, "use-q3d-for-dc"]], "use_radiation_boundary": [[463, "use-radiation-boundary"]], "use_s_parameter_model": [[60, "use-s-parameter-model"]], "value": [[61, "value"], [114, "value"], [500, "value"]], "value_object": [[501, "value-object"]], "value_string": [[502, "value-string"]], "version_keys": [[729, "version-keys"]], "vertical_extent_factor": [[323, "vertical-extent-factor"]], "via_layers": [[208, "via-layers"]], "via_start_layer": [[209, "via-start-layer"]], "via_stop_layer": [[210, "via-stop-layer"]], "vias": [[639, "vias"]], "vias and padstacks": [[4, "vias-and-padstacks"]], "voids": [[368, "voids"]], "voltage_regulator_modules": [[671, "voltage-regulator-modules"]], "xtalk_threshold": [[427, "xtalk-threshold"]]}, "docnames": ["api/ComponentsEdb", "api/CoreEdb", "api/LayerData", "api/NetsEdb", "api/PadstackEdb", "api/PortsEdb", "api/PrimitivesEdb", "api/SiWave", "api/SimulationConfigurationEdb", "api/SourcesEdb", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", "api/_autosummary/pyedb.dotnet.edb_core.components.Components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.add_void", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.circles", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_circle", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_trace", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.db", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.layers", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.paths", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rectangles", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout", "api/_autosummary/pyedb.siwave.Siwave", "api/_autosummary/pyedb.siwave.Siwave.close_project", "api/_autosummary/pyedb.siwave.Siwave.current_version", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report", "api/_autosummary/pyedb.siwave.Siwave.export_element_data", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report", "api/_autosummary/pyedb.siwave.Siwave.icepak", "api/_autosummary/pyedb.siwave.Siwave.lock_file", "api/_autosummary/pyedb.siwave.Siwave.open_project", "api/_autosummary/pyedb.siwave.Siwave.oproject", "api/_autosummary/pyedb.siwave.Siwave.project_file", "api/_autosummary/pyedb.siwave.Siwave.project_name", "api/_autosummary/pyedb.siwave.Siwave.project_path", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir", "api/_autosummary/pyedb.siwave.Siwave.quit_application", "api/_autosummary/pyedb.siwave.Siwave.results_directory", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation", "api/_autosummary/pyedb.siwave.Siwave.save_project", "api/_autosummary/pyedb.siwave.Siwave.src_dir", "api/_autosummary/pyedb.siwave.Siwave.version_keys", "api/index", "contributing", "examples/index", "examples/legacy_pyaedt_integration/03_5G_antenna_example", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics", "examples/legacy_pyaedt_integration/04_edb_parametrized_design", "examples/legacy_pyaedt_integration/09_Configuration", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board", "examples/legacy_pyaedt_integration/13_edb_create_component", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design", "examples/legacy_pyaedt_integration/15_ac_analysis", "examples/legacy_pyaedt_integration/index", "examples/legacy_pyaedt_integration/sg_execution_times", "examples/legacy_standalone/00_EDB_Create_VIA", "examples/legacy_standalone/01_edb_example", "examples/legacy_standalone/02_edb_to_ipc2581", "examples/legacy_standalone/03_rename_nets_and_ports", "examples/legacy_standalone/05_Plot_nets", "examples/legacy_standalone/06_Advanced_EDB", "examples/legacy_standalone/08_CPWG", "examples/legacy_standalone/10_GDS_workflow", "examples/legacy_standalone/11_post_layout_parameterization", "examples/legacy_standalone/index", "examples/legacy_standalone/sg_execution_times", "examples/sg_execution_times", "getting_started/about", "getting_started/contributing", "getting_started/index", "getting_started/installation", "getting_started/quickcode", "getting_started/troubleshooting", "getting_started/versioning", "index", "sg_execution_times", "user_guide/build_simulation_project/build_signal_integrity_project", "user_guide/build_simulation_project/cutout", "user_guide/build_simulation_project/index", "user_guide/components/create_resistor_on_pin", "user_guide/components/create_rlc_boundary_on_pins", "user_guide/components/create_rlc_component", "user_guide/components/index", "user_guide/edb_information_queries/edb_queries", "user_guide/edb_information_queries/get_layout_bounding_box", "user_guide/edb_information_queries/index", "user_guide/excitations/create_circuit_ports_on_component", "user_guide/excitations/create_coax_port_on_component", "user_guide/excitations/create_current_source", "user_guide/excitations/create_edge_port_on_polygon", "user_guide/excitations/create_port_between_pin_and_layer", "user_guide/excitations/index", "user_guide/index", "user_guide/layer_stackup/define_layer_stackup", "user_guide/layer_stackup/index", "user_guide/layer_stackup/layer_stackup", "user_guide/load_export_edb/index", "user_guide/load_export_edb/loading_layout", "user_guide/padstacks/create_padsatck_instance", "user_guide/padstacks/index", "user_guide/padstacks/set_all_antipads_value", "user_guide/simulation_setup/add_siwave_analysis", "user_guide/simulation_setup/define_hfss_extent", "user_guide/simulation_setup/define_hfss_simulation_setup", "user_guide/simulation_setup/index", "user_guide/use_design_variables"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["api/ComponentsEdb.rst", "api/CoreEdb.rst", "api/LayerData.rst", "api/NetsEdb.rst", "api/PadstackEdb.rst", "api/PortsEdb.rst", "api/PrimitivesEdb.rst", "api/SiWave.rst", "api/SimulationConfigurationEdb.rst", "api/SourcesEdb.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.ICs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.IOs.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.Others.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.add_rlc_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.capacitors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.components_by_partname.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_port_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.create_source_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.disable_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.export_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.find_by_reference_designator.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_component_placement_vector.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_components_from_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_from_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pin_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_rats.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_solder_ball_height.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.get_through_resistor_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.import_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.inductors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.nport_comp_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.refresh_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.resistors.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_model.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_component_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.set_solder_ball.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.short_component_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.GapPort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.location.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.description.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.name.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object.rst", "api/_autosummary/pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.add_void.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.circles.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_circle.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.create_trace.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.paths.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.rectangles.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names.rst", "api/_autosummary/pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_conductor_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.delete_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_amat.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.load_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.material_property_to_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_materials.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.read_syslib_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.syslib.rst", "api/_autosummary/pyedb.dotnet.edb_core.materials.Materials.update_material.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.classify_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.delete.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.get_powertree.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.netlist.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.power.rst", "api/_autosummary/pyedb.dotnet.edb_core.nets.EdbNets.signal.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.db.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.place.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball.rst", "api/_autosummary/pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.probes.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.sources.rst", "api/_autosummary/pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.all_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.export.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.flip_design.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layer_types.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.limits.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.load.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.mode.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.num_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.place_instance.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.plot.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.remove_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.signal_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.thickness.rst", "api/_autosummary/pyedb.dotnet.edb_core.stackup.Stackup.update_layout.rst", "api/_autosummary/pyedb.siwave.Siwave.rst", "api/_autosummary/pyedb.siwave.Siwave.close_project.rst", "api/_autosummary/pyedb.siwave.Siwave.current_version.rst", "api/_autosummary/pyedb.siwave.Siwave.export_dc_simulation_report.rst", "api/_autosummary/pyedb.siwave.Siwave.export_element_data.rst", "api/_autosummary/pyedb.siwave.Siwave.export_icepak_project.rst", "api/_autosummary/pyedb.siwave.Siwave.export_siwave_report.rst", "api/_autosummary/pyedb.siwave.Siwave.icepak.rst", "api/_autosummary/pyedb.siwave.Siwave.lock_file.rst", "api/_autosummary/pyedb.siwave.Siwave.open_project.rst", "api/_autosummary/pyedb.siwave.Siwave.oproject.rst", "api/_autosummary/pyedb.siwave.Siwave.project_file.rst", "api/_autosummary/pyedb.siwave.Siwave.project_name.rst", "api/_autosummary/pyedb.siwave.Siwave.project_path.rst", "api/_autosummary/pyedb.siwave.Siwave.pyaedt_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.quit_application.rst", "api/_autosummary/pyedb.siwave.Siwave.results_directory.rst", "api/_autosummary/pyedb.siwave.Siwave.run_dc_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.run_icepak_simulation.rst", "api/_autosummary/pyedb.siwave.Siwave.save_project.rst", "api/_autosummary/pyedb.siwave.Siwave.src_dir.rst", "api/_autosummary/pyedb.siwave.Siwave.version_keys.rst", "api/index.rst", "contributing.rst", "examples/index.rst", "examples/legacy_pyaedt_integration/03_5G_antenna_example.rst", "examples/legacy_pyaedt_integration/03_5G_antenna_example_parametrics.rst", "examples/legacy_pyaedt_integration/04_edb_parametrized_design.rst", "examples/legacy_pyaedt_integration/09_Configuration.rst", "examples/legacy_pyaedt_integration/12_edb_sma_connector_on_board.rst", "examples/legacy_pyaedt_integration/13_edb_create_component.rst", "examples/legacy_pyaedt_integration/14_edb_create_parametrized_design.rst", "examples/legacy_pyaedt_integration/15_ac_analysis.rst", "examples/legacy_pyaedt_integration/index.rst", "examples/legacy_pyaedt_integration/sg_execution_times.rst", "examples/legacy_standalone/00_EDB_Create_VIA.rst", "examples/legacy_standalone/01_edb_example.rst", "examples/legacy_standalone/02_edb_to_ipc2581.rst", "examples/legacy_standalone/03_rename_nets_and_ports.rst", "examples/legacy_standalone/05_Plot_nets.rst", "examples/legacy_standalone/06_Advanced_EDB.rst", "examples/legacy_standalone/08_CPWG.rst", "examples/legacy_standalone/10_GDS_workflow.rst", "examples/legacy_standalone/11_post_layout_parameterization.rst", "examples/legacy_standalone/index.rst", "examples/legacy_standalone/sg_execution_times.rst", "examples/sg_execution_times.rst", "getting_started/about.rst", "getting_started/contributing.rst", "getting_started/index.rst", "getting_started/installation.rst", "getting_started/quickcode.rst", "getting_started/troubleshooting.rst", "getting_started/versioning.rst", "index.rst", "sg_execution_times.rst", "user_guide/build_simulation_project/build_signal_integrity_project.rst", "user_guide/build_simulation_project/cutout.rst", "user_guide/build_simulation_project/index.rst", "user_guide/components/create_resistor_on_pin.rst", "user_guide/components/create_rlc_boundary_on_pins.rst", "user_guide/components/create_rlc_component.rst", "user_guide/components/index.rst", "user_guide/edb_information_queries/edb_queries.rst", "user_guide/edb_information_queries/get_layout_bounding_box.rst", "user_guide/edb_information_queries/index.rst", "user_guide/excitations/create_circuit_ports_on_component.rst", "user_guide/excitations/create_coax_port_on_component.rst", "user_guide/excitations/create_current_source.rst", "user_guide/excitations/create_edge_port_on_polygon.rst", "user_guide/excitations/create_port_between_pin_and_layer.rst", "user_guide/excitations/index.rst", "user_guide/index.rst", "user_guide/layer_stackup/define_layer_stackup.rst", "user_guide/layer_stackup/index.rst", "user_guide/layer_stackup/layer_stackup.rst", "user_guide/load_export_edb/index.rst", "user_guide/load_export_edb/loading_layout.rst", "user_guide/padstacks/create_padsatck_instance.rst", "user_guide/padstacks/index.rst", "user_guide/padstacks/set_all_antipads_value.rst", "user_guide/simulation_setup/add_siwave_analysis.rst", "user_guide/simulation_setup/define_hfss_extent.rst", "user_guide/simulation_setup/define_hfss_simulation_setup.rst", "user_guide/simulation_setup/index.rst", "user_guide/use_design_variables.rst"], "indexentries": {"ac_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[370, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.ac_settings", false]], "adaptive_high_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[385, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_high_freq", false]], "adaptive_low_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[386, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_low_freq", false]], "adaptive_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[387, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.adaptive_type", false]], "add_conductor_material() (pyedb.dotnet.edb_core.materials.materials method)": [[571, "pyedb.dotnet.edb_core.materials.Materials.add_conductor_material", false]], "add_current_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[371, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_current_source", false]], "add_dc_ground_source_term() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[372, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_dc_ground_source_term", false]], "add_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[572, "pyedb.dotnet.edb_core.materials.Materials.add_debye_material", false]], "add_dielectric_material() (pyedb.dotnet.edb_core.materials.materials method)": [[573, "pyedb.dotnet.edb_core.materials.Materials.add_dielectric_material", false]], "add_djordjevicsarkar_dielectric() (pyedb.dotnet.edb_core.materials.materials method)": [[574, "pyedb.dotnet.edb_core.materials.Materials.add_djordjevicsarkar_dielectric", false]], "add_document_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[673, "pyedb.dotnet.edb_core.stackup.Stackup.add_document_layer", false]], "add_frequency_sweep (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[429, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_frequency_sweep", false]], "add_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[674, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer", false]], "add_layer_above() (pyedb.dotnet.edb_core.stackup.stackup method)": [[675, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_above", false]], "add_layer_below() (pyedb.dotnet.edb_core.stackup.stackup method)": [[676, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_below", false]], "add_layer_bottom() (pyedb.dotnet.edb_core.stackup.stackup method)": [[677, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_bottom", false]], "add_layer_top() (pyedb.dotnet.edb_core.stackup.stackup method)": [[678, "pyedb.dotnet.edb_core.stackup.Stackup.add_layer_top", false]], "add_material() (pyedb.dotnet.edb_core.materials.materials method)": [[575, "pyedb.dotnet.edb_core.materials.Materials.add_material", false]], "add_multipole_debye_material() (pyedb.dotnet.edb_core.materials.materials method)": [[576, "pyedb.dotnet.edb_core.materials.Materials.add_multipole_debye_material", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[126, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[139, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.add_net", false]], "add_net() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[153, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.add_net", false]], "add_outline_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[679, "pyedb.dotnet.edb_core.stackup.Stackup.add_outline_layer", false]], "add_port_on_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[66, "pyedb.dotnet.edb_core.components.Components.add_port_on_rlc_component", false]], "add_rlc() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[373, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_rlc", false]], "add_rlc_boundary() (pyedb.dotnet.edb_core.components.components method)": [[67, "pyedb.dotnet.edb_core.components.Components.add_rlc_boundary", false]], "add_siwave_dc_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[641, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_dc_analysis", false]], "add_siwave_syz_analysis() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[642, "pyedb.dotnet.edb_core.siwave.EdbSiwave.add_siwave_syz_analysis", false]], "add_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch method)": [[430, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.add_source", false]], "add_void() (pyedb.dotnet.edb_core.layout.edblayout method)": [[535, "pyedb.dotnet.edb_core.layout.EdbLayout.add_void", false]], "add_voltage_source() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[374, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.add_voltage_source", false]], "adjust_solder_dielectrics() (pyedb.dotnet.edb_core.stackup.stackup method)": [[680, "pyedb.dotnet.edb_core.stackup.Stackup.adjust_solder_dielectrics", false]], "aedt_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[212, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.aedt_name", false]], "airbox_horizontal_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[431, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_horizontal_extent", false]], "airbox_negative_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[432, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_negative_vertical_extent", false]], "airbox_positive_vertical_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[433, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.airbox_positive_vertical_extent", false]], "all_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[681, "pyedb.dotnet.edb_core.stackup.Stackup.all_layers", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[127, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[140, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_class", false]], "api_class (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[161, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_class", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[128, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[141, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_create", false]], "api_create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[154, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_create", false]], "api_negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[129, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_negative_net", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[130, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[142, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.api_nets", false]], "api_nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[155, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.api_nets", false]], "api_object (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[162, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.api_object", false]], "api_positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[131, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.api_positive_net", false]], "arc_angle (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[388, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_angle", false]], "arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[389, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.arc_to_chord_error", false]], "arcs (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[338, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.arcs", false]], "area() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[339, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.area", false]], "assign_rlc_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[11, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_rlc_model", false]], "assign_s_param_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[12, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_s_param_model", false]], "assign_spice_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[13, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.assign_spice_model", false]], "backdrill_bottom (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[213, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_bottom", false]], "backdrill_top (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[214, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.backdrill_top", false]], "basis_order (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[390, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.basis_order", false]], "batch_solve_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[375, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.batch_solve_settings", false]], "bbox (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[340, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bbox", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[259, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.boundary_type", false]], "boundary_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[292, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.boundary_type", false]], "bounding_box (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[14, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[215, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[260, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[293, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.bounding_box", false]], "bounding_box (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[341, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.bounding_box", false]], "build_simulation_project() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[376, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.build_simulation_project", false]], "cap_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[15, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.cap_value", false]], "capacitors (pyedb.dotnet.edb_core.components.components property)": [[68, "pyedb.dotnet.edb_core.components.Components.capacitors", false]], "center (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[16, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[325, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.center", false]], "center (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[342, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.center", false]], "check_and_fix_via_plating() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[610, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.check_and_fix_via_plating", false]], "circles (pyedb.dotnet.edb_core.layout.edblayout property)": [[536, "pyedb.dotnet.edb_core.layout.EdbLayout.circles", false]], "classify_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[589, "pyedb.dotnet.edb_core.nets.EdbNets.classify_nets", false]], "close_project() (pyedb.siwave.siwave method)": [[709, "pyedb.siwave.Siwave.close_project", false]], "coax_solder_ball_diameter (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[434, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coax_solder_ball_diameter", false]], "color (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[116, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.color", false]], "component (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[17, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component", false]], "component (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[216, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[261, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[294, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.component", false]], "component (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[343, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.component", false]], "component_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[18, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_def", false]], "component_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[19, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_instance", false]], "component_property (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[20, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.component_property", false]], "components (class in pyedb.dotnet.edb_core.components)": [[62, "pyedb.dotnet.edb_core.components.Components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[143, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[163, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.components", false]], "components (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[435, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.components", false]], "components_by_nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[590, "pyedb.dotnet.edb_core.nets.EdbNets.components_by_nets", false]], "components_by_partname (pyedb.dotnet.edb_core.components.components property)": [[69, "pyedb.dotnet.edb_core.components.Components.components_by_partname", false]], "configure_hfss_analysis_setup() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[504, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_analysis_setup", false]], "configure_hfss_extents() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[505, "pyedb.dotnet.edb_core.hfss.EdbHfss.configure_hfss_extents", false]], "configure_siw_analysis_setup() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[643, "pyedb.dotnet.edb_core.siwave.EdbSiwave.configure_siw_analysis_setup", false]], "convert_to_3d_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[189, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias", false]], "convert_to_polygon() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[344, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon", false]], "coplanar_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[436, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.coplanar_instances", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[262, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.couple_ports", false]], "couple_ports() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[295, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.couple_ports", false]], "create() (pyedb.dotnet.edb_core.components.components method)": [[70, "pyedb.dotnet.edb_core.components.Components.create", false]], "create() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[164, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.create", false]], "create() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[611, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create", false]], "create_bundle_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[506, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_bundle_wave_port", false]], "create_circle() (pyedb.dotnet.edb_core.layout.edblayout method)": [[537, "pyedb.dotnet.edb_core.layout.EdbLayout.create_circle", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[507, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_net", false]], "create_circuit_port_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[644, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_net", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[508, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[645, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin", false]], "create_circuit_port_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[646, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_circuit_port_on_pin_group", false]], "create_circular_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[612, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_circular_padstack", false]], "create_clearance_on_component() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[21, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_clearance_on_component", false]], "create_coax_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[217, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_coax_port", false]], "create_coax_port() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[613, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.create_coax_port", false]], "create_coax_port_on_component() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[509, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_coax_port_on_component", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[510, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_net", false]], "create_current_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[647, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_net", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[511, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_current_source_on_pin", false]], "create_current_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[648, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin", false]], "create_current_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[649, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_current_source_on_pin_group", false]], "create_dc_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[650, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_dc_terminal", false]], "create_differential_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[512, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_differential_wave_port", false]], "create_edge_port_horizontal() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[513, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_horizontal", false]], "create_edge_port_on_polygon() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[514, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", false]], "create_edge_port_vertical() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[515, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_edge_port_vertical", false]], "create_exec_file() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[651, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_exec_file", false]], "create_hfss_ports_on_padstack() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[516, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_hfss_ports_on_padstack", false]], "create_impedance_crosstalk_scan() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[652, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_impedance_crosstalk_scan", false]], "create_lumped_port_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[517, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_lumped_port_on_net", false]], "create_package_def() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[22, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.create_package_def", false]], "create_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[653, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group", false]], "create_pin_group_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[654, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_on_net", false]], "create_pin_group_terminal() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[655, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_pin_group_terminal", false]], "create_pingroup_from_pins() (pyedb.dotnet.edb_core.components.components method)": [[71, "pyedb.dotnet.edb_core.components.Components.create_pingroup_from_pins", false]], "create_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[538, "pyedb.dotnet.edb_core.layout.EdbLayout.create_polygon", false]], "create_port() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[218, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_port", false]], "create_port_between_pin_and_layer() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[656, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_port_between_pin_and_layer", false]], "create_port_on_component() (pyedb.dotnet.edb_core.components.components method)": [[72, "pyedb.dotnet.edb_core.components.Components.create_port_on_component", false]], "create_port_on_pins() (pyedb.dotnet.edb_core.components.components method)": [[73, "pyedb.dotnet.edb_core.components.Components.create_port_on_pins", false]], "create_rectangle() (pyedb.dotnet.edb_core.layout.edblayout method)": [[539, "pyedb.dotnet.edb_core.layout.EdbLayout.create_rectangle", false]], "create_rectangle_in_pad() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[219, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[518, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_resistor_on_pin", false]], "create_resistor_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[657, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_resistor_on_pin", false]], "create_rlc_boundary_on_pins() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[519, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_rlc_boundary_on_pins", false]], "create_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[74, "pyedb.dotnet.edb_core.components.Components.create_rlc_component", false]], "create_rlc_component() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[658, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_rlc_component", false]], "create_source_on_component() (pyedb.dotnet.edb_core.components.components method)": [[75, "pyedb.dotnet.edb_core.components.Components.create_source_on_component", false]], "create_symmetric_stackup() (pyedb.dotnet.edb_core.stackup.stackup method)": [[682, "pyedb.dotnet.edb_core.stackup.Stackup.create_symmetric_stackup", false]], "create_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[220, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_terminal", false]], "create_trace() (pyedb.dotnet.edb_core.layout.edblayout method)": [[540, "pyedb.dotnet.edb_core.layout.EdbLayout.create_trace", false]], "create_vertical_circuit_port_on_clipped_traces() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[520, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_vertical_circuit_port_on_clipped_traces", false]], "create_voltage_probe_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[659, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_probe_on_pin_group", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[521, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_net", false]], "create_voltage_source_on_net() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[660, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_net", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[522, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[661, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin", false]], "create_voltage_source_on_pin_group() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[662, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_voltage_source_on_pin_group", false]], "create_vrm_module() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[663, "pyedb.dotnet.edb_core.siwave.EdbSiwave.create_vrm_module", false]], "create_wave_port() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[523, "pyedb.dotnet.edb_core.hfss.EdbHfss.create_wave_port", false]], "current_version (pyedb.siwave.siwave property)": [[710, "pyedb.siwave.Siwave.current_version", false]], "cutout_subdesign_expansion (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[437, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_expansion", false]], "cutout_subdesign_round_corner (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[438, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_round_corner", false]], "cutout_subdesign_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[439, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.cutout_subdesign_type", false]], "db (pyedb.dotnet.edb_core.layout.edblayout property)": [[541, "pyedb.dotnet.edb_core.layout.EdbLayout.db", false]], "db (pyedb.dotnet.edb_core.nets.edbnets property)": [[591, "pyedb.dotnet.edb_core.nets.EdbNets.db", false]], "db (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[614, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.db", false]], "dc_compute_inductance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[465, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_compute_inductance", false]], "dc_contact_radius (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[466, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_contact_radius", false]], "dc_error_energy (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[467, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_error_energy", false]], "dc_export_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[468, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_export_thermal_data", false]], "dc_full_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[469, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_full_report_path", false]], "dc_icepak_temp_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[470, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_icepak_temp_file", false]], "dc_import_thermal_data (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[471, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_import_thermal_data", false]], "dc_max_init_mesh_edge_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[472, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_init_mesh_edge_length", false]], "dc_max_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[473, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_max_num_pass", false]], "dc_mesh_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[474, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_bondwires", false]], "dc_mesh_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[475, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_mesh_vias", false]], "dc_min_num_pass (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[476, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_num_pass", false]], "dc_min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[477, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_plane_area_to_mesh", false]], "dc_min_void_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[478, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_min_void_area_to_mesh", false]], "dc_num_bondwire_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[479, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_bondwire_sides", false]], "dc_num_via_sides (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[480, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_num_via_sides", false]], "dc_per_pin_res_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[481, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_res_path", false]], "dc_per_pin_use_pin_format (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[482, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_per_pin_use_pin_format", false]], "dc_percent_local_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[483, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_percent_local_refinement", false]], "dc_perform_adaptive_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[484, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_perform_adaptive_refinement", false]], "dc_plot_jv (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[485, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_plot_jv", false]], "dc_refine_bondwires (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[486, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_bondwires", false]], "dc_refine_vias (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[487, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_refine_vias", false]], "dc_report_config_file (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[488, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_config_file", false]], "dc_report_show_active_devices (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[489, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_report_show_Active_devices", false]], "dc_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[377, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.dc_settings", false]], "dc_shorts() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[565, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.dc_shorts", false]], "dc_slide_position (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[490, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_slide_position", false]], "dc_source_terms_to_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[491, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_source_terms_to_ground", false]], "dc_use_dc_custom_settings (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[492, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_dc_custom_settings", false]], "dc_use_loop_res_for_per_pin (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[493, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_use_loop_res_for_per_pin", false]], "dc_via_report_path (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationdc property)": [[494, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc.dc_via_report_path", false]], "dcir_equipotential_region (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[221, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.dcir_equipotential_region", false]], "deactivate_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[76, "pyedb.dotnet.edb_core.components.Components.deactivate_rlc_component", false]], "decade_count (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[391, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.decade_count", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[263, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.deembed", false]], "deembed (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[296, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed", false]], "deembed_length (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[297, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.deembed_length", false]], "defeature_abs_length (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[392, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_abs_length", false]], "defeature_layout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[393, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.defeature_layout", false]], "defeature_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[542, "pyedb.dotnet.edb_core.layout.EdbLayout.defeature_polygon", false]], "definitions (pyedb.dotnet.edb_core.components.components property)": [[77, "pyedb.dotnet.edb_core.components.Components.definitions", false]], "definitions (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[615, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.definitions", false]], "delete() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[23, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.delete", false]], "delete() (pyedb.dotnet.edb_core.components.components method)": [[78, "pyedb.dotnet.edb_core.components.Components.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[132, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[144, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata method)": [[156, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[165, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[222, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[264, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[298, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[345, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.delete", false]], "delete() (pyedb.dotnet.edb_core.edb_data.variables.variable method)": [[496, "pyedb.dotnet.edb_core.edb_data.variables.Variable.delete", false]], "delete() (pyedb.dotnet.edb_core.nets.edbnets method)": [[592, "pyedb.dotnet.edb_core.nets.EdbNets.delete", false]], "delete_material() (pyedb.dotnet.edb_core.materials.materials method)": [[577, "pyedb.dotnet.edb_core.materials.Materials.delete_material", false]], "delete_padstack_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[616, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.delete_padstack_instances", false]], "delete_primitives() (pyedb.dotnet.edb_core.layout.edblayout method)": [[543, "pyedb.dotnet.edb_core.layout.EdbLayout.delete_primitives", false]], "delete_single_pin_rlc() (pyedb.dotnet.edb_core.components.components method)": [[79, "pyedb.dotnet.edb_core.components.Components.delete_single_pin_rlc", false]], "description (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[497, "pyedb.dotnet.edb_core.edb_data.variables.Variable.description", false]], "dielectric_extent (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[440, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.dielectric_extent", false]], "dielectric_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[683, "pyedb.dotnet.edb_core.stackup.Stackup.dielectric_layers", false]], "disable_rlc_component() (pyedb.dotnet.edb_core.components.components method)": [[80, "pyedb.dotnet.edb_core.components.Components.disable_rlc_component", false]], "disjoint_nets() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[566, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.disjoint_nets", false]], "do_cutout_subdesign (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[441, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_cutout_subdesign", false]], "do_lambda_refinement (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[394, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.do_lambda_refinement", false]], "do_pingroup (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[442, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.do_pingroup", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[265, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.do_renormalize", false]], "do_renormalize (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[299, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.do_renormalize", false]], "duplicate() (pyedb.dotnet.edb_core.materials.materials method)": [[578, "pyedb.dotnet.edb_core.materials.Materials.duplicate", false]], "duplicate() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[617, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.duplicate", false]], "edbarcs (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[324, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs", false]], "edbcomponent (class in pyedb.dotnet.edb_core.cell.hierarchy.component)": [[10, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent", false]], "edbdifferentialpairdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[125, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData", false]], "edbextendednetdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[138, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData", false]], "edbhfss (class in pyedb.dotnet.edb_core.hfss)": [[503, "pyedb.dotnet.edb_core.hfss.EdbHfss", false]], "edblayout (class in pyedb.dotnet.edb_core.layout)": [[534, "pyedb.dotnet.edb_core.layout.EdbLayout", false]], "edbnetclassdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[152, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData", false]], "edbnets (class in pyedb.dotnet.edb_core.nets)": [[588, "pyedb.dotnet.edb_core.nets.EdbNets", false]], "edbnetsdata (class in pyedb.dotnet.edb_core.edb_data.nets_data)": [[160, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData", false]], "edbpadproperties (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[176, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties", false]], "edbpadstack (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[188, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack", false]], "edbpadstackinstance (class in pyedb.dotnet.edb_core.edb_data.padstacks_data)": [[211, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance", false]], "edbpadstacks (class in pyedb.dotnet.edb_core.padstack)": [[609, "pyedb.dotnet.edb_core.padstack.EdbPadstacks", false]], "edbprimitives (class in pyedb.dotnet.edb_core.edb_data.primitives_data)": [[337, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives", false]], "edbsiwave (class in pyedb.dotnet.edb_core.siwave)": [[640, "pyedb.dotnet.edb_core.siwave.EdbSiwave", false]], "edbvalue (class in pyedb.dotnet.edb_core.edb_data.edbvalue)": [[110, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue", false]], "eligible_power_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[593, "pyedb.dotnet.edb_core.nets.EdbNets.eligible_power_nets", false]], "enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[24, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.enabled", false]], "end (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[326, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.end", false]], "enforce_causality (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[395, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_causality", false]], "enforce_passivity (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[396, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.enforce_passivity", false]], "etching_factor_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[443, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.etching_factor_instances", false]], "excitations (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[524, "pyedb.dotnet.edb_core.hfss.EdbHfss.excitations", false]], "excitations (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[664, "pyedb.dotnet.edb_core.siwave.EdbSiwave.excitations", false]], "export() (pyedb.dotnet.edb_core.stackup.stackup method)": [[684, "pyedb.dotnet.edb_core.stackup.Stackup.export", false]], "export_bom() (pyedb.dotnet.edb_core.components.components method)": [[81, "pyedb.dotnet.edb_core.components.Components.export_bom", false]], "export_dc_simulation_report() (pyedb.siwave.siwave method)": [[711, "pyedb.siwave.Siwave.export_dc_simulation_report", false]], "export_definition() (pyedb.dotnet.edb_core.components.components method)": [[82, "pyedb.dotnet.edb_core.components.Components.export_definition", false]], "export_element_data() (pyedb.siwave.siwave method)": [[712, "pyedb.siwave.Siwave.export_element_data", false]], "export_icepak_project() (pyedb.siwave.siwave method)": [[713, "pyedb.siwave.Siwave.export_icepak_project", false]], "export_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[378, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.export_json", false]], "export_siwave_report() (pyedb.siwave.siwave method)": [[714, "pyedb.siwave.Siwave.export_siwave_report", false]], "extended_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[166, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.extended_net", false]], "filename (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[379, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.filename", false]], "fill_material (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[117, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.fill_material", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata method)": [[133, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata method)": [[145, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.find_by_name", false]], "find_by_name() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[167, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_by_name", false]], "find_by_reference_designator() (pyedb.dotnet.edb_core.components.components method)": [[83, "pyedb.dotnet.edb_core.components.Components.find_by_reference_designator", false]], "find_dc_short() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[168, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.find_dc_short", false]], "find_or_create_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[594, "pyedb.dotnet.edb_core.nets.EdbNets.find_or_create_net", false]], "fix_circle_void_for_clipping() (pyedb.dotnet.edb_core.layout.edblayout method)": [[544, "pyedb.dotnet.edb_core.layout.EdbLayout.fix_circle_void_for_clipping", false]], "fix_self_intersections() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[567, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.fix_self_intersections", false]], "flip_design() (pyedb.dotnet.edb_core.stackup.stackup method)": [[685, "pyedb.dotnet.edb_core.stackup.Stackup.flip_design", false]], "gapport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[258, "pyedb.dotnet.edb_core.edb_data.ports.GapPort", false]], "generate_excitations (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[444, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_excitations", false]], "generate_extended_nets() (pyedb.dotnet.edb_core.nets.edbnets method)": [[595, "pyedb.dotnet.edb_core.nets.EdbNets.generate_extended_nets", false]], "generate_solder_balls (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[445, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.generate_solder_balls", false]], "geometry_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[177, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.geometry_type", false]], "get_aedt_pin_name() (pyedb.dotnet.edb_core.components.components method)": [[84, "pyedb.dotnet.edb_core.components.Components.get_aedt_pin_name", false]], "get_closest_arc_midpoint() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[346, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_arc_midpoint", false]], "get_closest_point() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[347, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_closest_point", false]], "get_component_by_name() (pyedb.dotnet.edb_core.components.components method)": [[85, "pyedb.dotnet.edb_core.components.Components.get_component_by_name", false]], "get_component_net_connection_info() (pyedb.dotnet.edb_core.components.components method)": [[86, "pyedb.dotnet.edb_core.components.Components.get_component_net_connection_info", false]], "get_component_placement_vector() (pyedb.dotnet.edb_core.components.components method)": [[87, "pyedb.dotnet.edb_core.components.Components.get_component_placement_vector", false]], "get_components_from_nets() (pyedb.dotnet.edb_core.components.components method)": [[88, "pyedb.dotnet.edb_core.components.Components.get_components_from_nets", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[223, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set", false]], "get_connected_object_id_set() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[348, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[224, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_objects", false]], "get_connected_objects() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[349, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_objects", false]], "get_dcconnected_net_list() (pyedb.dotnet.edb_core.nets.edbnets method)": [[596, "pyedb.dotnet.edb_core.nets.EdbNets.get_dcconnected_net_list", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[266, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_edge_terminal_reference_primitive", false]], "get_edge_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[300, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_edge_terminal_reference_primitive", false]], "get_instances() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[618, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_instances", false]], "get_layout_bounding_box() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[525, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_layout_bounding_box", false]], "get_layout_statistics() (pyedb.dotnet.edb_core.layout.edblayout method)": [[545, "pyedb.dotnet.edb_core.layout.EdbLayout.get_layout_statistics", false]], "get_layout_thickness() (pyedb.dotnet.edb_core.stackup.stackup method)": [[686, "pyedb.dotnet.edb_core.stackup.Stackup.get_layout_thickness", false]], "get_net_by_name() (pyedb.dotnet.edb_core.nets.edbnets method)": [[597, "pyedb.dotnet.edb_core.nets.EdbNets.get_net_by_name", false]], "get_nets_from_pin_list() (pyedb.dotnet.edb_core.components.components method)": [[89, "pyedb.dotnet.edb_core.components.Components.get_nets_from_pin_list", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[267, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pad_edge_terminal_reference_pin", false]], "get_pad_edge_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[301, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pad_edge_terminal_reference_pin", false]], "get_pad_parameters() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[619, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pad_parameters", false]], "get_padstack_instance_by_net_name() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[620, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name", false]], "get_padstack_instances_intersecting_bounding_box() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[621, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_intersecting_bounding_box", false]], "get_padstack_instances_rtree_index() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[622, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_padstack_instances_rtree_index", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[268, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_padstack_terminal_reference_pin", false]], "get_padstack_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[302, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_padstack_terminal_reference_pin", false]], "get_pin_from_component() (pyedb.dotnet.edb_core.components.components method)": [[90, "pyedb.dotnet.edb_core.components.Components.get_pin_from_component", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[269, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_pin_group_terminal_reference_pin", false]], "get_pin_group_terminal_reference_pin() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[303, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_pin_group_terminal_reference_pin", false]], "get_pin_position() (pyedb.dotnet.edb_core.components.components method)": [[91, "pyedb.dotnet.edb_core.components.Components.get_pin_position", false]], "get_pinlist_from_component_and_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[623, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net", false]], "get_pins() (pyedb.dotnet.edb_core.components.components method)": [[92, "pyedb.dotnet.edb_core.components.Components.get_pins", false]], "get_pins_name_from_net() (pyedb.dotnet.edb_core.components.components method)": [[93, "pyedb.dotnet.edb_core.components.Components.get_pins_name_from_net", false]], "get_plot_data() (pyedb.dotnet.edb_core.nets.edbnets method)": [[598, "pyedb.dotnet.edb_core.nets.EdbNets.get_plot_data", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.gapport method)": [[270, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.get_point_terminal_reference_primitive", false]], "get_point_terminal_reference_primitive() (pyedb.dotnet.edb_core.edb_data.ports.waveport method)": [[304, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.get_point_terminal_reference_primitive", false]], "get_polygon_bounding_box() (pyedb.dotnet.edb_core.layout.edblayout method)": [[546, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_bounding_box", false]], "get_polygon_points() (pyedb.dotnet.edb_core.layout.edblayout method)": [[547, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygon_points", false]], "get_polygons_by_layer() (pyedb.dotnet.edb_core.layout.edblayout method)": [[548, "pyedb.dotnet.edb_core.layout.EdbLayout.get_polygons_by_layer", false]], "get_ports_number() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[526, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_ports_number", false]], "get_powertree() (pyedb.dotnet.edb_core.nets.edbnets method)": [[599, "pyedb.dotnet.edb_core.nets.EdbNets.get_powertree", false]], "get_primitive() (pyedb.dotnet.edb_core.layout.edblayout method)": [[549, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive", false]], "get_primitive_by_layer_and_point() (pyedb.dotnet.edb_core.layout.edblayout method)": [[550, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitive_by_layer_and_point", false]], "get_primitives() (pyedb.dotnet.edb_core.layout.edblayout method)": [[551, "pyedb.dotnet.edb_core.layout.EdbLayout.get_primitives", false]], "get_rats() (pyedb.dotnet.edb_core.components.components method)": [[94, "pyedb.dotnet.edb_core.components.Components.get_rats", false]], "get_reference_pins() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[225, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_reference_pins", false]], "get_reference_pins() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[624, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_reference_pins", false]], "get_smallest_trace_width() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[169, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.get_smallest_trace_width", false]], "get_solder_ball_height() (pyedb.dotnet.edb_core.components.components method)": [[95, "pyedb.dotnet.edb_core.components.Components.get_solder_ball_height", false]], "get_terminal() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[226, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_terminal", false]], "get_through_resistor_list() (pyedb.dotnet.edb_core.components.components method)": [[96, "pyedb.dotnet.edb_core.components.Components.get_through_resistor_list", false]], "get_trace_width_for_traces_with_ports() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[527, "pyedb.dotnet.edb_core.hfss.EdbHfss.get_trace_width_for_traces_with_ports", false]], "get_via_instance_from_net() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[625, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.get_via_instance_from_net", false]], "height (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[327, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.height", false]], "hfss_extent_info (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[528, "pyedb.dotnet.edb_core.hfss.EdbHfss.hfss_extent_info", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[271, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.hfss_type", false]], "hfss_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[305, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.hfss_type", false]], "hole_diameter (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[190, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter", false]], "hole_diameter_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[191, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_diameter_string", false]], "hole_finished_size (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[192, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_finished_size", false]], "hole_offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[193, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_x", false]], "hole_offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[194, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_offset_y", false]], "hole_parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[195, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_parameters", false]], "hole_params (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[196, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_params", false]], "hole_plating_ratio (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[197, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_ratio", false]], "hole_plating_thickness (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[198, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_plating_thickness", false]], "hole_properties (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[199, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_properties", false]], "hole_range (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[200, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_range", false]], "hole_rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[201, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_rotation", false]], "hole_type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[202, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.hole_type", false]], "honor_user_dielectric (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[446, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.honor_user_dielectric", false]], "horizontal_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[306, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.horizontal_extent_factor", false]], "icepak (pyedb.siwave.siwave property)": [[715, "pyedb.siwave.Siwave.icepak", false]], "icepak_component_file (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[665, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_component_file", false]], "icepak_use_minimal_comp_defaults (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[666, "pyedb.dotnet.edb_core.siwave.EdbSiwave.icepak_use_minimal_comp_defaults", false]], "ics (pyedb.dotnet.edb_core.components.components property)": [[63, "pyedb.dotnet.edb_core.components.Components.ICs", false]], "id (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[25, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.id", false]], "id (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[118, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.id", false]], "id (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[227, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[272, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[307, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.id", false]], "id (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[350, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.id", false]], "ignore_non_functional_pads (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[397, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.ignore_non_functional_pads", false]], "illegal_net_names() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[568, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_net_names", false]], "illegal_rlc_values() (pyedb.dotnet.edb_core.layout_validation.layoutvalidation method)": [[569, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation.illegal_rlc_values", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[273, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.impedance", false]], "impedance (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[308, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.impedance", false]], "import_bom() (pyedb.dotnet.edb_core.components.components method)": [[97, "pyedb.dotnet.edb_core.components.Components.import_bom", false]], "import_definition() (pyedb.dotnet.edb_core.components.components method)": [[98, "pyedb.dotnet.edb_core.components.Components.import_definition", false]], "import_json() (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration method)": [[380, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.import_json", false]], "in_polygon() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[228, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon", false]], "in_voids() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[229, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids", false]], "include_inter_plane_coupling (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[398, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.include_inter_plane_coupling", false]], "include_only_selected_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[447, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.include_only_selected_nets", false]], "ind_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[26, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.ind_value", false]], "inductors (pyedb.dotnet.edb_core.components.components property)": [[99, "pyedb.dotnet.edb_core.components.Components.inductors", false]], "instances (pyedb.dotnet.edb_core.components.components property)": [[100, "pyedb.dotnet.edb_core.components.Components.instances", false]], "instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[203, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.instances", false]], "instances (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[626, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances", false]], "instances_by_name (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[627, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.instances_by_name", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[178, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type", false]], "int_to_geometry_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[628, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_geometry_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties method)": [[179, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type", false]], "int_to_pad_type() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[629, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.int_to_pad_type", false]], "intersect() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[351, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersect", false]], "intersection_type() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[352, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.intersection_type", false]], "ios (pyedb.dotnet.edb_core.components.components property)": [[64, "pyedb.dotnet.edb_core.components.Components.IOs", false]], "is_arc() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[353, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc", false]], "is_ccw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[328, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_ccw", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[274, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_circuit_port", false]], "is_circuit_port (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[309, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_circuit_port", false]], "is_enabled (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[27, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_enabled", false]], "is_intersecting() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[354, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_intersecting", false]], "is_negative (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[355, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_negative", false]], "is_net_in_component() (pyedb.dotnet.edb_core.nets.edbnets method)": [[600, "pyedb.dotnet.edb_core.nets.EdbNets.is_net_in_component", false]], "is_null (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[28, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[134, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[146, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[157, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[170, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[230, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[275, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[310, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_null", false]], "is_null (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[356, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_null", false]], "is_parallel_rlc (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[29, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_parallel_rlc", false]], "is_parameter (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[498, "pyedb.dotnet.edb_core.edb_data.variables.Variable.is_parameter", false]], "is_pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[231, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_pin", false]], "is_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[329, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_point", false]], "is_power_gound_net() (pyedb.dotnet.edb_core.nets.edbnets method)": [[601, "pyedb.dotnet.edb_core.nets.EdbNets.is_power_gound_net", false]], "is_power_ground (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[171, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.is_power_ground", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[276, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.is_reference_terminal", false]], "is_reference_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[311, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.is_reference_terminal", false]], "is_segment (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[330, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.is_segment", false]], "is_stackup_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[119, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_stackup_layer", false]], "is_top_mounted (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[30, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.is_top_mounted", false]], "is_via_layer (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[120, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.is_via_layer", false]], "is_void (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[232, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.is_void", false]], "is_void (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[357, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.is_void", false]], "iterate_materials_in_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[579, "pyedb.dotnet.edb_core.materials.Materials.iterate_materials_in_amat", false]], "layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[233, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[277, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[312, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.layer", false]], "layer (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[358, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[234, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_name", false]], "layer_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[359, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name", false]], "layer_range_names (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[235, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.layer_range_names", false]], "layer_types (pyedb.dotnet.edb_core.stackup.stackup property)": [[687, "pyedb.dotnet.edb_core.stackup.Stackup.layer_types", false]], "layeredbclass (class in pyedb.dotnet.edb_core.edb_data.layer_data)": [[115, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass", false]], "layers (pyedb.dotnet.edb_core.layout.edblayout property)": [[552, "pyedb.dotnet.edb_core.layout.EdbLayout.layers", false]], "layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[688, "pyedb.dotnet.edb_core.stackup.Stackup.layers", false]], "layers_by_id (pyedb.dotnet.edb_core.stackup.stackup property)": [[689, "pyedb.dotnet.edb_core.stackup.Stackup.layers_by_id", false]], "layout_defeaturing() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[529, "pyedb.dotnet.edb_core.hfss.EdbHfss.layout_defeaturing", false]], "layout_instance (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[31, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.layout_instance", false]], "layoutvalidation (class in pyedb.dotnet.edb_core.layout_validation)": [[564, "pyedb.dotnet.edb_core.layout_validation.LayoutValidation", false]], "length (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[331, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.length", false]], "limits() (pyedb.dotnet.edb_core.stackup.stackup method)": [[690, "pyedb.dotnet.edb_core.stackup.Stackup.limits", false]], "load() (pyedb.dotnet.edb_core.stackup.stackup method)": [[691, "pyedb.dotnet.edb_core.stackup.Stackup.load", false]], "load_amat() (pyedb.dotnet.edb_core.materials.materials method)": [[580, "pyedb.dotnet.edb_core.materials.Materials.load_amat", false]], "load_material() (pyedb.dotnet.edb_core.materials.materials method)": [[581, "pyedb.dotnet.edb_core.materials.Materials.load_material", false]], "location (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[32, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[278, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.location", false]], "location (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[313, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.location", false]], "lock_file (pyedb.siwave.siwave property)": [[716, "pyedb.siwave.Siwave.lock_file", false]], "longest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[360, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.longest_arc", false]], "lower_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[33, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.lower_elevation", false]], "lower_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[236, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.lower_elevation", false]], "magnitude (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[279, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.magnitude", false]], "material (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[204, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.material", false]], "material_property_to_id() (pyedb.dotnet.edb_core.materials.materials method)": [[582, "pyedb.dotnet.edb_core.materials.Materials.material_property_to_id", false]], "materials (class in pyedb.dotnet.edb_core.materials)": [[570, "pyedb.dotnet.edb_core.materials.Materials", false]], "materials (pyedb.dotnet.edb_core.materials.materials property)": [[583, "pyedb.dotnet.edb_core.materials.Materials.materials", false]], "max_arc_points (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[399, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_arc_points", false]], "max_mag_delta_s (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[400, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_mag_delta_s", false]], "max_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[401, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_num_passes", false]], "max_suf_dev (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[402, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.max_suf_dev", false]], "merge_nets_polygons() (pyedb.dotnet.edb_core.nets.edbnets method)": [[602, "pyedb.dotnet.edb_core.nets.EdbNets.merge_nets_polygons", false]], "merge_via_along_lines() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[630, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.merge_via_along_lines", false]], "mesh_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[403, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_freq", false]], "mesh_sizefactor (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[404, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.mesh_sizefactor", false]], "metal_volume (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[237, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.metal_volume", false]], "mid_point (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[332, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.mid_point", false]], "min_num_passes (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[405, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_num_passes", false]], "min_pad_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[406, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_pad_area_to_mesh", false]], "min_plane_area_to_mesh (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[407, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_plane_area_to_mesh", false]], "min_void_area (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[408, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.min_void_area", false]], "minimum_void_surface (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[409, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.minimum_void_surface", false]], "mode (pyedb.dotnet.edb_core.stackup.stackup property)": [[692, "pyedb.dotnet.edb_core.stackup.Stackup.mode", false]], "model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[34, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model", false]], "model_type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[35, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.model_type", false]], "name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[36, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.name", false]], "name (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[111, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.name", false]], "name (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[121, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[135, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[147, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[158, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[172, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[205, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.name", false]], "name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[238, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[280, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[314, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.name", false]], "name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[361, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.name", false]], "name (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[499, "pyedb.dotnet.edb_core.edb_data.variables.Variable.name", false]], "negative_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[136, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.negative_net", false]], "net (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[37, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.net", false]], "net (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[239, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[281, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[315, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net", false]], "net (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[362, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net", false]], "net_name (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[240, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[282, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[316, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.net_name", false]], "net_name (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[363, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.net_name", false]], "netlist (pyedb.dotnet.edb_core.nets.edbnets property)": [[603, "pyedb.dotnet.edb_core.nets.EdbNets.netlist", false]], "netlist_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[38, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.netlist_model", false]], "nets (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[39, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[148, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.nets", false]], "nets (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetclassdata property)": [[159, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData.nets", false]], "nets (pyedb.dotnet.edb_core.nets.edbnets property)": [[604, "pyedb.dotnet.edb_core.nets.EdbNets.nets", false]], "nets_by_components (pyedb.dotnet.edb_core.nets.edbnets property)": [[605, "pyedb.dotnet.edb_core.nets.EdbNets.nets_by_components", false]], "non_stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[693, "pyedb.dotnet.edb_core.stackup.Stackup.non_stackup_layers", false]], "nport_comp_definition (pyedb.dotnet.edb_core.components.components property)": [[101, "pyedb.dotnet.edb_core.components.Components.nport_comp_definition", false]], "num_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[694, "pyedb.dotnet.edb_core.stackup.Stackup.num_layers", false]], "numpins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[40, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.numpins", false]], "object_instance (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[241, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.object_instance", false]], "offset_x (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[180, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_x", false]], "offset_y (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[181, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.offset_y", false]], "open_edb_after_build (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[381, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.open_edb_after_build", false]], "open_project() (pyedb.siwave.siwave method)": [[717, "pyedb.siwave.Siwave.open_project", false]], "oproject (pyedb.siwave.siwave property)": [[718, "pyedb.siwave.Siwave.oproject", false]], "others (pyedb.dotnet.edb_core.components.components property)": [[65, "pyedb.dotnet.edb_core.components.Components.Others", false]], "output_aedb (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[448, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.output_aedb", false]], "package_def (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[41, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.package_def", false]], "pad_type (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[631, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pad_type", false]], "padstack_definition (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[242, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.padstack_definition", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[173, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.padstack_instances", false]], "padstack_instances (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[206, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.padstack_instances", false]], "parameters (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[182, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters", false]], "parameters_values (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[183, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values", false]], "parameters_values_string (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[184, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.parameters_values_string", false]], "parametrize_polygon() (pyedb.dotnet.edb_core.layout.edblayout method)": [[553, "pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_polygon", false]], "parametrize_position() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[243, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position", false]], "parametrize_trace_width() (pyedb.dotnet.edb_core.layout.edblayout method)": [[554, "pyedb.dotnet.edb_core.layout.EdbLayout.parametrize_trace_width", false]], "part_name (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[42, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.part_name", false]], "partname (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[43, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.partname", false]], "passivity_tolerance (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[410, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.passivity_tolerance", false]], "paths (pyedb.dotnet.edb_core.layout.edblayout property)": [[555, "pyedb.dotnet.edb_core.layout.EdbLayout.paths", false]], "pec_launch_width (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[317, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.pec_launch_width", false]], "percentage_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[411, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.percentage_error_z0", false]], "phase (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[283, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.phase", false]], "pin (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[244, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin", false]], "pin_groups (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[667, "pyedb.dotnet.edb_core.siwave.EdbSiwave.pin_groups", false]], "pin_number (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[245, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pin_number", false]], "pingroups (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[246, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.pingroups", false]], "pingroups (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[632, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pingroups", false]], "pinlist (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[44, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pinlist", false]], "pins (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[45, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.pins", false]], "pins (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[633, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.pins", false]], "place() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[634, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.place", false]], "place_a3dcomp_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[695, "pyedb.dotnet.edb_core.stackup.Stackup.place_a3dcomp_3d_placement", false]], "place_in_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[696, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout", false]], "place_in_layout_3d_placement() (pyedb.dotnet.edb_core.stackup.stackup method)": [[697, "pyedb.dotnet.edb_core.stackup.Stackup.place_in_layout_3d_placement", false]], "place_instance() (pyedb.dotnet.edb_core.stackup.stackup method)": [[698, "pyedb.dotnet.edb_core.stackup.Stackup.place_instance", false]], "place_voltage_probe() (pyedb.dotnet.edb_core.siwave.edbsiwave method)": [[668, "pyedb.dotnet.edb_core.siwave.EdbSiwave.place_voltage_probe", false]], "placement_layer (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[46, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.placement_layer", false]], "placement_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[247, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.placement_layer", false]], "plot() (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata method)": [[174, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.plot", false]], "plot() (pyedb.dotnet.edb_core.nets.edbnets method)": [[606, "pyedb.dotnet.edb_core.nets.EdbNets.plot", false]], "plot() (pyedb.dotnet.edb_core.stackup.stackup method)": [[699, "pyedb.dotnet.edb_core.stackup.Stackup.plot", false]], "points (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[333, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points", false]], "points_raw (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[334, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.points_raw", false]], "polygon_data (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[185, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.polygon_data", false]], "polygons (pyedb.dotnet.edb_core.layout.edblayout property)": [[556, "pyedb.dotnet.edb_core.layout.EdbLayout.polygons", false]], "polygons_by_layer (pyedb.dotnet.edb_core.layout.edblayout property)": [[557, "pyedb.dotnet.edb_core.layout.EdbLayout.polygons_by_layer", false]], "position (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[248, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.position", false]], "positive_net (pyedb.dotnet.edb_core.edb_data.nets_data.edbdifferentialpairdata property)": [[137, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData.positive_net", false]], "power (pyedb.dotnet.edb_core.nets.edbnets property)": [[607, "pyedb.dotnet.edb_core.nets.EdbNets.power", false]], "power_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[449, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.power_nets", false]], "primitives (pyedb.dotnet.edb_core.edb_data.nets_data.edbnetsdata property)": [[175, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData.primitives", false]], "primitives (pyedb.dotnet.edb_core.layout.edblayout property)": [[558, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives", false]], "primitives_by_layer (pyedb.dotnet.edb_core.layout.edblayout property)": [[559, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_layer", false]], "primitives_by_net (pyedb.dotnet.edb_core.layout.edblayout property)": [[560, "pyedb.dotnet.edb_core.layout.EdbLayout.primitives_by_net", false]], "probes (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[530, "pyedb.dotnet.edb_core.hfss.EdbHfss.probes", false]], "probes (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[669, "pyedb.dotnet.edb_core.siwave.EdbSiwave.probes", false]], "process_padstack_definitions (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[412, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.process_padstack_definitions", false]], "project_file (pyedb.siwave.siwave property)": [[719, "pyedb.siwave.Siwave.project_file", false]], "project_name (pyedb.siwave.siwave property)": [[720, "pyedb.siwave.Siwave.project_name", false]], "project_path (pyedb.siwave.siwave property)": [[721, "pyedb.siwave.Siwave.project_path", false]], "pyaedt_dir (pyedb.siwave.siwave property)": [[722, "pyedb.siwave.Siwave.pyaedt_dir", false]], "quit_application() (pyedb.siwave.siwave method)": [[723, "pyedb.siwave.Siwave.quit_application", false]], "radiation_box (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[413, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.radiation_box", false]], "radius (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[335, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.radius", false]], "read_materials() (pyedb.dotnet.edb_core.materials.materials method)": [[584, "pyedb.dotnet.edb_core.materials.Materials.read_materials", false]], "read_syslib_material() (pyedb.dotnet.edb_core.materials.materials method)": [[585, "pyedb.dotnet.edb_core.materials.Materials.read_syslib_material", false]], "rectangles (pyedb.dotnet.edb_core.layout.edblayout property)": [[561, "pyedb.dotnet.edb_core.layout.EdbLayout.rectangles", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[284, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.ref_terminal", false]], "ref_terminal (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[318, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.ref_terminal", false]], "refdes (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[47, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.refdes", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[285, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_net_name", false]], "reference_net_name (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[319, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_net_name", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[286, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.reference_object", false]], "reference_object (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[320, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.reference_object", false]], "refresh_components() (pyedb.dotnet.edb_core.components.components method)": [[102, "pyedb.dotnet.edb_core.components.Components.refresh_components", false]], "refresh_layer_collection() (pyedb.dotnet.edb_core.stackup.stackup method)": [[700, "pyedb.dotnet.edb_core.stackup.Stackup.refresh_layer_collection", false]], "relative_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[414, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.relative_error", false]], "remove_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[701, "pyedb.dotnet.edb_core.stackup.Stackup.remove_layer", false]], "remove_pads_from_padstack() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[635, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack", false]], "renormalize (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[287, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize", false]], "renormalize_z0 (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[288, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.renormalize_z0", false]], "replace_rlc_by_gap_boundaries() (pyedb.dotnet.edb_core.components.components method)": [[103, "pyedb.dotnet.edb_core.components.Components.replace_rlc_by_gap_boundaries", false]], "res_value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[48, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.res_value", false]], "residual_copper_area_per_layer() (pyedb.dotnet.edb_core.stackup.stackup method)": [[702, "pyedb.dotnet.edb_core.stackup.Stackup.residual_copper_area_per_layer", false]], "resistors (pyedb.dotnet.edb_core.components.components property)": [[104, "pyedb.dotnet.edb_core.components.Components.resistors", false]], "results_directory (pyedb.siwave.siwave property)": [[724, "pyedb.siwave.Siwave.results_directory", false]], "return_current_distribution (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[415, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.return_current_distribution", false]], "rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[149, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.rlc", false]], "rlc_values (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[49, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rlc_values", false]], "rotation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[50, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[186, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.rotation", false]], "rotation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[249, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.rotation", false]], "run_dc_simulation() (pyedb.siwave.siwave method)": [[725, "pyedb.siwave.Siwave.run_dc_simulation", false]], "run_icepak_simulation() (pyedb.siwave.siwave method)": [[726, "pyedb.siwave.Siwave.run_icepak_simulation", false]], "s_param_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[51, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.s_param_model", false]], "save_project() (pyedb.siwave.siwave method)": [[727, "pyedb.siwave.Siwave.save_project", false]], "serial_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[150, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.serial_rlc", false]], "set_all_antipad_value() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[636, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_all_antipad_value", false]], "set_backdrill_bottom() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[250, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom", false]], "set_backdrill_top() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance method)": [[251, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top", false]], "set_coax_port_attributes() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[531, "pyedb.dotnet.edb_core.hfss.EdbHfss.set_coax_port_attributes", false]], "set_component_model() (pyedb.dotnet.edb_core.components.components method)": [[105, "pyedb.dotnet.edb_core.components.Components.set_component_model", false]], "set_component_rlc() (pyedb.dotnet.edb_core.components.components method)": [[106, "pyedb.dotnet.edb_core.components.Components.set_component_rlc", false]], "set_layer_clone() (pyedb.dotnet.edb_core.stackup.stackup method)": [[703, "pyedb.dotnet.edb_core.stackup.Stackup.set_layer_clone", false]], "set_pad_property() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[637, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_pad_property", false]], "set_solder_ball() (pyedb.dotnet.edb_core.components.components method)": [[107, "pyedb.dotnet.edb_core.components.Components.set_solder_ball", false]], "set_solderball() (pyedb.dotnet.edb_core.padstack.edbpadstacks method)": [[638, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.set_solderball", false]], "setup_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[382, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.setup_name", false]], "shape (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadproperties property)": [[187, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties.shape", false]], "shape_to_polygon_data() (pyedb.dotnet.edb_core.layout.edblayout method)": [[562, "pyedb.dotnet.edb_core.layout.EdbLayout.shape_to_polygon_data", false]], "short_component_pins() (pyedb.dotnet.edb_core.components.components method)": [[108, "pyedb.dotnet.edb_core.components.Components.short_component_pins", false]], "shortest_arc (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[364, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.shortest_arc", false]], "shunt_rlc (pyedb.dotnet.edb_core.edb_data.nets_data.edbextendednetdata property)": [[151, "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData.shunt_rlc", false]], "signal (pyedb.dotnet.edb_core.nets.edbnets property)": [[608, "pyedb.dotnet.edb_core.nets.EdbNets.signal", false]], "signal_layer_etching_instances (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[450, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layer_etching_instances", false]], "signal_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[704, "pyedb.dotnet.edb_core.stackup.Stackup.signal_layers", false]], "signal_layers_properties (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[451, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_layers_properties", false]], "signal_nets (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[452, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.signal_nets", false]], "simulationconfiguration (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[369, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration", false]], "simulationconfigurationac (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[384, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc", false]], "simulationconfigurationbatch (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[428, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch", false]], "simulationconfigurationdc (class in pyedb.dotnet.edb_core.edb_data.simulation_configuration)": [[464, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc", false]], "siwave (class in pyedb.siwave)": [[708, "pyedb.siwave.Siwave", false]], "snap_length_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[416, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.snap_length_threshold", false]], "solder_ball_diameter (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[52, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_diameter", false]], "solder_ball_height (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[53, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_height", false]], "solder_ball_placement (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[54, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_placement", false]], "solder_ball_shape (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[55, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.solder_ball_shape", false]], "solver_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfiguration property)": [[383, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration.solver_type", false]], "sources (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[453, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.sources", false]], "sources (pyedb.dotnet.edb_core.hfss.edbhfss property)": [[532, "pyedb.dotnet.edb_core.hfss.EdbHfss.sources", false]], "sources (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[670, "pyedb.dotnet.edb_core.siwave.EdbSiwave.sources", false]], "spice_model (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[56, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.spice_model", false]], "split_to_microvias() (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack method)": [[207, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias", false]], "src_dir (pyedb.siwave.siwave property)": [[728, "pyedb.siwave.Siwave.src_dir", false]], "stackup (class in pyedb.dotnet.edb_core.stackup)": [[672, "pyedb.dotnet.edb_core.stackup.Stackup", false]], "stackup_layers (pyedb.dotnet.edb_core.stackup.stackup property)": [[705, "pyedb.dotnet.edb_core.stackup.Stackup.stackup_layers", false]], "start (pyedb.dotnet.edb_core.edb_data.primitives_data.edbarcs property)": [[336, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs.start", false]], "start_azimuth (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[417, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_azimuth", false]], "start_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[418, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.start_freq", false]], "start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[252, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.start_layer", false]], "step_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[419, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.step_freq", false]], "stop_freq (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[420, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.stop_freq", false]], "stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[253, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.stop_layer", false]], "subtract() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[365, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.subtract", false]], "sweep_interpolating (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[421, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_interpolating", false]], "sweep_name (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[422, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_name", false]], "sweep_type (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[423, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.sweep_type", false]], "syslib (pyedb.dotnet.edb_core.materials.materials property)": [[586, "pyedb.dotnet.edb_core.materials.Materials.syslib", false]], "terminal (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[254, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.terminal", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[289, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.terminal_type", false]], "terminal_type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[321, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.terminal_type", false]], "thickness (pyedb.dotnet.edb_core.stackup.stackup property)": [[706, "pyedb.dotnet.edb_core.stackup.Stackup.thickness", false]], "tofloat (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[112, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tofloat", false]], "top_bottom_association (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[57, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.top_bottom_association", false]], "top_bottom_association (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[255, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.top_bottom_association", false]], "tostring (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[113, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.tostring", false]], "transparency (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[122, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.transparency", false]], "trim_component_reference_size() (pyedb.dotnet.edb_core.hfss.edbhfss method)": [[533, "pyedb.dotnet.edb_core.hfss.EdbHfss.trim_component_reference_size", false]], "trim_reference_size (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[454, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.trim_reference_size", false]], "truncate_airbox_at_ground (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[455, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.truncate_airbox_at_ground", false]], "type (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[58, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.type", false]], "type (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass property)": [[123, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.type", false]], "type (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[256, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.gapport property)": [[290, "pyedb.dotnet.edb_core.edb_data.ports.GapPort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[322, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.type", false]], "type (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[366, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.type", false]], "unite() (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives method)": [[367, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.unite", false]], "unite_polygons_on_layer() (pyedb.dotnet.edb_core.layout.edblayout method)": [[563, "pyedb.dotnet.edb_core.layout.EdbLayout.unite_polygons_on_layer", false]], "update() (pyedb.dotnet.edb_core.edb_data.layer_data.layeredbclass method)": [[124, "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass.update", false]], "update_layout() (pyedb.dotnet.edb_core.stackup.stackup method)": [[707, "pyedb.dotnet.edb_core.stackup.Stackup.update_layout", false]], "update_material() (pyedb.dotnet.edb_core.materials.materials method)": [[587, "pyedb.dotnet.edb_core.materials.Materials.update_material", false]], "update_rlc_from_bom() (pyedb.dotnet.edb_core.components.components method)": [[109, "pyedb.dotnet.edb_core.components.Components.update_rlc_from_bom", false]], "upper_elevation (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[59, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.upper_elevation", false]], "upper_elevation (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstackinstance property)": [[257, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance.upper_elevation", false]], "use_airbox_horizontal_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[456, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_horizontal_extent_multiple", false]], "use_airbox_negative_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[457, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_negative_vertical_extent_multiple", false]], "use_airbox_positive_vertical_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[458, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_airbox_positive_vertical_extent_multiple", false]], "use_arc_to_chord_error (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[424, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_arc_to_chord_error", false]], "use_default_coax_port_radial_extension (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[459, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_coax_port_radial_extension", false]], "use_default_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[460, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_default_cutout", false]], "use_dielectric_extent_multiple (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[461, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_dielectric_extent_multiple", false]], "use_error_z0 (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[425, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_error_z0", false]], "use_pyaedt_cutout (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[462, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_pyaedt_cutout", false]], "use_q3d_for_dc (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[426, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.use_q3d_for_dc", false]], "use_radiation_boundary (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationbatch property)": [[463, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch.use_radiation_boundary", false]], "use_s_parameter_model() (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent method)": [[60, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.use_s_parameter_model", false]], "value (pyedb.dotnet.edb_core.cell.hierarchy.component.edbcomponent property)": [[61, "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent.value", false]], "value (pyedb.dotnet.edb_core.edb_data.edbvalue.edbvalue property)": [[114, "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue.value", false]], "value (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[500, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value", false]], "value_object (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[501, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_object", false]], "value_string (pyedb.dotnet.edb_core.edb_data.variables.variable property)": [[502, "pyedb.dotnet.edb_core.edb_data.variables.Variable.value_string", false]], "variable (class in pyedb.dotnet.edb_core.edb_data.variables)": [[495, "pyedb.dotnet.edb_core.edb_data.variables.Variable", false]], "version_keys (pyedb.siwave.siwave property)": [[729, "pyedb.siwave.Siwave.version_keys", false]], "vertical_extent_factor (pyedb.dotnet.edb_core.edb_data.ports.waveport property)": [[323, "pyedb.dotnet.edb_core.edb_data.ports.WavePort.vertical_extent_factor", false]], "via_layers (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[208, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_layers", false]], "via_start_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[209, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_start_layer", false]], "via_stop_layer (pyedb.dotnet.edb_core.edb_data.padstacks_data.edbpadstack property)": [[210, "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack.via_stop_layer", false]], "vias (pyedb.dotnet.edb_core.padstack.edbpadstacks property)": [[639, "pyedb.dotnet.edb_core.padstack.EdbPadstacks.vias", false]], "voids (pyedb.dotnet.edb_core.edb_data.primitives_data.edbprimitives property)": [[368, "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives.voids", false]], "voltage_regulator_modules (pyedb.dotnet.edb_core.siwave.edbsiwave property)": [[671, "pyedb.dotnet.edb_core.siwave.EdbSiwave.voltage_regulator_modules", false]], "waveport (class in pyedb.dotnet.edb_core.edb_data.ports)": [[291, "pyedb.dotnet.edb_core.edb_data.ports.WavePort", false]], "xtalk_threshold (pyedb.dotnet.edb_core.edb_data.simulation_configuration.simulationconfigurationac property)": [[427, "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc.xtalk_threshold", false]]}, "objects": {"pyedb.dotnet.edb_core.cell.hierarchy.component": [[10, 0, 1, "", "EDBComponent"]], "pyedb.dotnet.edb_core.cell.hierarchy.component.EDBComponent": [[11, 1, 1, "", "assign_rlc_model"], [12, 1, 1, "", "assign_s_param_model"], [13, 1, 1, "", "assign_spice_model"], [14, 2, 1, "", "bounding_box"], [15, 2, 1, "", "cap_value"], [16, 2, 1, "", "center"], [17, 2, 1, "", "component"], [18, 2, 1, "", "component_def"], [19, 2, 1, "", "component_instance"], [20, 2, 1, "", "component_property"], [21, 1, 1, "", "create_clearance_on_component"], [22, 1, 1, "", "create_package_def"], [23, 1, 1, "", "delete"], [24, 2, 1, "", "enabled"], [25, 2, 1, "", "id"], [26, 2, 1, "", "ind_value"], [27, 2, 1, "", "is_enabled"], [28, 2, 1, "", "is_null"], [29, 2, 1, "", "is_parallel_rlc"], [30, 2, 1, "", "is_top_mounted"], [31, 2, 1, "", "layout_instance"], [32, 2, 1, "", "location"], [33, 2, 1, "", "lower_elevation"], [34, 2, 1, "", "model"], [35, 2, 1, "", "model_type"], [36, 2, 1, "", "name"], [37, 2, 1, "", "net"], [38, 2, 1, "", "netlist_model"], [39, 2, 1, "", "nets"], [40, 2, 1, "", "numpins"], [41, 2, 1, "", "package_def"], [42, 2, 1, "", "part_name"], [43, 2, 1, "", "partname"], [44, 2, 1, "", "pinlist"], [45, 2, 1, "", "pins"], [46, 2, 1, "", "placement_layer"], [47, 2, 1, "", "refdes"], [48, 2, 1, "", "res_value"], [49, 2, 1, "", "rlc_values"], [50, 2, 1, "", "rotation"], [51, 2, 1, "", "s_param_model"], [52, 2, 1, "", "solder_ball_diameter"], [53, 2, 1, "", "solder_ball_height"], [54, 2, 1, "", "solder_ball_placement"], [55, 2, 1, "", "solder_ball_shape"], [56, 2, 1, "", "spice_model"], [57, 2, 1, "", "top_bottom_association"], [58, 2, 1, "", "type"], [59, 2, 1, "", "upper_elevation"], [60, 1, 1, "", "use_s_parameter_model"], [61, 2, 1, "", "value"]], "pyedb.dotnet.edb_core.components": [[62, 0, 1, "", "Components"]], "pyedb.dotnet.edb_core.components.Components": [[63, 2, 1, "", "ICs"], [64, 2, 1, "", "IOs"], [65, 2, 1, "", "Others"], [66, 1, 1, "", "add_port_on_rlc_component"], [67, 1, 1, "", "add_rlc_boundary"], [68, 2, 1, "", "capacitors"], [69, 2, 1, "", "components_by_partname"], [70, 1, 1, "", "create"], [71, 1, 1, "", "create_pingroup_from_pins"], [72, 1, 1, "", "create_port_on_component"], [73, 1, 1, "", "create_port_on_pins"], [74, 1, 1, "", "create_rlc_component"], [75, 1, 1, "", "create_source_on_component"], [76, 1, 1, "", "deactivate_rlc_component"], [77, 2, 1, "", "definitions"], [78, 1, 1, "", "delete"], [79, 1, 1, "", "delete_single_pin_rlc"], [80, 1, 1, "", "disable_rlc_component"], [81, 1, 1, "", "export_bom"], [82, 1, 1, "", "export_definition"], [83, 1, 1, "", "find_by_reference_designator"], [84, 1, 1, "", "get_aedt_pin_name"], [85, 1, 1, "", "get_component_by_name"], [86, 1, 1, "", "get_component_net_connection_info"], [87, 1, 1, "", "get_component_placement_vector"], [88, 1, 1, "", "get_components_from_nets"], [89, 1, 1, "", "get_nets_from_pin_list"], [90, 1, 1, "", "get_pin_from_component"], [91, 1, 1, "", "get_pin_position"], [92, 1, 1, "", "get_pins"], [93, 1, 1, "", "get_pins_name_from_net"], [94, 1, 1, "", "get_rats"], [95, 1, 1, "", "get_solder_ball_height"], [96, 1, 1, "", "get_through_resistor_list"], [97, 1, 1, "", "import_bom"], [98, 1, 1, "", "import_definition"], [99, 2, 1, "", "inductors"], [100, 2, 1, "", "instances"], [101, 2, 1, "", "nport_comp_definition"], [102, 1, 1, "", "refresh_components"], [103, 1, 1, "", "replace_rlc_by_gap_boundaries"], [104, 2, 1, "", "resistors"], [105, 1, 1, "", "set_component_model"], [106, 1, 1, "", "set_component_rlc"], [107, 1, 1, "", "set_solder_ball"], [108, 1, 1, "", "short_component_pins"], [109, 1, 1, "", "update_rlc_from_bom"]], "pyedb.dotnet.edb_core.edb_data.edbvalue": [[110, 0, 1, "", "EdbValue"]], "pyedb.dotnet.edb_core.edb_data.edbvalue.EdbValue": [[111, 2, 1, "", "name"], [112, 2, 1, "", "tofloat"], [113, 2, 1, "", "tostring"], [114, 2, 1, "", "value"]], "pyedb.dotnet.edb_core.edb_data.layer_data": [[115, 0, 1, "", "LayerEdbClass"]], "pyedb.dotnet.edb_core.edb_data.layer_data.LayerEdbClass": [[116, 2, 1, "", "color"], [117, 2, 1, "", "fill_material"], [118, 2, 1, "", "id"], [119, 2, 1, "", "is_stackup_layer"], [120, 2, 1, "", "is_via_layer"], [121, 2, 1, "", "name"], [122, 2, 1, "", "transparency"], [123, 2, 1, "", "type"], [124, 1, 1, "", "update"]], "pyedb.dotnet.edb_core.edb_data.nets_data": [[125, 0, 1, "", "EDBDifferentialPairData"], [138, 0, 1, "", "EDBExtendedNetData"], [152, 0, 1, "", "EDBNetClassData"], [160, 0, 1, "", "EDBNetsData"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBDifferentialPairData": [[126, 1, 1, "", "add_net"], [127, 2, 1, "", "api_class"], [128, 1, 1, "", "api_create"], [129, 2, 1, "", "api_negative_net"], [130, 2, 1, "", "api_nets"], [131, 2, 1, "", "api_positive_net"], [132, 1, 1, "", "delete"], [133, 1, 1, "", "find_by_name"], [134, 2, 1, "", "is_null"], [135, 2, 1, "", "name"], [136, 2, 1, "", "negative_net"], [137, 2, 1, "", "positive_net"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBExtendedNetData": [[139, 1, 1, "", "add_net"], [140, 2, 1, "", "api_class"], [141, 1, 1, "", "api_create"], [142, 2, 1, "", "api_nets"], [143, 2, 1, "", "components"], [144, 1, 1, "", "delete"], [145, 1, 1, "", "find_by_name"], [146, 2, 1, "", "is_null"], [147, 2, 1, "", "name"], [148, 2, 1, "", "nets"], [149, 2, 1, "", "rlc"], [150, 2, 1, "", "serial_rlc"], [151, 2, 1, "", "shunt_rlc"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetClassData": [[153, 1, 1, "", "add_net"], [154, 1, 1, "", "api_create"], [155, 2, 1, "", "api_nets"], [156, 1, 1, "", "delete"], [157, 2, 1, "", "is_null"], [158, 2, 1, "", "name"], [159, 2, 1, "", "nets"]], "pyedb.dotnet.edb_core.edb_data.nets_data.EDBNetsData": [[161, 2, 1, "", "api_class"], [162, 2, 1, "", "api_object"], [163, 2, 1, "", "components"], [164, 1, 1, "", "create"], [165, 1, 1, "", "delete"], [166, 2, 1, "", "extended_net"], [167, 1, 1, "", "find_by_name"], [168, 1, 1, "", "find_dc_short"], [169, 1, 1, "", "get_smallest_trace_width"], [170, 2, 1, "", "is_null"], [171, 2, 1, "", "is_power_ground"], [172, 2, 1, "", "name"], [173, 2, 1, "", "padstack_instances"], [174, 1, 1, "", "plot"], [175, 2, 1, "", "primitives"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data": [[176, 0, 1, "", "EDBPadProperties"], [188, 0, 1, "", "EDBPadstack"], [211, 0, 1, "", "EDBPadstackInstance"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadProperties": [[177, 2, 1, "", "geometry_type"], [178, 1, 1, "", "int_to_geometry_type"], [179, 1, 1, "", "int_to_pad_type"], [180, 2, 1, "", "offset_x"], [181, 2, 1, "", "offset_y"], [182, 2, 1, "", "parameters"], [183, 2, 1, "", "parameters_values"], [184, 2, 1, "", "parameters_values_string"], [185, 2, 1, "", "polygon_data"], [186, 2, 1, "", "rotation"], [187, 2, 1, "", "shape"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstack": [[189, 1, 1, "", "convert_to_3d_microvias"], [190, 2, 1, "", "hole_diameter"], [191, 2, 1, "", "hole_diameter_string"], [192, 2, 1, "", "hole_finished_size"], [193, 2, 1, "", "hole_offset_x"], [194, 2, 1, "", "hole_offset_y"], [195, 2, 1, "", "hole_parameters"], [196, 2, 1, "", "hole_params"], [197, 2, 1, "", "hole_plating_ratio"], [198, 2, 1, "", "hole_plating_thickness"], [199, 2, 1, "", "hole_properties"], [200, 2, 1, "", "hole_range"], [201, 2, 1, "", "hole_rotation"], [202, 2, 1, "", "hole_type"], [203, 2, 1, "", "instances"], [204, 2, 1, "", "material"], [205, 2, 1, "", "name"], [206, 2, 1, "", "padstack_instances"], [207, 1, 1, "", "split_to_microvias"], [208, 2, 1, "", "via_layers"], [209, 2, 1, "", "via_start_layer"], [210, 2, 1, "", "via_stop_layer"]], "pyedb.dotnet.edb_core.edb_data.padstacks_data.EDBPadstackInstance": [[212, 2, 1, "", "aedt_name"], [213, 2, 1, "", "backdrill_bottom"], [214, 2, 1, "", "backdrill_top"], [215, 2, 1, "", "bounding_box"], [216, 2, 1, "", "component"], [217, 1, 1, "", "create_coax_port"], [218, 1, 1, "", "create_port"], [219, 1, 1, "", "create_rectangle_in_pad"], [220, 1, 1, "", "create_terminal"], [221, 2, 1, "", "dcir_equipotential_region"], [222, 1, 1, "", "delete"], [223, 1, 1, "", "get_connected_object_id_set"], [224, 1, 1, "", "get_connected_objects"], [225, 1, 1, "", "get_reference_pins"], [226, 1, 1, "", "get_terminal"], [227, 2, 1, "", "id"], [228, 1, 1, "", "in_polygon"], [229, 1, 1, "", "in_voids"], [230, 2, 1, "", "is_null"], [231, 2, 1, "", "is_pin"], [232, 2, 1, "", "is_void"], [233, 2, 1, "", "layer"], [234, 2, 1, "", "layer_name"], [235, 2, 1, "", "layer_range_names"], [236, 2, 1, "", "lower_elevation"], [237, 2, 1, "", "metal_volume"], [238, 2, 1, "", "name"], [239, 2, 1, "", "net"], [240, 2, 1, "", "net_name"], [241, 2, 1, "", "object_instance"], [242, 2, 1, "", "padstack_definition"], [243, 1, 1, "", "parametrize_position"], [244, 2, 1, "", "pin"], [245, 2, 1, "", "pin_number"], [246, 2, 1, "", "pingroups"], [247, 2, 1, "", "placement_layer"], [248, 2, 1, "", "position"], [249, 2, 1, "", "rotation"], [250, 1, 1, "", "set_backdrill_bottom"], [251, 1, 1, "", "set_backdrill_top"], [252, 2, 1, "", "start_layer"], [253, 2, 1, "", "stop_layer"], [254, 2, 1, "", "terminal"], [255, 2, 1, "", "top_bottom_association"], [256, 2, 1, "", "type"], [257, 2, 1, "", "upper_elevation"]], "pyedb.dotnet.edb_core.edb_data.ports": [[258, 0, 1, "", "GapPort"], [291, 0, 1, "", "WavePort"]], "pyedb.dotnet.edb_core.edb_data.ports.GapPort": [[259, 2, 1, "", "boundary_type"], [260, 2, 1, "", "bounding_box"], [261, 2, 1, "", "component"], [262, 1, 1, "", "couple_ports"], [263, 2, 1, "", "deembed"], [264, 1, 1, "", "delete"], [265, 2, 1, "", "do_renormalize"], [266, 1, 1, "", "get_edge_terminal_reference_primitive"], [267, 1, 1, "", "get_pad_edge_terminal_reference_pin"], [268, 1, 1, "", "get_padstack_terminal_reference_pin"], [269, 1, 1, "", "get_pin_group_terminal_reference_pin"], [270, 1, 1, "", "get_point_terminal_reference_primitive"], [271, 2, 1, "", "hfss_type"], [272, 2, 1, "", "id"], [273, 2, 1, "", "impedance"], [274, 2, 1, "", "is_circuit_port"], [275, 2, 1, "", "is_null"], [276, 2, 1, "", "is_reference_terminal"], [277, 2, 1, "", "layer"], [278, 2, 1, "", "location"], [279, 2, 1, "", "magnitude"], [280, 2, 1, "", "name"], [281, 2, 1, "", "net"], [282, 2, 1, "", "net_name"], [283, 2, 1, "", "phase"], [284, 2, 1, "", "ref_terminal"], [285, 2, 1, "", "reference_net_name"], [286, 2, 1, "", "reference_object"], [287, 2, 1, "", "renormalize"], [288, 2, 1, "", "renormalize_z0"], [289, 2, 1, "", "terminal_type"], [290, 2, 1, "", "type"]], "pyedb.dotnet.edb_core.edb_data.ports.WavePort": [[292, 2, 1, "", "boundary_type"], [293, 2, 1, "", "bounding_box"], [294, 2, 1, "", "component"], [295, 1, 1, "", "couple_ports"], [296, 2, 1, "", "deembed"], [297, 2, 1, "", "deembed_length"], [298, 1, 1, "", "delete"], [299, 2, 1, "", "do_renormalize"], [300, 1, 1, "", "get_edge_terminal_reference_primitive"], [301, 1, 1, "", "get_pad_edge_terminal_reference_pin"], [302, 1, 1, "", "get_padstack_terminal_reference_pin"], [303, 1, 1, "", "get_pin_group_terminal_reference_pin"], [304, 1, 1, "", "get_point_terminal_reference_primitive"], [305, 2, 1, "", "hfss_type"], [306, 2, 1, "", "horizontal_extent_factor"], [307, 2, 1, "", "id"], [308, 2, 1, "", "impedance"], [309, 2, 1, "", "is_circuit_port"], [310, 2, 1, "", "is_null"], [311, 2, 1, "", "is_reference_terminal"], [312, 2, 1, "", "layer"], [313, 2, 1, "", "location"], [314, 2, 1, "", "name"], [315, 2, 1, "", "net"], [316, 2, 1, "", "net_name"], [317, 2, 1, "", "pec_launch_width"], [318, 2, 1, "", "ref_terminal"], [319, 2, 1, "", "reference_net_name"], [320, 2, 1, "", "reference_object"], [321, 2, 1, "", "terminal_type"], [322, 2, 1, "", "type"], [323, 2, 1, "", "vertical_extent_factor"]], "pyedb.dotnet.edb_core.edb_data.primitives_data": [[324, 0, 1, "", "EDBArcs"], [337, 0, 1, "", "EDBPrimitives"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBArcs": [[325, 2, 1, "", "center"], [326, 2, 1, "", "end"], [327, 2, 1, "", "height"], [328, 2, 1, "", "is_ccw"], [329, 2, 1, "", "is_point"], [330, 2, 1, "", "is_segment"], [331, 2, 1, "", "length"], [332, 2, 1, "", "mid_point"], [333, 2, 1, "", "points"], [334, 2, 1, "", "points_raw"], [335, 2, 1, "", "radius"], [336, 2, 1, "", "start"]], "pyedb.dotnet.edb_core.edb_data.primitives_data.EDBPrimitives": [[338, 2, 1, "", "arcs"], [339, 1, 1, "", "area"], [340, 2, 1, "", "bbox"], [341, 2, 1, "", "bounding_box"], [342, 2, 1, "", "center"], [343, 2, 1, "", "component"], [344, 1, 1, "", "convert_to_polygon"], [345, 1, 1, "", "delete"], [346, 1, 1, "", "get_closest_arc_midpoint"], [347, 1, 1, "", "get_closest_point"], [348, 1, 1, "", "get_connected_object_id_set"], [349, 1, 1, "", "get_connected_objects"], [350, 2, 1, "", "id"], [351, 1, 1, "", "intersect"], [352, 1, 1, "", "intersection_type"], [353, 1, 1, "", "is_arc"], [354, 1, 1, "", "is_intersecting"], [355, 2, 1, "", "is_negative"], [356, 2, 1, "", "is_null"], [357, 2, 1, "", "is_void"], [358, 2, 1, "", "layer"], [359, 2, 1, "", "layer_name"], [360, 2, 1, "", "longest_arc"], [361, 2, 1, "", "name"], [362, 2, 1, "", "net"], [363, 2, 1, "", "net_name"], [364, 2, 1, "", "shortest_arc"], [365, 1, 1, "", "subtract"], [366, 2, 1, "", "type"], [367, 1, 1, "", "unite"], [368, 2, 1, "", "voids"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration": [[369, 0, 1, "", "SimulationConfiguration"], [384, 0, 1, "", "SimulationConfigurationAc"], [428, 0, 1, "", "SimulationConfigurationBatch"], [464, 0, 1, "", "SimulationConfigurationDc"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfiguration": [[370, 2, 1, "", "ac_settings"], [371, 1, 1, "", "add_current_source"], [372, 1, 1, "", "add_dc_ground_source_term"], [373, 1, 1, "", "add_rlc"], [374, 1, 1, "", "add_voltage_source"], [375, 2, 1, "", "batch_solve_settings"], [376, 1, 1, "", "build_simulation_project"], [377, 2, 1, "", "dc_settings"], [378, 1, 1, "", "export_json"], [379, 2, 1, "", "filename"], [380, 1, 1, "", "import_json"], [381, 2, 1, "", "open_edb_after_build"], [382, 2, 1, "", "setup_name"], [383, 2, 1, "", "solver_type"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationAc": [[385, 2, 1, "", "adaptive_high_freq"], [386, 2, 1, "", "adaptive_low_freq"], [387, 2, 1, "", "adaptive_type"], [388, 2, 1, "", "arc_angle"], [389, 2, 1, "", "arc_to_chord_error"], [390, 2, 1, "", "basis_order"], [391, 2, 1, "", "decade_count"], [392, 2, 1, "", "defeature_abs_length"], [393, 2, 1, "", "defeature_layout"], [394, 2, 1, "", "do_lambda_refinement"], [395, 2, 1, "", "enforce_causality"], [396, 2, 1, "", "enforce_passivity"], [397, 2, 1, "", "ignore_non_functional_pads"], [398, 2, 1, "", "include_inter_plane_coupling"], [399, 2, 1, "", "max_arc_points"], [400, 2, 1, "", "max_mag_delta_s"], [401, 2, 1, "", "max_num_passes"], [402, 2, 1, "", "max_suf_dev"], [403, 2, 1, "", "mesh_freq"], [404, 2, 1, "", "mesh_sizefactor"], [405, 2, 1, "", "min_num_passes"], [406, 2, 1, "", "min_pad_area_to_mesh"], [407, 2, 1, "", "min_plane_area_to_mesh"], [408, 2, 1, "", "min_void_area"], [409, 2, 1, "", "minimum_void_surface"], [410, 2, 1, "", "passivity_tolerance"], [411, 2, 1, "", "percentage_error_z0"], [412, 2, 1, "", "process_padstack_definitions"], [413, 2, 1, "", "radiation_box"], [414, 2, 1, "", "relative_error"], [415, 2, 1, "", "return_current_distribution"], [416, 2, 1, "", "snap_length_threshold"], [417, 2, 1, "", "start_azimuth"], [418, 2, 1, "", "start_freq"], [419, 2, 1, "", "step_freq"], [420, 2, 1, "", "stop_freq"], [421, 2, 1, "", "sweep_interpolating"], [422, 2, 1, "", "sweep_name"], [423, 2, 1, "", "sweep_type"], [424, 2, 1, "", "use_arc_to_chord_error"], [425, 2, 1, "", "use_error_z0"], [426, 2, 1, "", "use_q3d_for_dc"], [427, 2, 1, "", "xtalk_threshold"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationBatch": [[429, 2, 1, "", "add_frequency_sweep"], [430, 1, 1, "", "add_source"], [431, 2, 1, "", "airbox_horizontal_extent"], [432, 2, 1, "", "airbox_negative_vertical_extent"], [433, 2, 1, "", "airbox_positive_vertical_extent"], [434, 2, 1, "", "coax_solder_ball_diameter"], [435, 2, 1, "", "components"], [436, 2, 1, "", "coplanar_instances"], [437, 2, 1, "", "cutout_subdesign_expansion"], [438, 2, 1, "", "cutout_subdesign_round_corner"], [439, 2, 1, "", "cutout_subdesign_type"], [440, 2, 1, "", "dielectric_extent"], [441, 2, 1, "", "do_cutout_subdesign"], [442, 2, 1, "", "do_pingroup"], [443, 2, 1, "", "etching_factor_instances"], [444, 2, 1, "", "generate_excitations"], [445, 2, 1, "", "generate_solder_balls"], [446, 2, 1, "", "honor_user_dielectric"], [447, 2, 1, "", "include_only_selected_nets"], [448, 2, 1, "", "output_aedb"], [449, 2, 1, "", "power_nets"], [450, 2, 1, "", "signal_layer_etching_instances"], [451, 2, 1, "", "signal_layers_properties"], [452, 2, 1, "", "signal_nets"], [453, 2, 1, "", "sources"], [454, 2, 1, "", "trim_reference_size"], [455, 2, 1, "", "truncate_airbox_at_ground"], [456, 2, 1, "", "use_airbox_horizontal_extent_multiple"], [457, 2, 1, "", "use_airbox_negative_vertical_extent_multiple"], [458, 2, 1, "", "use_airbox_positive_vertical_extent_multiple"], [459, 2, 1, "", "use_default_coax_port_radial_extension"], [460, 2, 1, "", "use_default_cutout"], [461, 2, 1, "", "use_dielectric_extent_multiple"], [462, 2, 1, "", "use_pyaedt_cutout"], [463, 2, 1, "", "use_radiation_boundary"]], "pyedb.dotnet.edb_core.edb_data.simulation_configuration.SimulationConfigurationDc": [[465, 2, 1, "", "dc_compute_inductance"], [466, 2, 1, "", "dc_contact_radius"], [467, 2, 1, "", "dc_error_energy"], [468, 2, 1, "", "dc_export_thermal_data"], [469, 2, 1, "", "dc_full_report_path"], [470, 2, 1, "", "dc_icepak_temp_file"], [471, 2, 1, "", "dc_import_thermal_data"], [472, 2, 1, "", "dc_max_init_mesh_edge_length"], [473, 2, 1, "", "dc_max_num_pass"], [474, 2, 1, "", "dc_mesh_bondwires"], [475, 2, 1, "", "dc_mesh_vias"], [476, 2, 1, "", "dc_min_num_pass"], [477, 2, 1, "", "dc_min_plane_area_to_mesh"], [478, 2, 1, "", "dc_min_void_area_to_mesh"], [479, 2, 1, "", "dc_num_bondwire_sides"], [480, 2, 1, "", "dc_num_via_sides"], [481, 2, 1, "", "dc_per_pin_res_path"], [482, 2, 1, "", "dc_per_pin_use_pin_format"], [483, 2, 1, "", "dc_percent_local_refinement"], [484, 2, 1, "", "dc_perform_adaptive_refinement"], [485, 2, 1, "", "dc_plot_jv"], [486, 2, 1, "", "dc_refine_bondwires"], [487, 2, 1, "", "dc_refine_vias"], [488, 2, 1, "", "dc_report_config_file"], [489, 2, 1, "", "dc_report_show_Active_devices"], [490, 2, 1, "", "dc_slide_position"], [491, 2, 1, "", "dc_source_terms_to_ground"], [492, 2, 1, "", "dc_use_dc_custom_settings"], [493, 2, 1, "", "dc_use_loop_res_for_per_pin"], [494, 2, 1, "", "dc_via_report_path"]], "pyedb.dotnet.edb_core.edb_data.variables": [[495, 0, 1, "", "Variable"]], "pyedb.dotnet.edb_core.edb_data.variables.Variable": [[496, 1, 1, "", "delete"], [497, 2, 1, "", "description"], [498, 2, 1, "", "is_parameter"], [499, 2, 1, "", "name"], [500, 2, 1, "", "value"], [501, 2, 1, "", "value_object"], [502, 2, 1, "", "value_string"]], "pyedb.dotnet.edb_core.hfss": [[503, 0, 1, "", "EdbHfss"]], "pyedb.dotnet.edb_core.hfss.EdbHfss": [[504, 1, 1, "", "configure_hfss_analysis_setup"], [505, 1, 1, "", "configure_hfss_extents"], [506, 1, 1, "", "create_bundle_wave_port"], [507, 1, 1, "", "create_circuit_port_on_net"], [508, 1, 1, "", "create_circuit_port_on_pin"], [509, 1, 1, "", "create_coax_port_on_component"], [510, 1, 1, "", "create_current_source_on_net"], [511, 1, 1, "", "create_current_source_on_pin"], [512, 1, 1, "", "create_differential_wave_port"], [513, 1, 1, "", "create_edge_port_horizontal"], [514, 1, 1, "", "create_edge_port_on_polygon"], [515, 1, 1, "", "create_edge_port_vertical"], [516, 1, 1, "", "create_hfss_ports_on_padstack"], [517, 1, 1, "", "create_lumped_port_on_net"], [518, 1, 1, "", "create_resistor_on_pin"], [519, 1, 1, "", "create_rlc_boundary_on_pins"], [520, 1, 1, "", "create_vertical_circuit_port_on_clipped_traces"], [521, 1, 1, "", "create_voltage_source_on_net"], [522, 1, 1, "", "create_voltage_source_on_pin"], [523, 1, 1, "", "create_wave_port"], [524, 2, 1, "", "excitations"], [525, 1, 1, "", "get_layout_bounding_box"], [526, 1, 1, "", "get_ports_number"], [527, 1, 1, "", "get_trace_width_for_traces_with_ports"], [528, 2, 1, "", "hfss_extent_info"], [529, 1, 1, "", "layout_defeaturing"], [530, 2, 1, "", "probes"], [531, 1, 1, "", "set_coax_port_attributes"], [532, 2, 1, "", "sources"], [533, 1, 1, "", "trim_component_reference_size"]], "pyedb.dotnet.edb_core.layout": [[534, 0, 1, "", "EdbLayout"]], "pyedb.dotnet.edb_core.layout.EdbLayout": [[535, 1, 1, "", "add_void"], [536, 2, 1, "", "circles"], [537, 1, 1, "", "create_circle"], [538, 1, 1, "", "create_polygon"], [539, 1, 1, "", "create_rectangle"], [540, 1, 1, "", "create_trace"], [541, 2, 1, "", "db"], [542, 1, 1, "", "defeature_polygon"], [543, 1, 1, "", "delete_primitives"], [544, 1, 1, "", "fix_circle_void_for_clipping"], [545, 1, 1, "", "get_layout_statistics"], [546, 1, 1, "", "get_polygon_bounding_box"], [547, 1, 1, "", "get_polygon_points"], [548, 1, 1, "", "get_polygons_by_layer"], [549, 1, 1, "", "get_primitive"], [550, 1, 1, "", "get_primitive_by_layer_and_point"], [551, 1, 1, "", "get_primitives"], [552, 2, 1, "", "layers"], [553, 1, 1, "", "parametrize_polygon"], [554, 1, 1, "", "parametrize_trace_width"], [555, 2, 1, "", "paths"], [556, 2, 1, "", "polygons"], [557, 2, 1, "", "polygons_by_layer"], [558, 2, 1, "", "primitives"], [559, 2, 1, "", "primitives_by_layer"], [560, 2, 1, "", "primitives_by_net"], [561, 2, 1, "", "rectangles"], [562, 1, 1, "", "shape_to_polygon_data"], [563, 1, 1, "", "unite_polygons_on_layer"]], "pyedb.dotnet.edb_core.layout_validation": [[564, 0, 1, "", "LayoutValidation"]], "pyedb.dotnet.edb_core.layout_validation.LayoutValidation": [[565, 1, 1, "", "dc_shorts"], [566, 1, 1, "", "disjoint_nets"], [567, 1, 1, "", "fix_self_intersections"], [568, 1, 1, "", "illegal_net_names"], [569, 1, 1, "", "illegal_rlc_values"]], "pyedb.dotnet.edb_core.materials": [[570, 0, 1, "", "Materials"]], "pyedb.dotnet.edb_core.materials.Materials": [[571, 1, 1, "", "add_conductor_material"], [572, 1, 1, "", "add_debye_material"], [573, 1, 1, "", "add_dielectric_material"], [574, 1, 1, "", "add_djordjevicsarkar_dielectric"], [575, 1, 1, "", "add_material"], [576, 1, 1, "", "add_multipole_debye_material"], [577, 1, 1, "", "delete_material"], [578, 1, 1, "", "duplicate"], [579, 1, 1, "", "iterate_materials_in_amat"], [580, 1, 1, "", "load_amat"], [581, 1, 1, "", "load_material"], [582, 1, 1, "", "material_property_to_id"], [583, 2, 1, "", "materials"], [584, 1, 1, "", "read_materials"], [585, 1, 1, "", "read_syslib_material"], [586, 2, 1, "", "syslib"], [587, 1, 1, "", "update_material"]], "pyedb.dotnet.edb_core.nets": [[588, 0, 1, "", "EdbNets"]], "pyedb.dotnet.edb_core.nets.EdbNets": [[589, 1, 1, "", "classify_nets"], [590, 2, 1, "", "components_by_nets"], [591, 2, 1, "", "db"], [592, 1, 1, "", "delete"], [593, 1, 1, "", "eligible_power_nets"], [594, 1, 1, "", "find_or_create_net"], [595, 1, 1, "", "generate_extended_nets"], [596, 1, 1, "", "get_dcconnected_net_list"], [597, 1, 1, "", "get_net_by_name"], [598, 1, 1, "", "get_plot_data"], [599, 1, 1, "", "get_powertree"], [600, 1, 1, "", "is_net_in_component"], [601, 1, 1, "", "is_power_gound_net"], [602, 1, 1, "", "merge_nets_polygons"], [603, 2, 1, "", "netlist"], [604, 2, 1, "", "nets"], [605, 2, 1, "", "nets_by_components"], [606, 1, 1, "", "plot"], [607, 2, 1, "", "power"], [608, 2, 1, "", "signal"]], "pyedb.dotnet.edb_core.padstack": [[609, 0, 1, "", "EdbPadstacks"]], "pyedb.dotnet.edb_core.padstack.EdbPadstacks": [[610, 1, 1, "", "check_and_fix_via_plating"], [611, 1, 1, "", "create"], [612, 1, 1, "", "create_circular_padstack"], [613, 1, 1, "", "create_coax_port"], [614, 2, 1, "", "db"], [615, 2, 1, "", "definitions"], [616, 1, 1, "", "delete_padstack_instances"], [617, 1, 1, "", "duplicate"], [618, 1, 1, "", "get_instances"], [619, 1, 1, "", "get_pad_parameters"], [620, 1, 1, "", "get_padstack_instance_by_net_name"], [621, 1, 1, "", "get_padstack_instances_intersecting_bounding_box"], [622, 1, 1, "", "get_padstack_instances_rtree_index"], [623, 1, 1, "", "get_pinlist_from_component_and_net"], [624, 1, 1, "", "get_reference_pins"], [625, 1, 1, "", "get_via_instance_from_net"], [626, 2, 1, "", "instances"], [627, 2, 1, "", "instances_by_name"], [628, 1, 1, "", "int_to_geometry_type"], [629, 1, 1, "", "int_to_pad_type"], [630, 1, 1, "", "merge_via_along_lines"], [631, 2, 1, "", "pad_type"], [632, 2, 1, "", "pingroups"], [633, 2, 1, "", "pins"], [634, 1, 1, "", "place"], [635, 1, 1, "", "remove_pads_from_padstack"], [636, 1, 1, "", "set_all_antipad_value"], [637, 1, 1, "", "set_pad_property"], [638, 1, 1, "", "set_solderball"], [639, 2, 1, "", "vias"]], "pyedb.dotnet.edb_core.siwave": [[640, 0, 1, "", "EdbSiwave"]], "pyedb.dotnet.edb_core.siwave.EdbSiwave": [[641, 1, 1, "", "add_siwave_dc_analysis"], [642, 1, 1, "", "add_siwave_syz_analysis"], [643, 1, 1, "", "configure_siw_analysis_setup"], [644, 1, 1, "", "create_circuit_port_on_net"], [645, 1, 1, "", "create_circuit_port_on_pin"], [646, 1, 1, "", "create_circuit_port_on_pin_group"], [647, 1, 1, "", "create_current_source_on_net"], [648, 1, 1, "", "create_current_source_on_pin"], [649, 1, 1, "", "create_current_source_on_pin_group"], [650, 1, 1, "", "create_dc_terminal"], [651, 1, 1, "", "create_exec_file"], [652, 1, 1, "", "create_impedance_crosstalk_scan"], [653, 1, 1, "", "create_pin_group"], [654, 1, 1, "", "create_pin_group_on_net"], [655, 1, 1, "", "create_pin_group_terminal"], [656, 1, 1, "", "create_port_between_pin_and_layer"], [657, 1, 1, "", "create_resistor_on_pin"], [658, 1, 1, "", "create_rlc_component"], [659, 1, 1, "", "create_voltage_probe_on_pin_group"], [660, 1, 1, "", "create_voltage_source_on_net"], [661, 1, 1, "", "create_voltage_source_on_pin"], [662, 1, 1, "", "create_voltage_source_on_pin_group"], [663, 1, 1, "", "create_vrm_module"], [664, 2, 1, "", "excitations"], [665, 2, 1, "", "icepak_component_file"], [666, 2, 1, "", "icepak_use_minimal_comp_defaults"], [667, 2, 1, "", "pin_groups"], [668, 1, 1, "", "place_voltage_probe"], [669, 2, 1, "", "probes"], [670, 2, 1, "", "sources"], [671, 2, 1, "", "voltage_regulator_modules"]], "pyedb.dotnet.edb_core.stackup": [[672, 0, 1, "", "Stackup"]], "pyedb.dotnet.edb_core.stackup.Stackup": [[673, 1, 1, "", "add_document_layer"], [674, 1, 1, "", "add_layer"], [675, 1, 1, "", "add_layer_above"], [676, 1, 1, "", "add_layer_below"], [677, 1, 1, "", "add_layer_bottom"], [678, 1, 1, "", "add_layer_top"], [679, 1, 1, "", "add_outline_layer"], [680, 1, 1, "", "adjust_solder_dielectrics"], [681, 2, 1, "", "all_layers"], [682, 1, 1, "", "create_symmetric_stackup"], [683, 2, 1, "", "dielectric_layers"], [684, 1, 1, "", "export"], [685, 1, 1, "", "flip_design"], [686, 1, 1, "", "get_layout_thickness"], [687, 2, 1, "", "layer_types"], [688, 2, 1, "", "layers"], [689, 2, 1, "", "layers_by_id"], [690, 1, 1, "", "limits"], [691, 1, 1, "", "load"], [692, 2, 1, "", "mode"], [693, 2, 1, "", "non_stackup_layers"], [694, 2, 1, "", "num_layers"], [695, 1, 1, "", "place_a3dcomp_3d_placement"], [696, 1, 1, "", "place_in_layout"], [697, 1, 1, "", "place_in_layout_3d_placement"], [698, 1, 1, "", "place_instance"], [699, 1, 1, "", "plot"], [700, 1, 1, "", "refresh_layer_collection"], [701, 1, 1, "", "remove_layer"], [702, 1, 1, "", "residual_copper_area_per_layer"], [703, 1, 1, "", "set_layer_clone"], [704, 2, 1, "", "signal_layers"], [705, 2, 1, "", "stackup_layers"], [706, 2, 1, "", "thickness"], [707, 1, 1, "", "update_layout"]], "pyedb.siwave": [[708, 0, 1, "", "Siwave"]], "pyedb.siwave.Siwave": [[709, 1, 1, "", "close_project"], [710, 2, 1, "", "current_version"], [711, 1, 1, "", "export_dc_simulation_report"], [712, 1, 1, "", "export_element_data"], [713, 1, 1, "", "export_icepak_project"], [714, 1, 1, "", "export_siwave_report"], [715, 2, 1, "", "icepak"], [716, 2, 1, "", "lock_file"], [717, 1, 1, "", "open_project"], [718, 2, 1, "", "oproject"], [719, 2, 1, "", "project_file"], [720, 2, 1, "", "project_name"], [721, 2, 1, "", "project_path"], [722, 2, 1, "", "pyaedt_dir"], [723, 1, 1, "", "quit_application"], [724, 2, 1, "", "results_directory"], [725, 1, 1, "", "run_dc_simulation"], [726, 1, 1, "", "run_icepak_simulation"], [727, 1, 1, "", "save_project"], [728, 2, 1, "", "src_dir"], [729, 2, 1, "", "version_keys"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property"}, "terms": {"": [12, 14, 51, 60, 117, 260, 293, 341, 400, 553, 623, 711, 714, 731, 733, 735, 736, 737, 740, 755, 756], "0": [6, 8, 21, 57, 72, 73, 97, 107, 108, 122, 178, 179, 189, 211, 217, 219, 225, 250, 251, 255, 324, 326, 327, 336, 337, 352, 369, 371, 372, 373, 374, 467, 483, 490, 491, 506, 508, 510, 511, 512, 514, 515, 518, 519, 521, 522, 523, 542, 546, 547, 566, 576, 593, 596, 610, 611, 619, 624, 628, 629, 630, 634, 635, 637, 638, 642, 645, 647, 648, 649, 656, 657, 658, 660, 661, 662, 663, 692, 695, 696, 697, 698, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 761, 763, 764, 765, 768, 769, 776, 777, 783, 786, 788, 790, 791], "00": [742, 753, 754, 763], "000": [737, 753, 754, 763], "0000001": 791, "0001": [21, 638], "0002": 791, "0005": 790, "001": [108, 369, 542, 596, 662, 764, 790], "0015": 734, "002": 745, "003": 736, "005": [225, 624, 630, 737], "00_edb_create_via": [743, 753, 763], "01": [8, 369, 737, 738, 765, 791], "016": [734, 735, 737, 738, 742, 748, 749, 753, 763], "017mm": [738, 748], "01_edb_exampl": [744, 753, 763], "01ghz": 750, "01mm": [506, 512, 515, 523], "02": [369, 742, 763, 790], "025": 576, "026": 576, "027": 576, "028": 576, "029": 576, "02_edb_to_ipc2581": [745, 753, 763], "03": [753, 763], "030": 576, "03_5g_antenna_exampl": [733, 742, 763], "03_5g_antenna_example_parametr": [734, 742, 763], "03_rename_nets_and_port": [746, 753, 763], "04": 790, "04_edb_parametrized_design": [735, 742, 763], "05": [742, 753, 763, 768, 790], "05_plot_net": [747, 753, 763], "05e": 768, "05mm": [733, 734, 737, 738, 743, 748], "06": 374, "06_advanced_edb": [748, 753, 763], "08": 742, "08_cpwg": [749, 753, 763], "09": 658, "09_configur": [736, 742, 763], "0_bom": 736, "0deg": [539, 734], "0ghz": 738, "0mm": [506, 512, 523, 539, 749, 751, 790], "0x00000251875f0520": 750, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 57, 72, 87, 96, 97, 255, 326, 327, 336, 352, 369, 371, 372, 373, 374, 490, 491, 506, 508, 510, 511, 512, 518, 522, 540, 576, 595, 642, 645, 647, 648, 649, 657, 658, 661, 662, 663, 692, 696, 730, 733, 734, 735, 736, 737, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 759, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 786, 788, 789, 791, 793], "10": [595, 642, 735, 737, 740, 748, 758, 760, 767, 776, 791], "100": [122, 369, 750], "1000": [174, 606, 734, 791], "1000000": [642, 659], "1000000000": 642, "1001": [733, 735], "100e": 743, "100hz": [8, 736], "100um": [682, 733, 734, 786], "101": 733, "108": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "10_gds_workflow": [750, 753, 763], "10e": [733, 734, 738, 743, 777, 786], "10e6": 764, "10ghz": [369, 740, 789, 791], "10mhz": [8, 369, 736, 739, 789], "10mm": [737, 777], "10nm": 750, "10um": 781, "11": [758, 769, 791], "111": [212, 750], "114": 734, "115": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "11_post_layout_parameter": [751, 753, 763], "11nf": 736, "12": [106, 738, 748, 768, 791], "120": [731, 756], "125": 763, "12_edb_sma_connector_on_board": [737, 742, 763], "13": [768, 769], "130": 734, "13_edb_create_compon": [738, 742, 763], "13e": [514, 777], "13mm": 738, "14": 763, "14_edb_create_parametrized_design": [739, 742, 763], "15": 189, "1500": 699, "15_ac_analysi": [740, 742, 763], "15deg": 791, "15e": 743, "15mm": [737, 738, 748], "15um": 786, "16": 219, "16_bottom": [751, 778, 791], "17": [514, 763, 777], "17um": 682, "180": [737, 748], "19": [225, 514, 624, 777], "1_comp_definit": 736, "1_top": [744, 747, 783, 786, 791], "1a": 663, "1cm": 765, "1e": [106, 369, 374, 658, 733, 734, 740, 743, 769, 783, 790, 791], "1e3": 790, "1e6": 642, "1e7": 783, "1e9": [576, 642], "1ghz": [737, 738, 740, 750, 791], "1khz": [737, 740, 791], "1mm": [369, 695, 697, 698, 735, 737, 738, 743, 748, 759, 777, 786, 793], "1um": 791, "1v0": [751, 768, 769, 774], "2": [57, 67, 72, 74, 87, 97, 103, 125, 138, 152, 160, 176, 188, 189, 192, 211, 219, 243, 255, 324, 337, 352, 369, 372, 423, 467, 483, 490, 491, 514, 534, 547, 576, 588, 609, 610, 640, 641, 642, 685, 692, 695, 696, 697, 698, 702, 733, 734, 735, 736, 737, 739, 748, 749, 750, 751, 769, 777, 791], "20": [483, 733, 749, 791], "200": 791, "2000": [174, 606, 699, 751, 791], "200um": [733, 734, 738, 781, 783, 786], "2021": [87, 125, 138, 152, 160, 176, 188, 211, 219, 324, 337, 534, 588, 609, 640, 641, 685, 695, 696, 697, 698, 702], "2022": [758, 760], "2023": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 730, 735, 736, 737, 738, 739, 740, 743, 744, 745, 747, 749, 758, 760], "2024": [7, 326, 327, 336, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 758, 759, 760, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "20e9": 764, "20ghz": [733, 734, 739], "20mm": [737, 749], "20um": [682, 783], "211": 750, "214": 750, "219": [750, 753, 763], "22": 777, "222": 750, "223": 750, "22pf": 109, "23": 777, "25": 777, "250um": 790, "255": [733, 735], "25mm": 749, "266": [736, 742, 763], "275um": 735, "28": 750, "29e": [733, 734], "29mm": 777, "2d": [174, 598, 606], "2e": [733, 734, 737, 738, 783], "2e9": 576, "2mm": [506, 512, 695, 697, 698, 735, 737, 738, 748, 791], "3": [72, 97, 108, 225, 352, 413, 506, 512, 514, 515, 521, 522, 523, 576, 593, 624, 630, 652, 660, 661, 699, 733, 734, 735, 736, 737, 738, 743, 744, 750, 758, 760, 777, 783, 786, 790, 791], "30": [369, 737, 748], "300": 734, "300um": [611, 612], "301": 776, "302": 767, "30mm": 735, "30um": [786, 790], "33": [369, 791], "331": 737, "35": 783, "350um": 786, "35e": 743, "35um": [674, 735], "3_10": 760, "3d": [66, 67, 103, 189, 369, 695, 697, 698, 735, 736, 739, 740, 746, 749, 755], "3dlayout": 613, "3e": [733, 734], "3e9": 576, "3mm": [735, 737, 738, 746, 748, 749, 793], "3v": 663, "4": [57, 72, 255, 352, 390, 576, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 783], "40": [730, 767], "400": 734, "400um": [611, 612, 786], "406": 753, "407": [740, 742, 763], "40e": 783, "40ghz": 369, "40um": 783, "422": [746, 747, 751, 753, 763], "424968329": [633, 639], "4321mm": 745, "437": [739, 742, 763], "438": [744, 753, 763], "453": [745, 753, 763], "45e": 743, "4e": [733, 734], "4mm": [369, 735, 749, 790], "5": [72, 506, 512, 515, 523, 576, 736, 737, 738, 740, 748, 791], "50": [73, 106, 507, 508, 511, 513, 514, 515, 518, 522, 523, 531, 644, 645, 646, 648, 656, 657, 661, 733, 774], "50000000": 371, "500um": 786, "50ghz": 734, "50mm": [506, 512, 523], "50um": 682, "52": 746, "53": 747, "54": 751, "547": [733, 742, 763], "55": [743, 744], "55mm": 777, "59": 735, "5e": [225, 624, 630, 733, 734, 743], "5e7": 369, "5e9": 576, "5g": [732, 741, 742, 763], "5ghz": [737, 738, 750, 791], "5mm": [369, 630, 733, 734, 735, 737, 738, 748, 749, 751], "5um": 791, "6": [3, 333, 369, 517, 525, 576, 630, 736, 738, 750, 783, 791], "60": 749, "600um": [611, 612], "60db": 427, "61": 740, "63": 745, "63e": [514, 777], "65e": [514, 777], "65mm": 786, "65um": 750, "665mm": 786, "67": [736, 769], "68": 739, "69": 748, "6e9": 576, "6ghz": [8, 736], "6mm": 735, "7": 750, "700um": 786, "719": 742, "72": 738, "73": 737, "75": 189, "78e": 768, "7e": 777, "7mm": [735, 738, 748], "8": [369, 733, 734, 742, 758, 777, 783, 791], "800um": 786, "81": 750, "84": 750, "9": [106, 108, 740, 753, 758], "90": 735, "9e": [733, 734], "A": [736, 737, 743, 748, 750, 754, 758], "At": 765, "For": [73, 109, 369, 514, 547, 731, 755, 756, 758, 760], "IT": 760, "If": [66, 72, 73, 76, 108, 168, 174, 189, 219, 238, 250, 251, 369, 547, 554, 565, 566, 567, 598, 606, 613, 621, 622, 625, 630, 635, 637, 641, 666, 684, 691, 695, 696, 697, 698, 699, 730, 732, 734, 748, 760], "In": [250, 251, 369, 598, 731, 732, 735, 736, 741, 750, 756, 758, 760], "It": [1, 7, 74, 108, 125, 138, 152, 160, 219, 286, 320, 324, 337, 369, 447, 507, 593, 644, 699, 731, 736, 750, 755, 756, 760], "Its": 755, "No": [57, 255, 638, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "Not": 594, "On": [746, 758, 760], "One": 592, "Or": 73, "The": [0, 3, 4, 11, 66, 67, 71, 72, 73, 76, 79, 81, 88, 90, 93, 96, 97, 105, 106, 107, 109, 117, 126, 139, 153, 189, 218, 219, 225, 228, 250, 251, 339, 369, 372, 384, 391, 400, 401, 403, 405, 410, 414, 419, 420, 422, 423, 425, 428, 437, 454, 460, 464, 466, 467, 477, 478, 481, 483, 488, 490, 494, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 537, 538, 539, 540, 542, 547, 553, 563, 594, 595, 596, 610, 611, 612, 613, 618, 620, 623, 624, 625, 630, 634, 637, 642, 644, 647, 648, 650, 651, 654, 656, 657, 660, 661, 666, 673, 674, 675, 676, 677, 678, 682, 684, 686, 690, 691, 695, 696, 697, 698, 699, 708, 709, 711, 712, 714, 717, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 748, 749, 752, 755, 756, 758, 759, 760, 761, 775], "There": [735, 744], "These": [0, 2, 4, 5, 6, 8, 9, 103, 369, 731, 756], "To": [84, 212, 369, 514, 731, 734, 740, 756, 758, 759, 760], "Will": [369, 447], "_": [613, 734, 740, 751, 778], "__init__": [733, 734], "_clr": 751, "_create_ground_plan": 748, "_dw": 751, "_hierarchi": 87, "_pedb": [72, 95, 211], "_renam": 746, "_test": 746, "_work": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "a0_n": [745, 793], "a0_n_r": 793, "a1": [70, 78, 80, 105, 107], "a12": [87, 696], "a14": [87, 696], "a1new": 70, "a27": [776, 778], "a28": 776, "a3dcomp": [695, 737], "a3dcomp_path": 695, "aaa111": 0, "about": [757, 762, 780], "abov": 675, "absolut": [379, 431, 432, 433, 440, 448, 456, 457, 458, 461, 716, 719, 721, 722, 724, 728, 791], "ac": [370, 384, 642, 651], "ac_set": [8, 736, 738], "accept": 533, "access": [7, 62, 258, 291, 495, 503, 534, 570, 588, 609, 640, 672, 730, 733, 736, 758, 760], "accord": [691, 760], "account": 237, "accur": 566, "accuraci": [369, 490, 517, 642, 791], "accuracy_level": 642, "across": [595, 755], "action": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "activ": [24, 72, 206, 287, 296, 351, 365, 367, 369, 376, 393, 394, 398, 412, 415, 416, 424, 429, 444, 446, 450, 455, 463, 465, 468, 471, 474, 475, 484, 485, 486, 487, 489, 492, 533, 663, 666, 708, 731, 756], "active_cel": [696, 697], "actual": [189, 207, 352, 354, 538, 641, 761], "ad": [126, 139, 153, 262, 295, 429, 630, 680, 691, 697, 698, 737, 750, 751, 793], "adapt": [369, 385, 386, 387, 401, 403, 405, 473, 476, 484, 791], "adapt_typ": 791, "adaptive_sampl": 791, "adaptive_set": 791, "adaptivefrequ": 733, "adaptivefrequencydata": [733, 735], "adaptiveset": [733, 735], "adaptivetyp": 387, "add": [67, 126, 139, 153, 371, 372, 373, 374, 421, 430, 535, 571, 572, 573, 574, 575, 576, 580, 611, 641, 642, 651, 673, 675, 676, 677, 678, 679, 731, 750, 756, 782, 789, 790, 791], "add_ac": 651, "add_adaptive_frequency_data": 791, "add_at_elev": 674, "add_compon": 750, "add_current_sourc": 369, "add_dc": 651, "add_dc_ground_source_term": 369, "add_default_lay": 611, "add_design_vari": [737, 738, 748, 793], "add_dielectric_materi": 737, "add_ext": 750, "add_frequency_sweep": [737, 740, 790, 791], "add_lay": [733, 734, 735, 737, 743, 781, 783, 786, 790], "add_length_mesh_oper": [737, 791], "add_materi": 783, "add_n_port_model": 60, "add_on_bottom": 674, "add_on_top": 674, "add_pin": 750, "add_port": 750, "add_project_vari": [735, 749, 793], "add_setup": 750, "add_siwave_ac_analysi": 641, "add_siwave_dc_analysi": [744, 789], "add_siwave_dc_analysis2": 641, "add_siwave_syz_analysi": 789, "add_skin_depth_mesh_oper": 791, "add_source_terminal_to_ground": 744, "add_sweep": [734, 750], "add_syz": 651, "add_void": [737, 749, 751], "add_voltage_sourc": [369, 371, 373], "addit": [732, 758], "addition": 755, "address": [369, 755], "adjust": [531, 680], "administr": 760, "advanc": [759, 791], "advanced_mesh_set": 791, "advis": 369, "aedb": [1, 76, 258, 291, 369, 448, 633, 639, 730, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 780, 783, 784, 785, 788, 789, 791, 793], "aedb_path": [733, 734, 735, 737, 738, 743, 748, 749], "aedt": [84, 176, 188, 211, 212, 238, 250, 251, 708, 710, 729, 731, 743, 744, 746, 747, 755, 756, 757, 758, 759, 760], "aedt_fil": 744, "aedt_vers": 739, "aedtresult": 724, "aedtroot": 758, "after": [369, 381, 547, 695, 700, 733, 734, 744, 750, 758], "air": [369, 431, 432, 433, 455, 456, 733, 734, 781, 786, 790], "air_box_horizontal_ext": 737, "air_box_negative_vertical_ext": 737, "air_box_positive_vertical_ext": 737, "air_lin": 674, "airbox": [369, 431, 432, 433, 457, 458, 734], "airbox_horizontal_ext": [369, 790], "airbox_negative_vertical_ext": [369, 790], "airbox_positive_vertical_ext": [369, 790], "aj6": 73, "algorithm": [108, 566, 567, 593], "align": [513, 697, 698], "all": [6, 7, 73, 79, 93, 100, 108, 168, 174, 189, 206, 223, 235, 348, 369, 384, 428, 442, 447, 464, 507, 524, 530, 532, 533, 554, 563, 564, 565, 566, 567, 590, 594, 595, 598, 602, 605, 606, 621, 622, 625, 626, 627, 630, 632, 633, 635, 636, 637, 639, 644, 664, 667, 669, 670, 671, 700, 730, 731, 733, 734, 736, 740, 748, 750, 755, 756, 758, 763, 783, 787, 788], "allow": [369, 734, 736, 755, 758, 760, 761, 771], "along": 630, "alreadi": [72, 613, 758], "also": [369, 447, 514, 695, 731, 733, 755, 756, 758, 759, 762], "altern": [90, 642], "although": 785, "am": [731, 756], "am4": 73, "am7": 73, "amat": [579, 580, 584, 585], "amat_fil": [579, 580, 584], "among": [256, 366], "amper": [371, 374], "amplitud": [371, 374], "an": [1, 15, 26, 29, 48, 61, 70, 74, 90, 106, 122, 178, 179, 333, 353, 369, 514, 516, 517, 520, 538, 579, 580, 584, 610, 625, 628, 629, 636, 651, 679, 696, 697, 713, 726, 731, 733, 734, 736, 737, 738, 739, 740, 744, 745, 746, 750, 755, 756, 757, 758, 760, 764, 766, 770, 775, 779, 784, 785, 792], "analysi": [7, 384, 428, 464, 504, 641, 642, 643, 732, 737, 741, 742, 752, 753, 763, 792], "analyz": [652, 733, 734, 735, 737, 740], "angl": [189, 388, 695, 696, 697, 698], "ani": [1, 229, 267, 301, 369, 514, 566, 582, 755, 757, 758, 760], "anlasyi": 736, "anoth": [352, 354, 553, 680, 696, 697, 698], "ansi": [127, 140, 161, 162, 241, 258, 291, 695, 731, 736, 739, 740, 744, 745, 747, 750, 751, 755, 756, 758, 759, 760, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "ansoft": [127, 140, 161, 162, 241, 258, 291], "ansys_fr4": 737, "ansys_hsd": 745, "ansys_vers": [764, 765, 775, 777, 778, 788, 791], "ansys_via": 737, "ansysem": [758, 760], "ansysem_root222": 758, "antenna": [732, 741, 742, 763], "anti": [610, 636, 787, 788], "anti_pad_diam": 735, "anti_pad_x_s": [611, 786], "anti_pad_y_s": [611, 786], "antipad": [611, 612, 637, 739], "antipad_param": 637, "antipad_polygon": 611, "antipad_rot": 637, "antipad_shap": [611, 637, 735, 786], "antipad_x_offset": 637, "antipad_y_offset": 637, "antipaddiam": [4, 611, 612, 733, 734, 735, 738, 748], "antipads_always_on": 737, "api": [0, 2, 3, 4, 7, 128, 129, 131, 132, 133, 134, 135, 141, 144, 145, 146, 147, 154, 156, 157, 158, 164, 165, 167, 170, 171, 172, 369, 732, 741, 752, 755, 759, 760, 761, 762], "api_object": 125, "app": [166, 324, 595, 730, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 759], "appdata": [736, 739, 740, 744, 745, 750], "appear": [731, 756], "appedb": [326, 327, 336, 751], "append": [735, 740, 745, 751], "appli": [21, 225, 369, 411, 441, 445, 448, 507, 544, 550, 621, 622, 624, 644, 695, 696, 697, 698, 734, 735, 736], "applic": [0, 3, 4, 107, 226, 369, 611, 723, 755], "approach": [733, 734], "approxim": [219, 791], "ar": [0, 2, 4, 5, 6, 8, 9, 67, 73, 74, 79, 93, 103, 105, 107, 109, 200, 266, 300, 369, 383, 423, 431, 432, 433, 440, 442, 444, 447, 456, 457, 458, 461, 513, 515, 520, 539, 540, 544, 562, 563, 595, 596, 598, 606, 610, 611, 621, 622, 630, 637, 642, 652, 666, 673, 674, 675, 676, 677, 678, 684, 691, 695, 730, 731, 733, 734, 735, 736, 740, 744, 748, 750, 755, 756, 758, 760, 765], "arang": [737, 748, 749], "arc": [6, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 346, 353, 360, 364, 388, 389, 392, 397, 399, 408, 412, 415, 424, 538, 547], "arc_angl": 791, "arc_height": 327, "arc_seg": 333, "arc_to_chord_error": 791, "architectur": 755, "area": [219, 406, 407, 408, 477, 478, 566, 593, 702, 758, 760], "argument": [611, 758], "around": [695, 755, 758], "arrai": [732, 741, 742, 763], "array_antenna": [733, 734], "array_length": [733, 734], "array_width": [733, 734], "ascii": 369, "aspect": [189, 791], "assembli": 674, "asset": 758, "assign": [11, 12, 13, 22, 35, 38, 51, 56, 71, 73, 105, 109, 218, 286, 320, 369, 372, 507, 509, 510, 514, 517, 521, 537, 589, 610, 636, 644, 647, 660, 755], "assign_radiation_boundary_to_object": 734, "associ": [57, 166, 255, 369, 443, 595, 736], "ast": 598, "at_bounding_box": 517, "attempt": [731, 756, 761], "attent": 756, "attribut": [10, 62, 110, 115, 125, 138, 152, 160, 176, 188, 211, 258, 291, 324, 337, 369, 384, 428, 464, 495, 503, 531, 534, 570, 587, 588, 609, 640, 672, 708], "auto": [72, 267, 301, 434], "auto_identify_sign": 740, "auto_parametrize_design": 739, "auto_reference_s": 107, "autom": [369, 755], "automat": [73, 107, 218, 509, 514, 731, 739, 740, 748, 756], "automated_via": 735, "avail": [53, 54, 369, 652, 736, 758, 760, 761], "avcc_1v3": [744, 747], "avoid": [369, 545], "axi": [180, 181, 193, 194, 537, 695], "azimuth": 417, "b1": 750, "backdril": [213, 214, 250, 251], "background": [711, 714], "background_color": 711, "balanc": 490, "ball": [52, 53, 54, 55, 72, 95, 107, 369, 434, 445, 613, 638, 680, 697, 698, 740], "balldiam": [638, 733, 734], "bar": [731, 756], "base": [72, 228, 369, 448, 529, 538, 540, 542, 553, 589, 630, 674, 675, 676, 708, 748, 765, 766, 791], "base_lay": [674, 735, 781, 783, 786, 790], "base_layer_nam": [675, 676], "basi": [369, 791], "basis_ord": 369, "basisord": [369, 390], "batch": [375, 428, 755], "batch_solve_set": [8, 736, 738], "bbox": 369, "becaus": [215, 734, 755, 761], "becom": 760, "been": [393, 517, 695, 745, 758], "befor": [517, 547, 613, 696, 697, 698, 709, 731, 733, 734, 745, 756, 757], "begin": [759, 777], "begin_on_upper_pad": [200, 611], "being": [109, 122, 760], "belong": [72, 88, 93, 159, 173, 175, 189, 206, 235, 246, 285, 319, 369, 507, 514, 598, 600, 606, 623, 633, 639, 644], "below": [409, 427, 610, 676, 731, 756], "benefit": 734, "best": [731, 755, 756, 758], "beta": 760, "better": 761, "between": [66, 73, 76, 87, 122, 352, 369, 514, 518, 538, 646, 649, 656, 657, 659, 662, 668, 740, 757, 770, 776, 779], "bga": [87, 696, 697, 698, 750], "binari": 760, "bkground_color": 714, "black": [731, 756], "blacken": [731, 756], "blank": 369, "block": 760, "board": 736, "bollean": 638, "bom": [81, 97, 109], "bom_fil": [81, 97, 109], "bond": [369, 486], "bondwir": [256, 366, 369, 474], "bool": [11, 21, 22, 27, 29, 30, 60, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 85, 87, 95, 97, 103, 105, 106, 107, 108, 109, 119, 120, 168, 174, 189, 218, 219, 221, 225, 226, 228, 231, 232, 250, 251, 328, 329, 330, 339, 344, 353, 354, 355, 357, 371, 373, 374, 376, 378, 380, 381, 393, 394, 395, 396, 398, 411, 416, 421, 424, 426, 429, 438, 441, 442, 444, 445, 446, 447, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 471, 474, 475, 482, 484, 485, 486, 487, 489, 492, 493, 496, 504, 505, 509, 516, 517, 519, 529, 531, 533, 538, 542, 543, 544, 545, 551, 553, 554, 563, 565, 566, 567, 580, 589, 595, 598, 600, 601, 602, 606, 610, 611, 613, 616, 624, 630, 634, 635, 636, 637, 638, 642, 643, 646, 649, 651, 658, 659, 662, 663, 674, 679, 680, 682, 684, 685, 690, 691, 695, 696, 697, 698, 699, 709, 711, 712, 713, 714, 717, 723, 726, 727], "boolean": [369, 393, 394, 395, 396, 397, 398, 411, 412, 415, 416, 421, 424, 426, 438, 441, 445, 446, 455, 459, 463, 465, 514, 517], "border": 520, "bot": 737, "bot_layer_obj": 749, "both": [5, 9, 369, 731, 735, 755, 756, 759, 760], "bottom": [30, 57, 189, 213, 250, 255, 598, 606, 612, 638, 677, 680, 691, 695, 696, 697, 698, 699, 735, 744, 749], "bound": [14, 21, 215, 228, 260, 293, 340, 341, 342, 369, 517, 525, 546, 621, 740, 772], "boundari": [66, 67, 73, 76, 103, 259, 292, 369, 463, 518, 519, 657, 770], "bounding_box": 621, "boundingbox": 413, "box": [14, 21, 215, 228, 260, 293, 340, 341, 342, 369, 413, 431, 432, 433, 455, 456, 505, 517, 525, 533, 546, 621, 772, 790], "brief": [757, 759], "broadband": [385, 386, 791], "bst_v3p3_s5": 166, "bug": [544, 731, 756, 760], "build": [369, 376, 381, 383, 411, 429, 441, 444, 448, 755, 780, 785, 790], "build_simulation_project": [8, 369, 736, 738, 739, 764, 790], "bullet": [611, 637, 735], "bump": [697, 698], "bundl": [262, 295, 506], "bundlewaveport": [262, 295], "bypass": 595, "c": [60, 76, 369, 378, 380, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 761], "c1": [0, 736], "c100": 109, "c100hn140": 747, "c200": 60, "c35": 747, "c380": [736, 744], "c_file_in": 750, "c_map": 750, "c_valu": [70, 74, 373, 658, 769], "cach": 758, "calcul": [593, 666, 734], "call": [0, 1, 2, 3, 4, 5, 7, 9, 73, 250, 251, 383, 613, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 760], "can": [1, 7, 73, 74, 286, 320, 369, 413, 427, 514, 538, 545, 691, 731, 732, 733, 734, 735, 736, 737, 740, 743, 744, 745, 746, 747, 748, 749, 750, 755, 756, 758, 759, 760, 761, 785], "cap": [11, 540, 736], "cap_valu": 106, "capabl": [564, 762], "capacit": [11, 15, 70, 74, 373, 519, 658], "capacitor": [103, 106, 595, 736, 740], "capacitor_abov": [595, 740], "capc1005x05n": 736, "capc1005x55x25ll05t10": 736, "capc3216x180x20ml20": 736, "capc3216x180x55ml20t25": [60, 736], "capit": 758, "carri": 517, "case": [71, 73, 79, 93, 218, 225, 391, 460, 507, 510, 521, 537, 553, 563, 594, 598, 612, 624, 630, 644, 647, 660, 708, 760, 765], "caus": [369, 427, 514], "causal": [369, 395], "cautious": 369, "cd": [731, 756], "cell": [10, 63, 64, 65, 68, 87, 99, 100, 104, 163, 258, 291, 514, 519, 603, 613, 625, 638, 658, 696, 697, 698], "center": [228, 324, 538, 539, 553], "center_point": [539, 790], "centerwidthheight": [539, 790], "central": [733, 734], "chang": [369, 451, 544, 734, 750, 777, 783, 791], "channel": [7, 740], "charact": [731, 756], "chart": [174, 598, 606], "cheat": 759, "check": [30, 93, 221, 228, 229, 266, 300, 354, 520, 566, 567, 595, 600, 610, 731, 756, 760], "chip": [107, 750], "chip_down": 107, "chip_orient": 107, "chip_up": 107, "choic": 755, "chord": [389, 392, 397, 408, 412, 415, 424], "chosen": 413, "circl": [6, 256, 366, 537, 544, 611, 635, 637, 786], "circport": 72, "circuit": [63, 64, 66, 67, 72, 73, 76, 218, 274, 309, 369, 436, 507, 508, 514, 644, 645, 656, 777, 779], "circuit_port": 66, "circuit_typ": 67, "circuitport": [72, 655], "circular": 612, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 62, 73, 110, 115, 125, 127, 138, 140, 152, 159, 160, 161, 166, 176, 188, 211, 218, 258, 291, 324, 337, 369, 370, 375, 376, 377, 383, 384, 387, 390, 428, 429, 444, 464, 495, 503, 534, 547, 564, 570, 588, 609, 640, 641, 642, 658, 663, 672, 708, 730, 733, 736, 737, 739, 740, 744, 745, 747, 748, 755, 790], "classif": 593, "clean": 566, "clean_disjoints_less_than": 566, "clearanc": [21, 737], "click": 730, "client": 760, "clip": [369, 411, 437, 438, 439, 441, 520, 544, 766], "clippingext": 369, "clockwis": [328, 695], "clone": 6, "close": [369, 506, 512, 708, 709, 764, 765, 768, 781, 783, 786, 788, 789, 790, 791], "close_edb": [73, 76, 103, 685, 730, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 747, 748, 749, 750, 751, 765, 767, 768, 769, 774, 775, 776, 777, 778], "close_on_exit": 734, "close_project": 7, "closest": [72, 267, 301, 346, 347, 369], "clr": [737, 751], "cluster": 755, "cmp": [72, 76, 95, 103], "co": [737, 748], "coars": 369, "coax": [217, 268, 302, 733, 734, 740], "coaxial": [369, 459, 509, 531, 613, 779], "coaxport": 72, "coberg": 369, "code": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 757, 758, 765, 775], "codebas": 762, "codespel": [731, 756], "collabor": [755, 758], "collect": [700, 707], "color": [598, 606, 711, 714], "color_by_net": [598, 606, 743, 745, 747], "column": 97, "com": [731, 756, 760], "combin": [72, 369, 755], "come": 109, "command": [103, 369, 517, 625, 731, 733, 735, 755, 758, 759, 760], "comment": [731, 756], "commit": [731, 756], "common": [352, 533, 758, 760], "commonfil": 760, "commun": 760, "comp": [0, 1, 736, 737, 750], "comp1": 369, "comp2": 369, "comp_def": 60, "comp_n": 740, "comp_nam": 740, "comp_obj": 740, "comp_p": 740, "comp_type_col": [97, 736], "comp_u1": 746, "compani": [758, 760], "compat": [66, 67, 103, 373, 757, 761], "complet": [369, 733, 734, 755], "complex": 755, "compliant": [731, 756], "compon": [1, 3, 8, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 24, 30, 34, 39, 40, 42, 43, 44, 45, 49, 50, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 149, 150, 151, 166, 225, 260, 293, 317, 341, 369, 371, 373, 374, 436, 442, 507, 508, 509, 510, 511, 518, 521, 522, 533, 590, 595, 598, 600, 605, 606, 613, 618, 623, 624, 633, 639, 644, 645, 647, 648, 650, 653, 654, 656, 657, 658, 660, 661, 665, 695, 696, 697, 698, 730, 732, 739, 740, 741, 742, 750, 755, 763, 764, 767, 768, 774, 775, 776, 778, 779, 780], "component1_pin": 738, "component2_pin": 738, "component3d": 737, "component_3d": 737, "component_edb": 698, "component_exampl": 738, "component_list_column": 744, "component_nam": [70, 74, 78, 80, 108, 600, 650, 656, 658, 737, 778], "component_onli": [225, 624], "component_part_nam": [22, 70], "component_path": 737, "component_pin": 618, "component_reference_design": 618, "component_typ": 736, "componentnam": [105, 106, 238], "componentproperti": 20, "comptyp": 109, "comput": [16, 50, 108, 267, 301, 339, 369, 426, 427, 465, 485, 553, 765, 766], "con_pin": [733, 734], "con_ref1": [733, 734], "con_ref2": [733, 734], "con_ref3": [733, 734], "con_ref4": [733, 734], "cond_thickness_inn": [738, 748], "cond_thickness_out": [738, 748], "conda": 757, "condit": [369, 551, 618], "conduct": [571, 674, 783], "conduction_max_pass": 791, "conduction_min_converged_pass": 791, "conduction_min_pass": 791, "conduction_per_error": 791, "conduction_per_refin": 791, "conductor": [571, 682, 698], "conectors_posit": 738, "config": 378, "configur": [369, 430, 488, 503, 504, 505, 643, 730, 731, 732, 741, 756], "conform": [369, 413], "connect": [17, 86, 223, 224, 261, 267, 269, 294, 301, 303, 343, 348, 349, 369, 566, 596, 602, 735, 740, 761], "connector": 695, "connector_1": 738, "connector_2": 738, "connector_pin": [733, 734], "connector_s": 738, "connedt": [266, 300], "consecut": [369, 547], "consid": [174, 408, 409, 427, 595, 596, 598, 606], "consolid": [755, 758], "constant": [369, 383], "constraint": 755, "constructor": 8, "consum": 545, "contact": [466, 786], "contain": [0, 1, 2, 3, 4, 5, 6, 8, 9, 109, 219, 326, 336, 384, 428, 464, 506, 512, 523, 594, 630, 680, 736, 744, 755, 758], "content": 758, "context": [735, 740], "continu": 751, "contour": 352, "contribut": 762, "control": [393, 630, 691, 732, 752, 753, 763], "control_fil": 750, "controlfil": 750, "controlfilesweep": 750, "conveni": [369, 736], "convent": [72, 613], "converg": [369, 400, 403, 405, 414], "convert": [76, 178, 179, 189, 207, 333, 344, 562, 582, 598, 602, 628, 629], "convert_only_signal_via": 189, "convexhul": [369, 413, 745], "cool": [731, 756], "coordin": [14, 32, 248, 260, 293, 326, 336, 341, 342, 506, 512, 513, 514, 515, 523, 538, 546, 547, 550, 744], "copi": [448, 736, 740, 745, 747, 750, 758, 764, 765, 775, 777, 778, 788, 791], "coplanar": [514, 749, 751], "coplanar_plane_net_nam": 751, "copper": [674, 702, 735], "copy2": 750, "core": [1, 65, 70, 84, 109, 212, 731, 755, 756, 760, 762], "core_app": [125, 138, 152, 160, 337], "core_compon": 730, "corner": [14, 260, 293, 340, 341, 369, 438, 514, 525, 539, 540, 731, 756], "corner_rad": 735, "corner_radiu": [539, 611, 735], "corner_styl": 540, "corpor": 760, "correctli": [109, 733, 734, 743], "correspond": [369, 746], "could": 598, "count": [391, 642, 682, 737, 740, 791], "counter": 328, "coupl": [266, 300, 398, 427], "cover": 533, "cpwg": [732, 752, 753, 763], "cpython": 760, "creat": [21, 22, 66, 71, 72, 73, 74, 75, 76, 128, 141, 154, 217, 218, 219, 220, 226, 243, 262, 295, 369, 373, 429, 442, 444, 448, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 537, 538, 539, 540, 553, 554, 566, 594, 612, 613, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 682, 736, 757, 760, 770, 780, 787, 789, 790, 791, 792], "create_air_region": 734, "create_circuit_port": 76, "create_circuit_port_on_net": 774, "create_circuit_port_on_pin_group": 774, "create_coax_port": [733, 734], "create_coax_port_on_compon": [746, 775], "create_current_source_on_net": [744, 776], "create_current_source_on_pin": 776, "create_current_source_on_pin_group": 776, "create_differential_wave_port": 735, "create_edge_port": [737, 777], "create_edge_port_on_polygon": 777, "create_fieldplot_layers_net": 734, "create_hfss_setup": [737, 791], "create_linear_count_sweep": [733, 735], "create_new_termin": 226, "create_padstack": [4, 738, 786], "create_physical_rlc": 373, "create_pin_group": 776, "create_pin_group_on_net": [774, 776, 778], "create_polygon": [733, 734, 735, 738, 743, 748], "create_port": 778, "create_port_between_pin_and_lay": 778, "create_port_on_compon": 740, "create_rectangl": [6, 737, 749, 790], "create_report": [733, 737, 740], "create_resistor_on_pin": 767, "create_rlc_boundary_on_pin": 768, "create_setup": [733, 734, 735], "create_siwave_syz_setup": 740, "create_symmetric_stackup": [738, 748, 749], "create_trac": [735, 737, 743, 748, 749, 751, 777, 786, 790], "create_via_f": 786, "create_via_group": 750, "create_voltage_probe_on_pin_group": 776, "create_voltage_source_on_net": 744, "create_voltage_source_on_pin_group": 776, "created_port": 774, "creation": [72, 429, 514, 613, 732, 741, 742, 752, 753, 763, 790], "criteria": [225, 369, 400, 410, 414, 529, 542, 624, 791], "cross": 427, "crosstalk": 652, "csv": [684, 691, 736, 737, 743], "cubic": 237, "current": [27, 28, 74, 75, 369, 371, 373, 374, 415, 485, 510, 511, 547, 596, 647, 648, 649, 663, 685, 695, 696, 697, 698, 699, 709, 710, 761, 779, 780, 781, 782, 783], "current_patch": [733, 734], "current_posit": [733, 734], "current_valu": [369, 371, 510, 511, 647, 648], "currentsourc": 655, "curv": 791, "curve_approx_set": 791, "custom": 492, "cutout": [369, 375, 411, 428, 441, 448, 460, 462, 517, 765, 790], "cutout_subdesign_expans": [8, 369, 736, 738, 764], "cutout_subdesign_round_corn": 369, "cutout_subdesign_typ": 369, "cutoutsubdesigntyp": [369, 439], "cvalu": [519, 768], "cylind": [107, 479, 480, 750], "cylindr": 107, "d": 740, "d1": 737, "d2": 737, "d3": 737, "d4": 737, "d5": 737, "data": [0, 3, 4, 6, 228, 324, 338, 346, 347, 352, 354, 369, 468, 471, 527, 562, 598, 712, 736], "data_typ": 712, "databas": [1, 128, 132, 133, 134, 135, 141, 144, 145, 146, 147, 154, 156, 157, 158, 164, 165, 167, 170, 171, 172, 577, 578, 755], "db": [733, 734, 735, 737, 740], "db20": 736, "dc": [168, 369, 372, 377, 426, 444, 464, 465, 466, 467, 477, 490, 492, 565, 596, 641, 650, 651, 666, 711, 713, 725, 726, 755, 789, 791], "dc_compute_induct": 369, "dc_conduct": 574, "dc_connected_net_list": 744, "dc_error_energi": 369, "dc_export_thermal_data": 369, "dc_full_report_path": 369, "dc_icepak_temp_fil": 369, "dc_import_thermal_data": 369, "dc_max_num_pass": 369, "dc_mesh_bondwir": 369, "dc_min_num_pass": 369, "dc_num_bondwire_sid": 369, "dc_per_pin_res_path": 369, "dc_per_pin_use_pin_format": 369, "dc_permitt": 574, "dc_pin_res_fil": 369, "dc_plot_jv": 369, "dc_refine_via": 369, "dc_report_show_active_devic": 369, "dc_simulation_nam": [713, 726], "dc_slide_posit": 369, "dc_use_loop_res_for_per_pin": 369, "dc_via_report_path": 369, "dcir": 221, "dcir_equipotential_region": 786, "dcr_set": 791, "dctermin": 655, "ddr4_a0": 764, "ddr4_a1": 764, "ddr4_a2": 764, "ddr4_a3": 764, "ddr4_a4": 764, "ddr4_a5": 764, "ddr4_alert3": 751, "ddr4_dq0": 765, "ddr4_dq1": 765, "ddr4_dq2": 765, "ddr4_dq3": 765, "ddr4_dq4": 765, "ddr4_dq5": 765, "ddr4_dq6": 765, "ddr4_dq7": 765, "ddr4_dqs0_n": 775, "ddr4_dqs0_p": 775, "ddr4_dsq0_n": 775, "ddr4_dsq0_p": 775, "de": 109, "deactiv": [66, 76, 79, 369, 393, 394, 398, 416, 424, 446, 455, 463, 465, 468, 471, 474, 475, 484, 485, 486, 487, 489, 492, 736], "deactivate_onli": 79, "deby": [572, 576], "decad": [369, 391, 642], "decade_count": [369, 642], "decreas": 427, "deemb": 297, "def": [733, 734, 748], "default": [11, 66, 67, 71, 72, 73, 76, 79, 81, 88, 90, 93, 96, 97, 100, 105, 106, 107, 109, 168, 174, 189, 218, 219, 225, 228, 229, 243, 250, 251, 267, 301, 333, 339, 369, 372, 429, 444, 447, 459, 460, 462, 467, 483, 485, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 531, 537, 538, 539, 540, 542, 551, 553, 563, 565, 566, 589, 594, 595, 596, 598, 606, 610, 611, 612, 613, 621, 622, 623, 624, 630, 634, 637, 638, 642, 644, 646, 647, 648, 650, 651, 652, 654, 656, 657, 660, 661, 663, 666, 673, 674, 675, 676, 677, 678, 682, 684, 690, 695, 698, 699, 708, 709, 711, 712, 714, 717, 727, 733, 734, 735, 736, 737, 738, 739, 740, 747, 749, 760, 761], "default_plating_ratio": 610, "defeatur": [393, 402, 409, 529, 542, 791], "defeature_abs_length": 791, "defeature_ratio": 791, "defeature_set": 791, "defin": [29, 66, 67, 73, 76, 110, 189, 369, 413, 421, 422, 506, 512, 513, 514, 515, 523, 547, 611, 613, 663, 736, 755, 760, 765, 777, 780, 792], "definit": [18, 22, 36, 41, 45, 60, 74, 82, 98, 101, 176, 188, 189, 200, 203, 205, 206, 207, 242, 361, 412, 611, 618, 619, 633, 634, 636, 639, 663, 684, 699, 730, 737, 780, 787], "definition_nam": [618, 634, 735, 786], "degre": [189, 634], "delcross": 758, "delet": [3, 79, 189, 543, 563, 566, 616, 641, 691, 740], "delete_existing_setup": 643, "delete_padstack_def": 189, "delete_padstack_gemometri": 563, "delete_single_pin_rlc": 744, "deleted_net": 592, "delimit": [81, 97, 109], "deliveri": [7, 369], "delta": 400, "demand": 700, "demonstr": 756, "dens": 369, "densiti": 485, "depend": [758, 760], "deploi": 755, "depth": [189, 780, 791], "describ": [730, 760], "descript": 579, "design": [0, 47, 66, 67, 70, 73, 76, 83, 86, 92, 94, 97, 103, 109, 369, 411, 437, 438, 439, 441, 509, 545, 623, 630, 653, 654, 685, 696, 697, 698, 732, 734, 736, 737, 741, 742, 746, 748, 752, 753, 755, 759, 763, 766, 780], "design_opt": 737, "design_typ": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "design_vari": 496, "desktop": [695, 755, 758], "desktop_vers": [781, 786], "destin": [696, 697, 698, 736, 739, 740, 744, 745, 746, 747, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "detail": [736, 780], "detect": 630, "determin": [119, 120, 231, 265, 299, 355, 498, 553, 601], "develop": [393, 731, 756, 760, 761], "deviat": [393, 402, 529, 542], "devic": [7, 489], "diamet": [52, 72, 107, 189, 190, 191, 213, 214, 250, 251, 434, 611, 612, 638], "dic": [45, 633, 639], "dict": [63, 64, 65, 68, 69, 77, 86, 99, 100, 104, 163, 182, 206, 527, 552, 557, 559, 560, 579, 581, 584, 585, 590, 604, 605, 607, 608, 615, 623, 626, 627, 683, 688, 702, 704], "dictionari": [5, 9, 45, 63, 64, 65, 68, 69, 86, 94, 99, 100, 102, 104, 130, 142, 143, 148, 149, 150, 151, 155, 491, 527, 552, 557, 559, 560, 604, 607, 608, 623, 626, 627, 633, 639, 683, 688, 693, 704, 705, 733, 734], "diel": [576, 737, 743], "diel1": 781, "diel2": 781, "diel_1": 735, "diel_2": 735, "diel_3": 735, "diel_material_nam": [738, 748], "diel_t": 737, "diel_thick": [738, 748], "dielectr": [189, 369, 440, 446, 461, 572, 573, 574, 576, 673, 674, 675, 676, 677, 678, 680, 682, 683, 691, 705, 733, 734, 735, 737, 743], "dielectric_ext": [369, 790], "dielectric_lay": 783, "dielectric_loss_tang": [573, 783], "dielectric_materi": [682, 738, 748], "dielectric_model_frequ": 574, "dielectric_thick": [682, 738, 748], "dielectrics_base_elev": 750, "diff_n": 740, "diff_nam": [735, 740], "diff_p": 740, "diff_pair": 125, "differ": [72, 109, 514, 734, 748, 758, 762], "differenti": [3, 512], "differential_pair": [3, 125], "differentialpair": [128, 133], "difficult": [731, 756], "digit": [517, 525], "digit_resolut": [517, 525], "dim": 759, "dimens": [431, 432, 433, 440, 456, 457, 458, 461, 637], "dir": 758, "direct": [553, 596, 611], "directli": [0, 3, 4, 266, 300, 369, 755, 762], "directori": [722, 724, 728, 760], "dirnam": 744, "disabl": [72, 80, 566, 790], "discov": 757, "discret": [61, 107, 369, 421, 479, 480, 642], "discrete_sweep": 642, "disjoint": [566, 567], "displai": [731, 732, 741, 756], "dissip": 666, "distanc": [369, 427, 624, 630, 765], "distance_threshold": 630, "distribut": [415, 485], "divid": 630, "djordjev": 574, "do": [352, 442, 731, 734, 740, 756, 760, 761], "do_cutout": 447, "do_cutout_subdesign": [8, 369, 736, 738, 739, 764, 790], "do_lambda_refin": 369, "do_pin_group": 369, "do_pingroup": 72, "doc": [731, 756], "document": [673, 730, 760], "doe": [72, 97, 219, 250, 251, 613, 623, 755], "doesn": 748, "domain": 652, "don": [514, 734, 755], "dotnet": [10, 17, 37, 45, 62, 63, 64, 65, 68, 74, 99, 100, 104, 110, 115, 125, 128, 132, 133, 134, 135, 138, 141, 144, 145, 146, 147, 152, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 188, 207, 211, 218, 219, 225, 226, 239, 258, 261, 262, 266, 267, 268, 269, 270, 281, 286, 291, 294, 295, 300, 301, 302, 303, 304, 315, 320, 324, 337, 343, 344, 351, 362, 365, 367, 369, 370, 375, 377, 378, 380, 383, 384, 387, 428, 430, 453, 464, 495, 501, 503, 512, 523, 534, 536, 537, 538, 539, 540, 547, 549, 550, 555, 556, 558, 561, 562, 564, 570, 571, 572, 573, 574, 575, 576, 578, 588, 593, 604, 607, 608, 609, 615, 618, 620, 624, 626, 627, 633, 634, 639, 640, 641, 642, 658, 663, 672, 674, 683, 688, 699, 704, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 761], "doubl": [72, 95, 369, 390, 638, 695, 696, 697, 698], "down": 30, "download": [732, 733, 734, 735, 737, 738, 739, 743, 744, 748, 749, 758, 759, 760, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "download_fil": [736, 737, 739, 740, 744, 745, 746, 747, 750, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "dq4": 125, "draw": 21, "drill": [213, 214, 250, 251], "drill_depth": [250, 251], "drill_diamet": [250, 251], "driver": 740, "due": [544, 735], "dummy_layermap": 750, "dure": [72, 369, 383, 411, 427, 441, 750, 760], "duroid": [733, 734], "e": [533, 695, 698, 731, 756], "e_lay": 734, "each": [369, 442, 538, 547, 576, 605, 735, 736, 744, 748], "earlier": 760, "eas": 758, "easi": [369, 758], "edb": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 19, 31, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 110, 114, 115, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 144, 145, 146, 147, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 170, 171, 172, 176, 178, 179, 188, 211, 212, 219, 225, 233, 241, 244, 258, 290, 291, 322, 324, 326, 327, 334, 336, 337, 351, 358, 365, 367, 369, 371, 373, 374, 376, 381, 460, 462, 495, 496, 503, 506, 507, 508, 510, 511, 512, 514, 517, 518, 519, 520, 521, 522, 523, 525, 534, 542, 543, 544, 565, 566, 570, 576, 580, 588, 592, 595, 609, 613, 616, 619, 624, 625, 628, 629, 633, 638, 639, 640, 641, 642, 644, 645, 647, 648, 650, 657, 658, 660, 661, 672, 684, 685, 691, 695, 696, 697, 698, 700, 702, 707, 730, 732, 741, 742, 752, 753, 758, 760, 761, 763, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793], "edb1": [87, 695, 696, 697, 698], "edb2": [87, 696, 697, 698], "edb_3dedbapp": 503, "edb_class": [62, 640], "edb_cor": [10, 17, 37, 45, 62, 63, 64, 65, 68, 74, 99, 100, 104, 110, 115, 125, 138, 152, 160, 163, 166, 173, 175, 176, 188, 207, 211, 218, 219, 225, 226, 239, 258, 261, 262, 266, 267, 268, 269, 270, 281, 286, 291, 294, 295, 300, 301, 302, 303, 304, 315, 320, 324, 337, 343, 344, 351, 352, 354, 362, 365, 367, 369, 370, 375, 377, 378, 380, 384, 387, 428, 430, 453, 464, 495, 501, 503, 506, 512, 523, 534, 536, 537, 538, 539, 540, 546, 547, 549, 550, 555, 556, 558, 561, 562, 564, 570, 571, 572, 573, 574, 575, 576, 578, 588, 592, 593, 604, 607, 608, 609, 615, 618, 620, 624, 626, 627, 633, 634, 639, 640, 641, 642, 658, 663, 672, 674, 683, 688, 699, 704, 750], "edb_data": [17, 37, 45, 74, 75, 110, 115, 125, 138, 152, 160, 166, 173, 175, 176, 188, 211, 218, 219, 225, 226, 239, 258, 261, 266, 267, 268, 269, 270, 281, 286, 291, 294, 300, 301, 302, 303, 304, 315, 320, 324, 337, 343, 344, 351, 352, 354, 362, 365, 367, 369, 370, 375, 377, 378, 380, 384, 387, 428, 430, 453, 464, 495, 501, 504, 505, 506, 512, 523, 529, 531, 533, 536, 537, 538, 539, 540, 547, 549, 550, 555, 556, 558, 561, 593, 604, 607, 608, 615, 618, 620, 624, 626, 627, 633, 634, 639, 641, 642, 643, 663, 674, 683, 688, 699, 704, 750], "edb_edge_port": 777, "edb_extended_net": 138, "edb_fil": [76, 103, 565, 759], "edb_fpath": 751, "edb_hfss": 503, "edb_layout": [219, 534], "edb_net": [160, 588], "edb_obj": 110, "edb_object": [10, 115, 258, 291, 672], "edb_pad_properti": 176, "edb_padstack": [176, 188, 609], "edb_padstack_inst": 211, "edb_padstackinst": 211, "edb_path": 514, "edb_prim": 337, "edb_siwav": 640, "edb_termin": 291, "edb_vers": 744, "edbapp": [6, 8, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 78, 79, 80, 84, 86, 89, 90, 91, 93, 94, 96, 99, 100, 104, 105, 106, 107, 108, 212, 219, 225, 503, 507, 508, 510, 511, 518, 521, 522, 534, 588, 609, 624, 633, 639, 640, 644, 645, 647, 648, 650, 657, 660, 661, 736, 740, 746, 749, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "edbarc": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "edbcompon": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 73, 99, 100, 104, 163, 261, 294, 343], "edbcomponentdef": 77, "edbdifferentialpairdata": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "edbextendednetdata": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 166], "edbhfss": [1, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "edblay": [2, 115, 683], "edblayout": [535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 730], "edblib": [258, 291], "edbnet": [1, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 730], "edbnetclassdata": [153, 154, 155, 156, 157, 158, 159], "edbnetsdata": [37, 136, 137, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 218, 239, 281, 315, 362, 593, 604, 607, 608], "edbpadproperti": [177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "edbpadstack": [1, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 730], "edbpadstackinst": [45, 73, 74, 93, 173, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 286, 301, 302, 303, 304, 320, 618, 620, 624, 626, 627, 633, 634, 639, 663], "edbpath": [87, 685, 695, 696, 697, 698, 702, 733, 734, 735, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "edbprimit": [175, 219, 266, 270, 286, 300, 304, 320, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 512, 523, 536, 537, 538, 539, 540, 547, 549, 550, 555, 556, 558, 561], "edbsiwav": [1, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671], "edbstatist": 545, "edbvalu": [111, 112, 113, 114, 501, 730], "edbvers": [0, 1, 2, 3, 4, 5, 6, 8, 9, 87, 125, 138, 152, 160, 176, 188, 211, 219, 324, 326, 327, 336, 337, 534, 588, 609, 640, 641, 685, 695, 696, 697, 698, 702, 730, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 781, 783, 785, 786, 788, 789, 791, 793], "edc": 109, "edg": [258, 266, 267, 291, 300, 301, 472, 506, 512, 513, 514, 515, 517, 520, 523, 779], "edgetermin": [258, 291], "edit": [1, 700, 732, 752, 753, 755, 763, 782, 787], "effici": 755, "effort": 755, "egaci": 506, "eight": [697, 698], "either": [87, 189, 232, 329, 330, 339, 353, 357, 371, 374, 381, 696, 697, 698], "el": 744, "elaps": 744, "elav": 236, "electro": 755, "electromagnet": 755, "electron": [7, 317, 695, 755, 758], "element": [712, 791], "elev": [33, 59, 236, 257, 674, 695, 697, 698, 744], "elig": 593, "elimin": 735, "els": [735, 748], "email": [731, 756, 760], "embed": 734, "emi": 7, "emp": 369, "empti": [696, 697, 734, 737, 738], "enabl": [27, 221, 265, 299, 369, 394, 674, 760, 791], "enable_rough": 674, "enclos": 369, "end": [506, 512, 513, 515, 517, 523, 540, 547, 594, 612, 732, 733, 734, 735, 736, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 777], "end_cap_styl": [540, 748, 749], "end_coordin": 326, "end_on_lower_pad": [200, 611], "end_with": 594, "endlay": 612, "endpoint": 762, "energi": 467, "enforc": [369, 395, 396, 514], "enforce_caus": 369, "enforce_pass": 369, "enhanced_low_freq_accuraci": 791, "ensur": [731, 756], "enter": 109, "entir": [225, 369, 624, 785], "enumer": [72, 178, 179, 628, 629, 631], "environ": [758, 760, 761], "equal": [547, 610, 691], "equipotenti": 221, "error": [369, 389, 392, 397, 408, 412, 414, 415, 425, 467, 674], "especi": 448, "est": [378, 380], "est_json": [378, 380], "etch": [443, 450, 674], "etch_factor": 674, "evalu": [72, 434, 525, 545, 602, 624, 765], "evaluate_area": 545, "even": [109, 369, 748], "eventu": 369, "ex": 651, "exampl": [60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 86, 87, 89, 90, 91, 93, 94, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 125, 138, 152, 160, 166, 176, 188, 211, 212, 219, 225, 243, 258, 291, 324, 326, 327, 336, 337, 369, 371, 373, 374, 378, 380, 496, 503, 506, 507, 510, 511, 512, 514, 518, 521, 522, 523, 534, 546, 547, 565, 566, 576, 588, 592, 595, 609, 624, 633, 639, 640, 641, 644, 645, 647, 648, 650, 657, 660, 661, 684, 685, 691, 695, 696, 697, 698, 702, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 756, 757, 758, 759, 762, 763, 764, 765, 775, 777, 778, 780, 788, 791], "exampleslegacy_pyaedt_integr": 742, "exampleslegacy_standalon": 753, "exc": 291, "exception_list": 595, "excit": [5, 369, 523, 526, 730, 738, 774], "excitationdifferenti": [506, 512], "execut": [651, 742, 753, 754, 763], "exist": [28, 72, 97, 213, 214, 578, 613, 734, 739, 744, 748, 750, 755, 758, 759, 777, 785], "expans": [369, 437, 553, 765], "expansion_s": [745, 765], "expect": [256, 366, 737, 738, 739, 743], "explain": 760, "explicitli": [109, 760], "explor": 762, "export": [66, 81, 82, 103, 369, 378, 651, 711, 712, 713, 714, 732, 752, 753, 758, 763], "export_dc_power_data_to_icepak": 725, "export_element_data": 7, "export_json": [8, 736], "export_siwave_dc_result": 744, "export_to_ipc2581": 745, "export_touchston": 651, "expos": 734, "express": 736, "extend": [3, 166, 225, 540, 595, 624, 755, 758], "extended_net": [3, 138, 740], "extendednet": [141, 145], "extens": 459, "extent": [306, 323, 369, 431, 432, 433, 438, 440, 456, 457, 458, 461, 505, 506, 512, 515, 523, 528, 531, 750, 765, 792], "extent_defeatur": 745, "extent_typ": [740, 745], "extern": [97, 468, 758], "extra": [21, 369], "extra_soldermask_clear": 21, "extract": 758, "extrem": 755, "f": [746, 751, 783], "f7": 778, "facet": [333, 369], "facilit": [733, 734, 755], "factor": [306, 323, 404, 437, 443, 456, 457, 458, 461, 506, 512, 515, 523, 674, 765], "fail": [60, 66, 67, 70, 72, 73, 75, 76, 78, 80, 85, 95, 103, 105, 106, 107, 108, 189, 219, 228, 344, 371, 373, 374, 393, 496, 504, 505, 509, 516, 517, 519, 529, 531, 533, 538, 539, 542, 543, 553, 589, 602, 610, 613, 616, 630, 636, 643, 679, 690, 691, 709, 711, 712, 713, 714, 717, 723, 726, 727, 731, 756], "failur": [369, 427], "fals": [8, 11, 22, 27, 29, 30, 60, 66, 67, 70, 72, 73, 74, 75, 76, 78, 79, 80, 85, 87, 95, 103, 105, 106, 107, 108, 119, 120, 168, 174, 189, 218, 219, 225, 226, 228, 231, 250, 251, 344, 355, 369, 371, 373, 374, 378, 380, 393, 394, 395, 396, 398, 411, 416, 421, 424, 426, 429, 438, 441, 442, 444, 445, 446, 447, 455, 456, 457, 458, 459, 460, 461, 463, 465, 468, 471, 474, 475, 484, 485, 486, 487, 489, 492, 496, 504, 505, 509, 514, 516, 517, 519, 529, 531, 533, 538, 539, 542, 543, 544, 545, 551, 553, 563, 565, 566, 568, 569, 589, 598, 601, 602, 606, 610, 611, 613, 616, 623, 624, 630, 634, 636, 642, 643, 651, 658, 674, 679, 684, 685, 690, 691, 695, 696, 697, 698, 709, 711, 712, 713, 714, 717, 723, 725, 726, 727, 733, 734, 735, 736, 737, 738, 739, 745, 747, 749, 764, 786, 790, 791], "familiar": [731, 756], "far_field": 734, "farrad": 373, "fast": 755, "faster": 761, "fastest": [566, 755], "featur": [416, 446, 730, 731, 756, 760], "feedback": 760, "fenc": 630, "few": 748, "field": [109, 369, 791], "file": [1, 12, 13, 81, 82, 97, 98, 105, 109, 369, 378, 379, 380, 448, 469, 470, 481, 488, 494, 579, 580, 584, 585, 651, 665, 684, 691, 695, 716, 719, 731, 732, 733, 734, 735, 737, 738, 739, 742, 743, 744, 746, 748, 749, 752, 753, 754, 755, 756, 763, 764, 765, 775, 777, 778, 780, 785, 788, 791], "file_format": 684, "file_path": [12, 13, 82, 98, 691, 711, 712, 713, 714], "filenam": 369, "fill": [117, 674], "fillmateri": [674, 781, 786, 790], "filter": [90, 550, 551, 553, 563, 618, 620, 621, 622, 625], "final": [737, 738, 739, 743], "find": [83, 168, 219, 225, 270, 304, 565, 566, 567, 568, 569, 594, 597, 624, 758], "findbynam": [133, 145, 167], "finish": [192, 736], "firewal": 760, "first": [520, 547, 554, 699, 733, 734, 737, 760, 791], "first_lay": [699, 750], "first_lin": [733, 734], "first_patch": [733, 734], "fit": 680, "fit_al": 734, "fix": [168, 369, 544, 565, 566, 567, 568, 569, 731, 756, 787, 788], "flag": [27, 28, 230, 275, 310, 356], "flake8": [731, 756], "flat": [540, 735, 737, 748, 749, 777], "flip": [87, 685, 695, 696, 697, 698, 750], "flipped_stackup": [695, 696, 697, 698], "float": [11, 14, 21, 33, 50, 59, 70, 72, 73, 74, 91, 106, 107, 108, 112, 169, 189, 192, 197, 198, 199, 215, 219, 225, 236, 237, 249, 250, 251, 257, 260, 293, 327, 331, 332, 335, 339, 341, 346, 347, 369, 371, 373, 374, 388, 400, 403, 404, 410, 414, 417, 418, 419, 420, 425, 431, 432, 433, 434, 437, 440, 454, 467, 477, 483, 500, 506, 507, 508, 510, 511, 512, 513, 514, 515, 518, 521, 522, 523, 537, 540, 542, 554, 571, 572, 573, 574, 593, 595, 610, 624, 630, 634, 636, 642, 644, 645, 646, 647, 648, 649, 656, 657, 658, 659, 660, 661, 662, 663, 674, 682, 686, 697, 698, 706, 708, 791], "flot": [389, 392, 397, 402, 406, 407, 408, 409, 412, 415, 427], "flow": [369, 755], "folder": [1, 448, 731, 736, 739, 740, 745, 747, 748, 750, 755, 756, 758], "follow": [3, 71, 109, 731, 732, 733, 734, 736, 739, 741, 752, 756, 758, 759], "forc": [369, 514, 531], "force_circuit_port": 514, "form": [91, 630], "format": [184, 191, 369, 482, 538, 546, 684, 691, 733, 734, 736, 737, 738, 739, 740, 743, 744, 745, 748, 749, 755], "formula": 189, "found": [90, 223, 225, 348, 369, 600, 610, 624, 691], "fpath": [326, 327, 336, 684], "fr4": 790, "fr4_epoxi": [674, 682, 735, 738, 743, 748], "framework": 760, "free": 758, "freq": [576, 734], "freqstart": [733, 735], "freqstop": [733, 735], "frequenc": [369, 385, 386, 391, 395, 396, 403, 410, 418, 419, 420, 422, 423, 429, 572, 574, 576, 642, 652, 734, 750, 790, 791], "frequency_sweep": [737, 740, 791], "frequency_xtalk": 652, "frequenvci": 791, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 86, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 125, 138, 152, 160, 166, 169, 176, 188, 200, 211, 212, 213, 214, 219, 225, 250, 251, 258, 291, 324, 337, 369, 378, 380, 442, 495, 496, 503, 507, 508, 510, 511, 514, 517, 518, 521, 522, 534, 545, 547, 549, 553, 566, 567, 570, 576, 577, 578, 580, 584, 585, 588, 592, 595, 602, 609, 619, 624, 625, 635, 636, 640, 641, 644, 645, 647, 648, 650, 657, 660, 661, 666, 672, 684, 691, 699, 700, 701, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 742, 743, 745, 746, 747, 748, 749, 750, 752, 753, 754, 755, 756, 757, 760, 763, 764, 765, 767, 768, 769, 772, 774, 775, 776, 777, 778, 781, 783, 785, 786, 788, 789, 790, 791, 793], "fromlay": [634, 733, 734, 738], "full": [81, 97, 105, 109, 448, 579, 580, 584, 716, 717, 719, 721, 722, 724, 727, 728, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 758], "fulli": [122, 219, 352, 732, 741, 742, 752, 753, 763], "func": 109, "function": [10, 125, 138, 152, 160, 176, 188, 211, 324, 337, 730, 734, 755], "fusion": 734, "futur": 761, "g": 751, "g4": 108, "galleri": [732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 763], "gap": [66, 67, 103, 258, 263, 515, 733, 734, 777], "gap_port": [258, 777], "gapport": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 730], "gd": [732, 752, 753, 763], "gds_in": 750, "gds_out": 750, "gener": [72, 369, 383, 438, 444, 595, 731, 732, 733, 734, 736, 737, 738, 743, 744, 745, 746, 747, 749, 750, 751, 756, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 790, 791, 793], "general_method": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "generate_excit": 790, "generate_solder_bal": 369, "generate_unique_folder_nam": [735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "generate_unique_nam": [733, 734, 735, 737, 738, 743, 745, 748, 749, 751], "geometri": [177, 223, 348, 563, 732, 741, 742, 744, 752, 753, 763, 791], "geometrytyp": 619, "get": [24, 38, 49, 51, 56, 87, 92, 95, 159, 166, 182, 187, 200, 206, 215, 224, 226, 233, 234, 245, 267, 268, 277, 284, 301, 302, 312, 318, 326, 327, 336, 338, 346, 347, 349, 352, 358, 359, 360, 363, 364, 497, 499, 500, 501, 502, 524, 530, 532, 551, 583, 586, 590, 595, 596, 605, 618, 619, 620, 625, 664, 669, 670, 671, 730, 760, 762, 773, 783], "get_aedt_pin_nam": 212, "get_bounding_box": 772, "get_center_lin": 751, "get_component_by_nam": [87, 696, 697, 698], "get_component_net_connection_info": 744, "get_component_placement_vector": 696, "get_dcconnected_net_list": 744, "get_extended_net": 595, "get_pin_from_compon": [0, 70, 508, 511, 518, 522, 645, 648, 657, 661, 767, 768, 769, 774, 776], "get_polygons_by_lay": [546, 547, 751], "get_power_ground_net": 593, "get_powertre": 744, "get_rat": 744, "get_solution_data": [733, 734, 735, 736], "get_statist": [771, 783], "get_traces_for_plot": 734, "getid": [514, 777], "getnam": [84, 212], "getprimitivetyp": [514, 777], "gettempdir": [733, 734, 750], "getter": [733, 734, 736], "ghz": [574, 576, 733, 735, 789], "git": [731, 756], "github": [731, 756], "giva_angle_rad": 748, "give": [107, 369, 547, 549, 765], "given": [107, 189, 223, 225, 228, 348, 518, 538, 550, 566, 567, 594, 621, 623, 624, 636, 638, 657, 738, 771], "glue": 674, "gnd": [6, 8, 72, 73, 138, 160, 225, 267, 301, 369, 507, 510, 521, 543, 546, 547, 566, 596, 616, 624, 630, 644, 647, 660, 733, 734, 735, 736, 737, 739, 740, 743, 744, 745, 747, 748, 749, 751, 764, 765, 768, 769, 771, 774, 776, 777, 778, 781, 790, 791], "gnd_dict": 737, "gnd_dp": [736, 744, 747], "gnd_net_name_prefer": [267, 268, 269, 301, 302, 303], "gnd_poli": 735, "gnd_shape": 735, "gnd_via": [733, 734], "gndpinlist": 71, "go": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "good": [369, 514], "graphic": [732, 741, 755, 780], "greatli": 369, "grm32_dc0v_25degc": 736, "grm32_dc0v_25degc_seri": [60, 736], "ground": [372, 455, 491, 589, 593, 596, 601, 641, 744], "ground_lay": [738, 748], "ground_net": [596, 599, 744], "group": [66, 71, 73, 76, 246, 369, 442, 507, 590, 632, 644, 646, 649, 653, 654, 655, 659, 662, 667, 774, 776], "group_nam": [71, 653, 654, 776, 778], "gui": 369, "guid": [731, 756, 762], "guidanc": [731, 756], "guidelin": 756, "gvia": [748, 749], "gvia_angl": 748, "gvia_num": 748, "gvia_num_sid": 748, "h1": 734, "h2": 734, "h3d": [733, 734, 735, 736, 737, 738, 740], "ha": [73, 219, 369, 393, 450, 514, 517, 554, 566, 595, 611, 691, 695, 731, 736, 745, 748, 756, 758], "had": 733, "handl": [73, 369, 755], "has_hol": 611, "have": [339, 369, 447, 448, 451, 517, 613, 691, 758, 760], "header": 109, "headless": 755, "heal": 791, "healing_opt": 791, "height": [53, 72, 87, 95, 107, 174, 189, 538, 539, 547, 606, 680, 699, 733, 734, 790], "help": [758, 759, 760], "henri": 373, "here": [369, 750, 760], "hfss": [1, 5, 9, 66, 67, 271, 305, 369, 385, 386, 387, 388, 389, 390, 392, 394, 399, 401, 403, 405, 417, 424, 431, 432, 433, 455, 463, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 516, 518, 519, 521, 522, 523, 528, 613, 736, 737, 738, 739, 740, 746, 749, 750, 755, 758, 768, 775, 777, 779, 780, 792], "hfss3dlayout": [369, 383, 733, 734, 735, 736, 738, 739, 749], "hfss_extent_info": 737, "hfss_port_set": 791, "hfss_region": 674, "hfss_solver_set": [737, 791], "hfss_type": 515, "hfssdlayout": 730, "hierarchi": [10, 63, 64, 65, 68, 87, 99, 100, 104, 163], "high": [7, 369, 385, 755, 760], "high_frequ": 791, "higher": [572, 595], "higher_frequ": 572, "highli": 369, "hole": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 237, 611, 612], "hole_rang": 611, "hole_wall_angl": 189, "holedepth": 189, "holediam": [4, 189, 611, 612, 733, 734, 735, 738, 748, 749, 786], "holediamet": 189, "honor": 446, "hook": [731, 756], "horizont": [306, 431, 456, 506, 512, 513, 515, 523], "horizontal_extent_factor": [506, 512, 515, 523, 737], "horizonz": 369, "host": [87, 731, 756], "hosting_cmp": [87, 696, 697, 698], "hosting_compon": [87, 696], "hosting_component_pin1": [87, 696], "hosting_component_pin2": [87, 696], "how": [258, 291, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 759, 760, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793], "howev": 758, "hsd_v1": [736, 739, 740, 744, 745, 746, 747, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 778, 783, 785, 788, 789, 791, 793], "hsg": [371, 373, 374], "html": 369, "http": [731, 756], "i": [0, 1, 3, 4, 7, 11, 27, 29, 30, 66, 67, 71, 72, 73, 76, 79, 81, 84, 88, 90, 93, 96, 97, 105, 106, 107, 109, 119, 120, 174, 189, 212, 215, 218, 219, 221, 225, 226, 228, 229, 230, 231, 232, 237, 238, 243, 250, 251, 256, 265, 267, 274, 275, 276, 287, 296, 299, 301, 309, 310, 311, 328, 329, 330, 333, 339, 353, 355, 356, 357, 366, 369, 372, 384, 395, 396, 411, 421, 426, 428, 429, 434, 441, 442, 444, 447, 448, 456, 457, 458, 459, 460, 461, 462, 464, 491, 498, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 533, 537, 538, 539, 540, 542, 547, 551, 553, 563, 566, 567, 589, 594, 595, 596, 598, 600, 601, 606, 610, 611, 612, 613, 621, 622, 623, 624, 625, 630, 634, 637, 638, 641, 642, 644, 646, 647, 648, 650, 651, 652, 654, 656, 657, 660, 661, 663, 674, 679, 682, 684, 690, 691, 695, 696, 697, 698, 699, 700, 708, 709, 711, 712, 714, 717, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 744, 748, 749, 750, 751, 756, 757, 758, 760, 761, 762], "i1": 744, "i22": 776, "ic": [7, 107, 750], "ic2": 744, "icepak": [369, 470, 665, 666, 713, 726, 755, 758], "icepak_simulation_nam": 726, "id": [223, 348, 506, 512, 513, 515, 523, 549, 582, 618, 621, 638, 689, 735], "idea": 760, "identifi": 680, "ignor": [66, 73, 76, 174, 369, 397, 409, 447, 606, 699], "illeg": [568, 569], "illustr": [732, 741, 752], "imag": [174, 288, 606, 699], "impact": [369, 553], "imped": [66, 73, 76, 369, 371, 374, 507, 508, 513, 514, 515, 523, 531, 644, 645, 646, 652, 656, 659, 662, 774], "impedance_valu": [507, 644], "implement": [7, 593, 761], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 86, 89, 90, 91, 93, 94, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 125, 138, 152, 160, 166, 176, 188, 211, 212, 219, 258, 291, 324, 337, 369, 378, 380, 471, 496, 503, 507, 508, 510, 511, 518, 521, 522, 534, 576, 588, 595, 609, 640, 641, 644, 645, 647, 648, 650, 657, 660, 661, 684, 691, 730, 732, 737, 738, 739, 743, 752, 753, 755, 759, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 781, 783, 785, 786, 788, 789, 790, 791, 793], "import_bom": 736, "import_definit": 736, "import_dummy_net": 750, "import_opt": 750, "improv": 369, "inch": 745, "includ": [174, 228, 229, 339, 369, 435, 447, 554, 598, 606, 621, 622, 684, 730, 734, 735, 736, 740, 745, 746, 747, 750, 755, 760, 765, 790], "include_material_with_lay": 684, "include_only_selected_net": 790, "include_parti": 228, "include_pow": 595, "include_sign": 595, "include_void": 339, "increas": 755, "ind": [11, 736], "ind_valu": 106, "index": [97, 621, 622, 758, 760, 762], "indic": [27, 28, 230, 275, 310, 356], "individu": 369, "induct": [11, 26, 263, 369, 373, 465, 519, 595], "inductor": [70, 74, 106, 109, 595, 596, 658, 740, 744], "inductor_below": [595, 740], "info": [731, 756], "inform": [1, 86, 528, 731, 750, 755, 756, 757, 758, 760, 762, 780], "inherit": [125, 138, 152, 160, 176, 188, 211, 324, 337, 369, 640, 730], "initi": [1, 7, 369, 448, 472, 708, 730, 734, 735, 736, 737, 743, 749], "initial_posit": 734, "inner": 682, "inner_layer_thick": [682, 738, 748], "input": [64, 346, 347, 369, 708, 744, 748], "input_dict": 587, "input_fil": 380, "inscrib": 219, "insert": 674, "insert_abov": 674, "insert_below": 674, "insert_infinite_spher": 734, "insert_layout_compon": 734, "insid": [109, 219, 352, 368, 376, 684, 759], "instal": [708, 731, 732, 756, 757, 762], "install_pyedb_from_wheelhous": 760, "instanc": [19, 31, 73, 74, 76, 189, 211, 212, 215, 219, 220, 225, 228, 229, 231, 235, 237, 238, 243, 248, 249, 258, 266, 267, 268, 270, 286, 291, 300, 301, 302, 304, 320, 371, 373, 374, 380, 514, 590, 605, 613, 616, 618, 620, 621, 622, 624, 627, 630, 633, 638, 639, 730, 736, 738, 746, 771, 780, 787], "instanti": 369, "instead": [67, 421, 426, 514, 613, 731, 756], "int": [11, 25, 40, 57, 96, 97, 107, 122, 177, 178, 179, 202, 225, 227, 255, 272, 289, 307, 321, 333, 350, 352, 372, 391, 399, 401, 405, 473, 476, 479, 480, 490, 491, 506, 512, 513, 515, 517, 523, 525, 526, 549, 571, 572, 573, 574, 595, 606, 613, 618, 619, 624, 626, 628, 629, 630, 638, 642, 646, 649, 653, 659, 662, 663, 674, 682, 692, 694, 708, 777], "integ": [122, 178, 179, 369, 628, 629], "integr": [7, 63, 369, 750, 755, 766], "intend": 755, "inter": 398, "interact": [744, 755, 762], "interfac": [755, 757, 760, 762], "intern": [731, 756], "interpol": [400, 414, 421, 426, 733, 735], "interpolation_max_solut": [733, 735], "interpolation_tol_perc": [733, 735], "interpret": [758, 760], "intersect": [228, 352, 567, 621], "intesect": 354, "intrins": 734, "inupt": 64, "invalidboundari": [259, 292], "invert": [696, 697, 698], "ipc2581": [732, 752, 753, 763], "ipc2581_fil": 745, "ipynb": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "irrelev": 740, "is_act": 663, "is_circuit_port": [218, 777], "is_en": 0, "is_intersect": 751, "is_neg": 674, "is_parallel": [11, 70, 74, 658, 736], "is_paramet": [738, 748], "is_pin": [634, 738], "is_rlc": 70, "is_void": [6, 337, 551], "isnul": [134, 146, 157, 170], "isort": [731, 756], "isparallel": 106, "ispowerground": 171, "issu": [369, 544, 757], "istopplac": [638, 733, 734], "isvoid": 337, "item": [103, 740, 746, 783], "iter": [579, 748], "its": [393, 540, 695, 758], "j2l1": 8, "j4a2": 108, "j5": [225, 624], "job": 755, "join": [8, 733, 734, 735, 736, 737, 738, 743, 744, 745, 748, 749, 750, 751], "json": [8, 82, 98, 378, 380, 684, 691, 736], "jupyt": [732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "just": 219, "kbroadband": 791, "kcurrentsourc": [259, 292], "kdctermin": [259, 292], "keep": [369, 517, 684, 731, 756], "keep_disjoint_pin": 566, "keep_only_main_net": 566, "kei": [76, 491, 557, 559, 560, 729, 737, 738, 740, 744, 748, 783], "kind": 369, "knexximground": [259, 292], "knexximport": [259, 292], "knum25dviastyl": 791, "kvoltageprob": [259, 292], "kvoltagesourc": [259, 292], "kwarg": [115, 124, 571, 572, 573, 574, 575, 576, 673, 675, 676, 677, 678], "l1": 734, "l10": [738, 748], "l2": [734, 737], "l3": 737, "l4": 737, "l5": 737, "l_valu": [70, 74, 373, 658, 769], "lambda": [369, 394], "lamin": [692, 699], "larg": [369, 545, 755], "larger": [630, 755], "laser": 189, "laser_angl": 189, "last": [369, 393, 448, 699, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "last_lay": 699, "later": [748, 758, 760], "latest": [708, 731, 756, 761], "lattic": 219, "launch": [317, 506, 512, 515, 523, 730, 755], "layer": [21, 33, 46, 57, 59, 70, 115, 116, 117, 119, 120, 121, 122, 123, 174, 176, 208, 209, 210, 213, 214, 219, 229, 234, 235, 236, 247, 250, 251, 252, 253, 255, 257, 359, 443, 450, 451, 513, 514, 515, 517, 537, 538, 539, 540, 548, 550, 554, 557, 559, 563, 598, 606, 611, 612, 619, 635, 637, 638, 656, 668, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 687, 689, 691, 693, 694, 696, 697, 698, 699, 700, 701, 702, 704, 705, 707, 730, 737, 738, 739, 744, 750, 777, 779, 780, 790], "layer1": 750, "layer2": 750, "layer_align": 513, "layer_clon": 703, "layer_count": [682, 738, 748], "layer_data": [115, 674, 683, 688, 699, 704], "layer_dict": 749, "layer_map": 750, "layer_nam": [176, 219, 229, 537, 538, 539, 540, 548, 551, 563, 635, 637, 656, 674, 735, 737, 738, 748, 749, 751, 778, 781, 783, 786, 790], "layer_snap_tol": 791, "layer_typ": [115, 673, 674, 675, 676, 677, 678, 733, 734, 735, 737, 743], "layeredbclass": [116, 117, 118, 119, 120, 121, 122, 123, 124, 674, 688, 699, 704, 730], "layernam": 619, "layers_nam": 554, "layout": [30, 31, 81, 133, 145, 164, 167, 223, 225, 231, 348, 369, 393, 402, 409, 514, 517, 525, 526, 529, 534, 545, 562, 564, 565, 594, 624, 632, 667, 680, 685, 686, 691, 695, 696, 697, 698, 706, 732, 735, 736, 737, 739, 740, 741, 742, 743, 744, 746, 747, 749, 752, 753, 755, 763, 764, 765, 775, 777, 778, 780, 782, 788, 791], "layout_count": [738, 748], "layout_exampl": 759, "layout_stat": 783, "layout_valid": [564, 565, 566], "layoutinst": 241, "layoutobjinst": 241, "layoutvalid": [565, 566, 567, 568, 569], "ld_library_path": 758, "learn": [757, 762, 766, 770, 773, 779, 780, 782, 784, 787, 792], "least": 765, "leav": 369, "left": [14, 260, 293, 340, 341, 525, 539], "legaci": [732, 741, 752, 760], "legacy_pyaedt_integr": [733, 734, 735, 736, 737, 738, 739, 740, 763], "legacy_standalon": [743, 744, 745, 746, 747, 748, 749, 750, 751, 763], "legend": [174, 606], "len": [735, 744], "length": [74, 250, 251, 297, 472, 547, 733, 734, 791], "less": 566, "level": [369, 642, 755], "leverag": 369, "lib": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "lib64": 758, "librari": [258, 291, 573, 586, 762], "licens": 758, "like": [238, 369, 734, 740, 755, 758], "limit": [225, 624], "line": [6, 427, 630, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 760], "linear": [369, 423, 642, 732, 737, 740, 741, 742, 763, 791], "linear_arrai": [733, 734], "lineararrai": [733, 734], "link": [730, 758], "linux": 755, "linux64": 758, "list": [1, 14, 16, 39, 44, 70, 71, 72, 73, 74, 75, 76, 77, 79, 88, 89, 90, 91, 93, 94, 96, 101, 108, 163, 168, 173, 174, 175, 183, 185, 195, 199, 207, 208, 215, 219, 223, 224, 225, 229, 235, 243, 246, 248, 260, 262, 268, 269, 293, 295, 302, 303, 324, 325, 326, 333, 334, 336, 340, 341, 342, 346, 347, 348, 349, 351, 365, 367, 368, 369, 434, 435, 436, 443, 449, 450, 451, 452, 453, 506, 509, 512, 513, 514, 515, 517, 520, 523, 525, 535, 536, 538, 539, 540, 543, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 561, 563, 565, 566, 567, 576, 589, 592, 593, 595, 596, 598, 601, 602, 603, 606, 615, 616, 618, 620, 621, 622, 624, 625, 626, 627, 632, 634, 653, 656, 658, 667, 668, 689, 699, 738, 740, 758, 771, 774, 777, 783], "list_of_deleted_rlc": 79, "list_of_padstack_inst": 219, "literal_ev": 598, "load": [97, 379, 580, 581, 663, 736, 739, 755, 764, 765, 775, 777, 778, 780, 788, 791], "load_regulation_curr": 663, "load_regulation_perc": 663, "loc": 642, "local": [369, 483, 732, 736, 739, 740, 744, 745, 750], "local_path": 750, "locat": [73, 174, 369, 514, 517, 606, 668, 699, 737, 738, 739, 760, 777], "lock": 716, "log": [369, 391, 737, 740, 791], "logcount": 423, "logger": [731, 756], "longer": [731, 756], "longest": [360, 364], "look": [517, 644, 647, 660, 762], "loop": [369, 493, 566, 567, 748], "loss": [572, 573, 574, 576], "loss_tan": 576, "loss_tang": 576, "loss_tangent_at_frequ": 574, "loss_tangent_high": 572, "loss_tangent_low": 572, "lot": 369, "low": [386, 791], "low_frequ": 791, "lower": [14, 33, 236, 260, 293, 340, 341, 369, 513, 525, 539, 572, 595, 746], "lower_freq": 572, "lower_frequ": 572, "lower_left": 340, "lower_left_point": [6, 539, 749], "lowerleftupperright": 539, "lump": [514, 517, 613], "lvalu": [519, 768], "m": [731, 756], "m1": [737, 791], "m2": 791, "m3": 237, "m_dq": 72, "m_ma": 3, "machin": 732, "mag_": 734, "magnitud": [400, 649, 662], "mai": 760, "main": [0, 3, 4, 535, 538], "main_shap": [538, 735], "maintain": [760, 761], "make": [369, 448, 755, 760, 762], "manag": [0, 2, 3, 4, 6, 10, 62, 115, 125, 138, 152, 160, 176, 188, 211, 258, 291, 324, 337, 495, 503, 534, 564, 570, 588, 609, 640, 672, 708, 730], "mand": 448, "mani": 762, "manipul": [755, 785], "manual": 744, "map": [379, 750], "materi": [1, 117, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 674, 682, 684, 733, 734, 735, 739, 743, 750, 755, 783], "material_nam": [577, 578, 585, 587], "matplotlib": [174, 598, 606, 699, 732, 733, 734, 752, 753, 763, 783], "matrix": 390, "matter": 691, "max_arc_point": [736, 791], "max_delta_": 737, "max_delta_z0": 791, "max_el": 791, "max_length": [737, 791], "max_limit": [225, 624], "max_mag_delta_": 369, "max_num_pass": [369, 736, 737], "max_refine_per_pass": 791, "max_thick": 699, "max_triangles_wave_port": 791, "maximum": [219, 225, 369, 399, 401, 402, 472, 473, 542, 624, 791], "maximum_surface_devi": 542, "maximumpass": 734, "maxpass": [733, 735], "maxwel": 755, "mb": [742, 753, 754, 763], "mean": [547, 755, 780], "measur": 674, "medium": 369, "mem": [742, 753, 754, 763], "memori": [369, 755, 780], "merg": [602, 680, 696, 697, 698], "mesh": [369, 385, 386, 388, 389, 392, 393, 394, 399, 401, 403, 404, 406, 407, 417, 424, 472, 474, 475, 477, 478, 483, 484, 630, 734, 791], "mesh_display_attribut": 791, "mesh_freq": 369, "messag": [731, 756], "messeng": [731, 756], "met1": 750, "met2": 750, "metal": [237, 369, 545, 690], "metal6": 750, "metal_layer_snapping_toler": 750, "meter": [21, 72, 91, 369, 431, 432, 433, 440, 514, 566], "method": [5, 6, 9, 10, 62, 115, 125, 138, 152, 160, 176, 188, 211, 215, 258, 291, 337, 369, 376, 393, 428, 495, 503, 534, 564, 570, 588, 593, 609, 613, 630, 640, 672, 674, 680, 696, 697, 698, 700, 708, 730, 733, 734, 744, 755], "mfg": [250, 251], "microstrip": 735, "microvia": [189, 207], "mid": [72, 107, 324, 332], "mid_point": 324, "middl": 514, "midpoint": 346, "might": [109, 369, 514, 731, 756], "min_num_pass": 369, "min_pass": 791, "min_thick": 699, "min_triangles_wave_port": 791, "minim": 533, "minima": 369, "minimum": [369, 405, 406, 407, 408, 409, 476, 477, 478, 610, 630, 791], "minimum_value_to_replac": 610, "minimum_via_numb": 630, "minimum_void_surfac": 369, "minut": [733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751], "misc": [736, 737, 739, 740, 744, 745, 746, 747, 750, 751, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "miter": 540, "mitig": 760, "mix": [369, 390], "mm": 749, "mod": 736, "mode": [24, 699, 730, 731, 756], "model": [12, 13, 29, 35, 38, 51, 56, 60, 66, 67, 70, 74, 79, 103, 105, 107, 219, 324, 337, 534, 538, 543, 546, 547, 572, 574, 576, 658, 730, 733, 734, 735, 736, 737, 738, 743, 745, 748, 749, 751, 755, 777, 786, 790, 791, 793], "model_nam": 736, "model_typ": [105, 736, 791], "modelnam": 105, "modelpath": 105, "modern": 760, "modifi": [680, 735, 755, 780], "modul": [663, 671, 730, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 760, 762], "modulenotfounderror": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "mono": 758, "mop": 791, "more": [89, 351, 365, 367, 369, 509, 566, 592, 744, 755, 758, 760, 762], "most": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 765, 785], "mount": [30, 87], "mounted_cmp": [87, 696, 697, 698], "mounted_compon": [87, 696], "mounted_component_pin1": [87, 696], "mounted_component_pin2": [87, 696], "ms_clearanc": 749, "ms_length": 749, "ms_space": 735, "ms_width": [735, 749], "much": 755, "multi": [442, 791], "multipl": [207, 456, 457, 458, 461, 520, 748], "multipol": 576, "multizon": 692, "must": [72, 74, 109, 369, 372, 506, 512, 513, 514, 515, 523, 613, 630, 691, 730, 740, 758, 760, 765], "my": [731, 756], "my_connector": 737, "my_edb": 369, "my_edb_fil": 76, "my_fil": 369, "my_mp_deby": 576, "my_project": 730, "my_project_vari": 793, "my_report": 369, "my_setup": 641, "my_vari": 793, "myaedb": [258, 291], "myaedbfold": [62, 63, 64, 65, 68, 69, 70, 71, 72, 78, 79, 80, 84, 86, 89, 90, 91, 93, 94, 96, 99, 100, 104, 105, 106, 107, 108, 212, 219, 503, 507, 508, 510, 511, 518, 521, 522, 534, 588, 609, 640, 644, 645, 647, 648, 650, 657, 660, 661], "mydata": 7, "mydcir_4": 744, "myedb": [0, 1, 2, 3, 4, 5, 6, 8, 9, 125, 138, 152, 160, 176, 188, 211, 324, 337], "mygndpingroup": 71, "mymateri": 783, "mymet": 783, "mypad": [176, 188], "myproject": [633, 639], "myvariablenam": 243, "myvariablenamesi": 243, "myvariablenamesx": 243, "myvia": 743, "n": [735, 740, 754], "name": [12, 13, 22, 42, 43, 46, 47, 60, 69, 70, 71, 72, 73, 74, 78, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 115, 126, 128, 138, 139, 141, 153, 154, 160, 164, 168, 174, 176, 209, 210, 212, 213, 214, 217, 218, 219, 220, 226, 229, 234, 240, 242, 243, 247, 250, 251, 252, 253, 267, 268, 269, 282, 285, 301, 302, 303, 316, 319, 359, 363, 369, 371, 372, 373, 374, 378, 379, 380, 382, 422, 435, 436, 443, 449, 450, 451, 452, 491, 495, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 537, 538, 539, 540, 543, 546, 548, 550, 553, 554, 557, 559, 560, 563, 565, 566, 568, 571, 572, 573, 574, 575, 576, 578, 582, 584, 585, 594, 597, 598, 599, 600, 601, 602, 603, 606, 611, 612, 613, 616, 617, 618, 620, 621, 622, 623, 625, 627, 630, 634, 635, 637, 638, 641, 644, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 673, 674, 675, 676, 677, 678, 679, 701, 711, 712, 713, 714, 716, 719, 720, 726, 727, 731, 733, 734, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 774, 776, 777, 783, 789, 791], "nat": 560, "nativ": [369, 755, 761], "nb_patch": [733, 734], "nbpatch": [733, 734], "nearest": [225, 624], "necessari": 219, "need": [109, 369, 533, 553, 734, 744, 755, 758, 761, 765], "neg": [129, 136, 218, 355, 369, 371, 372, 373, 374, 432, 457, 491, 507, 510, 511, 512, 518, 519, 521, 522, 644, 646, 647, 648, 649, 657, 659, 660, 661, 662, 663, 668, 674, 740], "neg_pin": [508, 511, 518, 522, 645, 648, 657, 661], "neg_pin_group_nam": [646, 649, 659, 662, 776], "negative_component_nam": [507, 510, 521, 644, 647, 660], "negative_lay": 668, "negative_loc": 668, "negative_net": 125, "negative_net_nam": [507, 510, 521, 644, 647, 660, 668], "negative_node_compon": [369, 371, 373, 374], "negative_node_net": [369, 371, 373, 374], "negative_pin": 519, "negative_points_on_edg": 512, "negative_primitive_id": 512, "negative_sensor_pin": 663, "negative_termin": [735, 740], "nest": [520, 733, 734], "net": [1, 60, 72, 86, 88, 89, 90, 92, 93, 94, 126, 129, 130, 131, 133, 136, 137, 138, 139, 142, 145, 153, 155, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 189, 225, 229, 240, 267, 268, 269, 282, 285, 301, 302, 303, 316, 319, 326, 327, 336, 363, 369, 371, 373, 374, 442, 447, 449, 452, 507, 509, 510, 517, 520, 521, 537, 538, 539, 540, 543, 548, 550, 554, 560, 563, 565, 566, 567, 568, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 613, 616, 618, 620, 621, 622, 623, 624, 625, 630, 634, 644, 647, 650, 654, 656, 660, 668, 730, 732, 733, 736, 737, 738, 739, 748, 752, 753, 760, 763, 765, 766, 768, 769, 775, 776, 790], "net1": [369, 592, 790], "net2": [369, 566, 592], "net_class": [3, 152], "net_group": 744, "net_list": [72, 509, 545, 548, 565, 566, 567, 625, 740, 746], "net_n": 735, "net_nam": [6, 73, 92, 93, 229, 537, 538, 539, 540, 543, 551, 594, 597, 600, 616, 618, 620, 630, 634, 650, 654, 733, 734, 735, 738, 740, 746, 748, 749, 751, 771, 776, 778, 790], "net_names_list": [563, 602], "net_obj": 740, "net_p": 735, "netclass": [134, 135, 146, 147, 154, 157, 158], "netd3_2": 744, "netlist": [38, 88, 566, 567, 592, 744, 745, 771], "netnam": [71, 90, 623, 633, 639], "netname_list": 601, "nets_data": [17, 37, 125, 138, 152, 160, 166, 218, 239, 261, 281, 294, 315, 343, 362, 604], "nets_n": 740, "nets_nam": 554, "nets_p": 740, "network": [369, 758, 769], "new": [70, 126, 139, 153, 226, 430, 448, 460, 462, 509, 566, 571, 573, 575, 578, 617, 674, 696, 697, 731, 734, 748, 756, 760], "new_desktop_sess": [733, 734, 735, 736, 737, 738, 739, 740], "new_material_nam": 578, "new_padstack_nam": 617, "new_report": 734, "new_simulation_configur": [8, 369, 736, 738, 739, 764, 790], "new_vari": 496, "new_w": 751, "next": [610, 744], "node": [371, 372, 373, 374, 491], "node_to_ground": [369, 372], "nominal_adapt": 734, "non": [732, 741, 755, 780], "non_graph": [733, 734, 735, 736, 737, 738, 739, 749], "nondwir": 369, "none": [3, 11, 12, 13, 15, 22, 26, 29, 48, 60, 61, 66, 67, 70, 71, 72, 73, 74, 75, 76, 88, 90, 92, 93, 97, 103, 105, 106, 107, 108, 115, 125, 138, 152, 174, 217, 218, 220, 226, 229, 243, 267, 268, 269, 301, 302, 303, 369, 372, 430, 447, 448, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 519, 520, 521, 523, 525, 526, 529, 531, 533, 537, 545, 548, 550, 551, 553, 554, 563, 565, 566, 567, 574, 579, 589, 595, 598, 606, 611, 612, 613, 618, 621, 622, 623, 625, 630, 634, 635, 637, 641, 643, 644, 645, 646, 647, 649, 653, 654, 656, 660, 662, 663, 672, 674, 696, 697, 699, 708, 717, 727, 733, 735, 736, 737, 738, 739, 743, 744, 745, 747, 771, 777], "nonfunct": 397, "note": [691, 735, 758], "notebook": [732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "now": [733, 734], "np": [737, 748, 749], "nport": 101, "nport_comp_definit": 736, "null": [230, 275, 310, 356], "num_cor": [737, 740], "num_of_freq_point": [733, 735], "number": [40, 57, 112, 245, 255, 333, 369, 391, 393, 399, 401, 405, 473, 476, 479, 480, 517, 526, 529, 566, 618, 630, 682, 691, 694, 748, 791], "number_of_layer_el": 791, "number_of_termin": 737, "number_of_thread": 745, "numpi": [737, 748, 749], "o": [8, 733, 734, 735, 736, 737, 738, 743, 744, 745, 748, 749, 750, 751, 761], "obj": 73, "object": [0, 3, 4, 10, 17, 20, 27, 28, 31, 37, 73, 74, 75, 90, 100, 114, 125, 126, 127, 129, 130, 131, 138, 139, 140, 142, 152, 153, 155, 160, 161, 162, 176, 178, 179, 188, 189, 211, 223, 224, 226, 228, 230, 233, 239, 241, 244, 258, 261, 275, 281, 286, 290, 291, 294, 310, 315, 320, 322, 337, 343, 348, 349, 352, 356, 358, 362, 368, 369, 378, 380, 390, 413, 423, 439, 504, 505, 508, 511, 514, 517, 518, 520, 522, 529, 531, 533, 535, 537, 538, 541, 545, 548, 563, 566, 591, 594, 613, 614, 622, 628, 629, 638, 640, 641, 642, 643, 645, 648, 652, 657, 661, 734, 735, 736, 737, 738, 743, 749, 750, 785, 790], "obsolet": 436, "obtain": [84, 212], "occur": [225, 624], "odd": 748, "oervwritt": 369, "offici": 760, "offset": [87, 180, 181, 193, 194, 213, 214, 250, 251, 553, 611, 637, 695, 696, 697, 698], "offset_i": [611, 695, 696, 697, 698], "offset_nam": 553, "offset_x": [611, 695, 696, 697, 698], "offset_z": [695, 698], "offseti": 619, "offsetx": [553, 619], "often": 369, "oghz": 739, "ohm": [373, 514, 531, 656], "ohz": 369, "omit": 369, "onc": [736, 746, 760, 761], "one": [72, 73, 89, 225, 351, 365, 367, 369, 421, 434, 442, 448, 491, 509, 520, 547, 566, 592, 601, 610, 624, 630, 748, 759, 761, 765], "ones": [73, 369, 684], "onli": [7, 66, 67, 72, 73, 74, 76, 79, 103, 107, 168, 189, 225, 226, 368, 369, 447, 514, 517, 533, 565, 596, 598, 606, 611, 624, 641, 666, 674, 684, 690, 699, 730, 731, 735, 756, 760, 761, 765, 790, 791], "only_met": 690, "opaqu": 122, "open": [1, 369, 381, 695, 717, 744, 755, 760, 768, 769], "open_project": 7, "oper": [611, 612, 623, 700, 755, 758, 791], "optian": [267, 301], "optimum": 490, "option": [11, 12, 13, 21, 22, 60, 66, 70, 71, 72, 73, 76, 79, 81, 87, 88, 90, 92, 93, 96, 97, 105, 106, 107, 108, 109, 168, 174, 189, 218, 219, 225, 226, 228, 243, 250, 262, 267, 268, 269, 295, 301, 302, 303, 339, 369, 372, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 537, 538, 539, 540, 542, 545, 548, 550, 551, 553, 554, 562, 563, 565, 566, 567, 589, 593, 594, 595, 596, 598, 606, 611, 612, 613, 617, 618, 621, 622, 623, 624, 630, 634, 635, 637, 638, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 673, 674, 675, 676, 677, 678, 682, 684, 690, 695, 696, 697, 698, 699, 708, 709, 711, 712, 714, 717, 727, 731, 737, 756, 791], "order": [14, 219, 260, 293, 341, 369, 390, 566, 680, 691, 736, 791], "order_basi": [737, 791], "order_by_area": 566, "orient": [107, 755], "origin": 553, "other": [250, 251, 352, 369, 393, 566, 730, 734, 735, 758], "otherwis": [22, 27, 90, 119, 120, 231, 250, 251, 355, 601, 691, 748], "out": 735, "outer": 682, "outer_layer_thick": [682, 738, 748], "outlin": [174, 598, 606, 679], "outline_nam": 679, "output": [64, 256, 366, 369, 448, 744, 750], "output_aedb": 369, "output_fil": 378, "output_net": 744, "oval": 637, "over": [579, 695], "overal": [731, 756], "overlap": [369, 674, 692, 699], "overwrit": [72, 613], "overwritten": [72, 434, 448], "own": 760, "p": [735, 751], "p1": 750, "p23": 776, "p_edb": [62, 503, 534, 588, 609, 640], "p_edb_padstack": 176, "packag": [7, 22, 41, 369, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 758, 760], "pad": [176, 187, 219, 267, 268, 301, 302, 397, 406, 610, 611, 612, 619, 635, 636, 637, 738, 739, 780, 786, 787, 788], "pad2": 786, "pad_by_lay": 176, "pad_diam": 735, "pad_instance1": 786, "pad_instance2": 786, "pad_instance3": 786, "pad_offset_i": 611, "pad_offset_x": 611, "pad_param": 637, "pad_polygon": 611, "pad_rot": [611, 637], "pad_shap": [611, 637, 786], "pad_typ": [176, 619], "pad_x_offset": 637, "pad_y_offset": 637, "paddiam": [4, 611, 612, 733, 734, 735, 738, 748, 749, 786], "padedg": [268, 302], "padgeometrytyp": [178, 179, 628, 629], "padparamet": 635, "padstack": [1, 72, 74, 176, 188, 189, 200, 205, 206, 207, 211, 212, 215, 218, 219, 220, 225, 228, 229, 231, 235, 238, 242, 244, 248, 249, 267, 270, 286, 301, 304, 320, 412, 516, 563, 609, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 630, 634, 635, 637, 638, 699, 730, 733, 734, 737, 743, 780], "padstack_data": [268, 269, 302, 303], "padstack_inst": [219, 738], "padstack_nam": [635, 637], "padstackdef": 619, "padstackedbpadstack": 207, "padstackinst": [519, 613, 619, 625, 638, 658], "padstackinstancetermin": [226, 656], "padstacknam": [4, 611, 612, 733, 734, 735, 738, 748, 749, 786], "padstacks_data": [74, 173, 176, 188, 211, 218, 225, 267, 270, 286, 301, 304, 320, 615, 618, 620, 624, 626, 627, 634, 663], "padtyp": [179, 629, 631], "page": [731, 756, 757, 758, 759, 760, 762, 764, 765, 767, 768, 769, 771, 774, 775, 776, 777, 778, 781, 783, 785, 786, 788, 789, 790, 791, 793], "pai": 756, "pair": 3, "pair_u1": 740, "pair_x1": 740, "panda": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "par": 745, "par_nam": [735, 749], "parallel": [11, 29, 70, 74, 106, 658], "param": [735, 749], "paramet": [10, 11, 12, 13, 21, 22, 51, 60, 62, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 103, 105, 106, 107, 108, 109, 126, 139, 153, 168, 174, 176, 178, 179, 183, 184, 185, 188, 189, 195, 196, 211, 218, 219, 225, 226, 228, 229, 243, 250, 251, 258, 262, 267, 268, 269, 291, 295, 301, 302, 303, 333, 339, 346, 347, 351, 352, 354, 365, 367, 369, 371, 372, 373, 374, 378, 380, 430, 443, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 529, 531, 533, 535, 537, 538, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 551, 553, 554, 562, 563, 565, 566, 567, 571, 572, 573, 574, 575, 576, 578, 579, 580, 582, 584, 585, 589, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 606, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 668, 673, 674, 675, 676, 677, 678, 682, 684, 690, 691, 695, 696, 697, 698, 699, 701, 707, 708, 709, 711, 712, 713, 714, 717, 726, 727, 736], "parameter": [732, 737, 741, 742, 752, 753, 763], "parameter_map": 734, "parameter_nam": [554, 745], "parameterlist": 619, "parametr": [243, 553, 554, 732, 734, 739, 741, 742, 752, 753, 763, 780, 793], "parametrize_trace_width": [745, 793], "parent": [10, 640], "pars": [109, 755], "parser": 369, "part": [0, 1, 22, 42, 43, 69, 70, 72, 97, 384, 428, 464, 630, 736, 755, 765], "part_name_col": [97, 736], "partial": 228, "particular": 756, "partit": 219, "partition_max_ord": 219, "pass": [369, 401, 405, 473, 476, 731, 756, 791], "passiv": [369, 396, 410, 740], "pastack": 613, "path": [8, 12, 13, 81, 82, 97, 98, 105, 109, 169, 174, 256, 344, 366, 369, 379, 448, 469, 470, 481, 488, 494, 535, 540, 550, 579, 580, 584, 602, 606, 651, 665, 684, 691, 695, 699, 711, 712, 713, 714, 716, 717, 719, 721, 722, 724, 727, 728, 733, 734, 735, 736, 737, 738, 743, 744, 745, 748, 749, 750, 751, 758, 760], "path_list": [540, 790], "path_to_edb": 514, "path_to_edb_fil": 73, "path_to_wheelhous": 758, "pathtoaedb": 641, "pathtospfil": 105, "pattern": 734, "pcb": [1, 7, 369, 630, 733, 734, 735, 737, 743, 749], "pcb_l": 737, "pcb_len": 735, "pcb_port_1": 777, "pcb_port_2": 777, "pcb_w": [735, 737], "pcie": 745, "pcie0_rx0_n": 8, "pcie0_rx0_p": 8, "pcie0_tx0_n": 8, "pcie0_tx0_n_c": 8, "pcie0_tx0_p": 8, "pcie0_tx0_p_c": 8, "pcie_gen4_rx0_n": 739, "pcie_gen4_rx0_p": 739, "pcie_gen4_rx1_n": 739, "pcie_gen4_rx1_p": 739, "pcie_gen4_tx2_cap_n": 736, "pcie_gen4_tx2_cap_p": 736, "pcie_gen4_tx2_n": 736, "pcie_gen4_tx2_p": 736, "pcie_gen4_tx3_cap_n": 740, "pcie_gen4_tx3_cap_p": 740, "pd": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "pden": 744, "pdn": 369, "pec": [66, 73, 76, 317, 506, 512, 515, 523, 791], "pec_boundari": [66, 73, 76], "pec_launch_width": [506, 512, 515, 523], "pecboundari": [259, 292], "pedb": [10, 115, 258, 291, 495, 564, 672], "pedbpadstack": 176, "penetr": 189, "per": [72, 369, 493, 702], "percent": 663, "percentag": [197, 702], "perfect": [66, 73, 76, 369], "perform": [228, 411, 438, 441, 484, 486, 487, 517, 595, 602, 630, 755, 760, 762, 771], "permiss": 760, "permitt": [572, 573, 574, 576, 783], "permittivity_at_frequ": 574, "permittivity_high": 572, "permittivity_low": 572, "pg_v1p0_s0": 774, "phase": [371, 374, 510, 511, 521, 522, 647, 648, 649, 659, 660, 661, 662, 734, 750, 760], "phase_valu": [369, 371, 373, 374, 510, 511, 521, 522, 647, 648, 660, 661], "phi": 734, "physic": [74, 223, 348, 373, 658], "pi": [369, 737, 748, 755], "pid": 618, "piec": 553, "pin": [0, 40, 44, 66, 67, 70, 71, 72, 73, 74, 76, 79, 84, 87, 89, 90, 91, 92, 93, 94, 103, 108, 212, 225, 231, 238, 245, 246, 267, 269, 301, 303, 369, 442, 482, 493, 507, 508, 511, 516, 518, 519, 522, 533, 566, 600, 613, 618, 619, 623, 624, 626, 627, 632, 634, 639, 644, 645, 646, 648, 649, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 667, 732, 741, 742, 746, 763, 770, 774, 776, 779], "pin1": 73, "pin_group": 778, "pin_list": 93, "pin_nam": 92, "pin_net_nam": [633, 639], "pin_numb": [653, 776], "pingroup": [71, 72, 218, 268, 269, 302, 303, 442, 507, 644, 653, 654], "pingroup_2": 774, "pinlist": 89, "pinnam": [90, 238], "pinpo": 516, "pins_nam": [656, 778], "pins_to_short": 108, "pip": [731, 756, 758], "pixel": [174, 606, 699], "place": [70, 109, 514, 598, 606, 630, 638, 668, 695, 696, 697, 698, 733, 734, 738, 740, 743, 760, 786], "place_3d_compon": 737, "place_in_layout": 697, "place_on_top": [695, 696, 697, 698], "place_padstack": 738, "placement": [33, 46, 54, 57, 59, 87, 236, 247, 255, 257, 696, 697, 698], "placement_lay": [70, 737], "plai": 780, "plan": 760, "plane": [6, 398, 407, 477, 751], "plane_lw_pt": [6, 749], "plane_shap": 738, "plane_up_pt": [6, 749], "plate": [197, 198, 237, 610], "platingthickess": 192, "plot": [3, 369, 598, 732, 744, 749, 752, 753, 763, 783], "plot_3d": 734, "plot_components_on_bottom": [598, 606], "plot_components_on_top": [598, 606, 744, 747], "plot_definit": [699, 743, 747, 748], "plot_nam": 734, "plt": 699, "po": 109, "point": [79, 174, 270, 304, 324, 326, 329, 332, 334, 336, 340, 346, 347, 352, 353, 369, 393, 399, 401, 403, 418, 419, 420, 426, 506, 512, 513, 514, 515, 517, 520, 523, 529, 538, 539, 540, 547, 550, 598, 606, 630, 668, 733, 734, 735, 743], "point_on_edg": [513, 515, 523], "point_on_ref_edg": 513, "pointa": [738, 748], "pointb": [738, 748], "pointdata": [346, 347], "points_n": 735, "points_on_edg": 506, "points_p": 735, "polar": 734, "poli": [514, 542, 546, 547, 777], "poly2": 6, "poly_list": [514, 777], "poly_void": 749, "polygon": [6, 219, 228, 256, 344, 352, 354, 366, 369, 393, 514, 517, 520, 529, 535, 538, 542, 546, 547, 548, 550, 553, 562, 563, 602, 611, 630, 738, 777, 779, 791], "polygon_data": 228, "polygon_hol": 611, "polygondata": [228, 351, 352, 354, 365, 367, 520, 538], "polylin": 547, "poor": 735, "port": [66, 67, 72, 73, 76, 217, 218, 258, 262, 263, 265, 266, 268, 271, 273, 274, 280, 291, 295, 299, 300, 302, 305, 308, 309, 314, 369, 425, 436, 442, 444, 459, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 520, 523, 526, 527, 531, 533, 613, 644, 645, 646, 656, 695, 730, 732, 736, 750, 752, 753, 755, 760, 763, 779, 780, 790, 791], "port_1": 737, "port_imped": 514, "port_loc": [514, 777], "port_nam": [72, 73, 506, 507, 508, 512, 513, 514, 515, 523, 644, 645, 733, 734, 740, 746], "port_poli": [514, 777], "port_typ": 72, "portal": 760, "portboundari": [259, 292], "portnam": 516, "pos_i": 737, "pos_pin": [508, 511, 518, 522, 645, 648, 657, 661], "pos_pin_group_nam": [646, 649, 659, 662, 776], "pos_x": 737, "posit": [91, 131, 137, 225, 243, 369, 371, 372, 373, 374, 433, 458, 490, 491, 506, 507, 510, 511, 512, 516, 518, 519, 521, 522, 537, 624, 634, 644, 646, 647, 648, 649, 650, 657, 659, 660, 661, 662, 663, 668, 733, 734, 735, 740, 748, 786], "positive_component_nam": [507, 510, 521, 644, 647, 660], "positive_lay": 668, "positive_loc": 668, "positive_net": 125, "positive_net_nam": [507, 510, 521, 644, 647, 660, 668], "positive_node_compon": [369, 371, 373, 374], "positive_node_net": [369, 371, 373, 374], "positive_pin": [519, 624], "positive_points_on_edg": 512, "positive_primitive_id": 512, "positive_sensor_pin": 663, "positive_termin": [735, 740], "possibl": [76, 200, 731, 755, 756, 760], "post": [732, 733, 734, 735, 736, 737, 740, 752, 753, 760, 763], "post_layout_parameter": 751, "postprocess": [735, 755], "potenti": 427, "power": [7, 369, 449, 589, 595, 599, 601, 666, 755, 771], "power_list": 745, "power_net": [8, 369, 447, 589, 736, 738, 739, 764], "power_net_nam": 599, "powertree_df": 744, "ppadstack": 188, "practic": [369, 514, 731, 755, 756, 758], "pre": [731, 756], "preced": 775, "prefer": [267, 268, 269, 301, 302, 303, 760], "prefix": [243, 748], "present": [198, 641, 679], "preserv": 448, "prev": 735, "prevent": 369, "previou": 538, "previous": [731, 733, 756], "prim_arc": 324, "prim_id": [513, 515, 523], "prim_typ": 551, "primary_sweep": 734, "primit": [23, 25, 125, 138, 152, 160, 173, 219, 222, 227, 232, 233, 234, 256, 264, 266, 270, 272, 286, 298, 300, 304, 307, 320, 324, 326, 327, 336, 337, 338, 340, 342, 344, 345, 346, 347, 350, 351, 352, 354, 355, 357, 358, 359, 363, 365, 366, 367, 368, 506, 512, 513, 514, 515, 519, 523, 534, 538, 542, 543, 548, 549, 550, 551, 557, 559, 560, 566, 613, 625, 638, 658, 730, 738, 751, 777, 790], "primitive_id": 549, "primitives_data": [175, 266, 270, 286, 300, 304, 320, 324, 337, 352, 354, 536, 537, 539, 540, 547, 549, 550, 555, 556, 558, 561], "primitives_id": 506, "princip": 566, "print": [79, 317, 336, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 748, 749, 751, 783], "probe": [659, 668, 776], "probe_nam": 659, "problem": 735, "procedur": 760, "process": [369, 412, 755, 765], "prod": 109, "produc": [223, 348], "product": [731, 755, 756], "program": 760, "programmat": 762, "proj_path": [717, 727], "project": [84, 86, 89, 90, 91, 93, 94, 96, 212, 243, 369, 376, 383, 411, 422, 429, 441, 444, 447, 448, 507, 508, 510, 511, 518, 521, 522, 586, 644, 645, 647, 648, 650, 651, 657, 660, 661, 695, 709, 713, 716, 717, 718, 719, 720, 721, 727, 731, 732, 733, 734, 738, 740, 741, 742, 743, 746, 748, 750, 755, 756, 759, 760, 763, 765, 768, 769, 780, 790, 793], "project_path": [8, 736, 737, 739, 740], "projectnam": [727, 733, 735, 736, 738, 739], "projectpath": 727, "prop": [733, 734, 735], "properli": [731, 756], "properti": [0, 4, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 77, 99, 100, 101, 104, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 166, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 221, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 370, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 524, 528, 530, 532, 534, 536, 541, 552, 555, 556, 557, 558, 559, 560, 561, 570, 582, 583, 584, 585, 586, 588, 590, 591, 603, 604, 605, 607, 608, 609, 614, 615, 619, 626, 627, 631, 632, 633, 637, 639, 640, 664, 665, 666, 667, 669, 670, 671, 672, 681, 683, 687, 688, 689, 692, 693, 694, 704, 705, 706, 710, 715, 716, 718, 719, 720, 721, 722, 724, 728, 729, 730, 733, 734, 736, 755, 774], "property_nam": 582, "proprietari": 755, "provid": [72, 73, 174, 369, 378, 380, 448, 514, 547, 566, 567, 606, 621, 622, 625, 699, 708, 733, 734, 744, 750, 755, 758, 759, 780], "proxi": 760, "public": 746, "purpos": 750, "push": [731, 756], "pwr": 593, "px": 737, "py": [733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 763], "pyaedt": [369, 460, 462, 722, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 748, 750, 755], "pyaeedt": [352, 354], "pyansi": [731, 755, 756, 760], "pyedb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 37, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 86, 89, 90, 91, 93, 94, 96, 99, 100, 103, 104, 105, 106, 107, 108, 110, 115, 125, 138, 152, 160, 163, 166, 173, 175, 176, 188, 207, 211, 212, 218, 219, 226, 239, 258, 266, 267, 270, 281, 286, 291, 300, 301, 304, 315, 320, 324, 337, 362, 369, 370, 375, 377, 384, 387, 428, 430, 464, 495, 496, 501, 503, 506, 507, 508, 510, 511, 512, 518, 521, 522, 523, 534, 536, 537, 539, 540, 549, 550, 555, 556, 558, 561, 562, 564, 570, 571, 572, 573, 574, 575, 576, 578, 588, 593, 595, 604, 607, 608, 609, 615, 640, 641, 642, 644, 645, 647, 648, 650, 657, 658, 660, 661, 663, 672, 674, 684, 688, 691, 699, 704, 708, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 757, 761, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 780, 781, 783, 785, 786, 788, 789, 790, 791, 793], "pyedb_prj_7lp": 736, "pyedb_prj_es2": 744, "pyedb_prj_h61": 739, "pyedb_prj_jnx": 740, "pyedb_prj_lg5": 745, "pyedb_use_dotnet": 761, "pypi": [757, 760], "pyproject": 7, "python": [73, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 762], "q3d": [369, 426, 755], "quantiti": 744, "quasi": 219, "queri": [744, 755, 771, 780], "question": [731, 756, 757, 760], "quick": 757, "quit": 723, "r": [76, 369, 378, 380], "r1": [1, 7, 90, 106, 730, 734, 758, 760], "r2": [735, 736, 737, 738, 739, 740, 743, 744, 745, 747, 749, 758, 760], "r23": 776, "r_valu": [70, 74, 373, 658, 730, 769], "radial": 515, "radial_extent_factor": [217, 515], "radian": 50, "radiat": [369, 413, 463, 734, 791], "radiation_box": 369, "radiationboxtyp": [369, 413], "radiu": [225, 466, 531, 537, 539, 624], "rang": [200, 611, 735], "rangeend": 734, "rangestart": 734, "rather": 79, "ratio": [189, 197, 237, 369, 437, 593, 610, 791], "ration": 610, "raw_extended_net": [138, 152], "raw_net": 160, "raw_primit": 337, "re": [11, 736], "reach": [369, 414, 731, 756, 760], "read": [1, 368, 579, 580, 584, 585, 730, 755], "reader": 109, "readi": [750, 755], "real": [288, 699], "realized2d": 734, "realized3d": 734, "realizedgaintot": 734, "reason": 369, "reassign": 589, "receiv": 740, "recent": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "recommend": [369, 373, 517], "rectangl": [6, 21, 219, 256, 366, 539, 550, 562, 611, 637, 738, 748, 786, 790], "reduc": [393, 529, 533, 765, 766], "ref_des_list": 509, "ref_loc": [514, 777], "ref_pin": [73, 768, 769], "ref_poli": [514, 777], "ref_prim_id": 513, "refd": [73, 86, 90, 103, 109, 623, 736], "refdes_col": [97, 736], "refer": [0, 3, 4, 47, 60, 66, 67, 70, 72, 73, 76, 83, 86, 92, 94, 97, 103, 107, 109, 218, 225, 267, 268, 269, 270, 276, 284, 286, 301, 302, 303, 304, 311, 318, 320, 369, 372, 449, 454, 509, 513, 514, 515, 520, 533, 543, 616, 623, 624, 641, 653, 654, 656, 736, 759, 762, 765, 768, 769, 777, 778], "reference_design": [83, 92, 653, 654, 776, 778], "reference_height": 107, "reference_lay": [514, 515, 517, 777], "reference_list": [740, 745, 765], "reference_net": [12, 60, 72, 225, 520, 624, 656, 765, 778], "reference_object": [285, 319], "reference_pin": [73, 225, 624], "reference_point": [514, 777], "reference_polygon": [514, 777], "reference_size_i": 107, "reference_size_x": 107, "refin": [369, 394, 483, 486, 487], "refnet": 72, "refresh": [102, 700], "region": [221, 734], "registri": [731, 756], "regul": [663, 671], "rel": [6, 414, 572, 574, 576, 698, 791], "rel_perm": 576, "relat": [62, 369, 640, 760], "relative_residu": 791, "releas": [84, 86, 89, 90, 91, 93, 94, 96, 212, 507, 508, 510, 511, 518, 521, 522, 644, 645, 647, 648, 650, 657, 660, 661, 708, 731, 733, 734, 746, 756, 758, 760, 764, 765, 775, 777, 778, 788, 791], "release_desktop": [733, 734, 735, 736, 737, 738, 739, 740], "release_vers": 758, "remot": [598, 760], "remov": [566, 577, 635, 701, 744, 748, 750, 791], "remove_floating_geometri": 791, "remove_single_pin_compon": [745, 751], "renam": [168, 565, 691, 732, 752, 753, 763, 774, 777], "renamed_net": 566, "renorm": [265, 288, 299], "replac": [66, 67, 76, 103, 115, 436, 610, 630, 641], "replace_3d_triangl": 791, "report": [168, 369, 469, 488, 494, 565, 702, 711, 712, 714, 731, 756, 760], "report_typ": 734, "reports_by_categori": 734, "repositori": [746, 758], "repres": 1, "represent": 539, "representation_typ": [539, 790], "request": [696, 697, 698, 731, 756, 760], "requir": [369, 376, 613, 731, 732, 755, 756], "res_nam": [518, 657], "res_valu": [106, 596], "residu": [702, 791], "resist": [11, 48, 106, 369, 518, 519, 657], "resistor": [70, 74, 75, 96, 373, 493, 518, 595, 657, 658, 666, 740, 770], "resistor_below": [595, 740], "resistor_nam": [518, 657], "resistorsourc": 655, "resolut": 525, "reson": 735, "resort": 393, "resourc": [765, 766], "rest": 109, "restrict": 758, "restrict_length": 791, "restrict_max_el": 791, "result": [369, 447, 666, 724, 755], "retriev": [35, 61, 77, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 101, 121, 122, 123, 169, 212, 379, 382, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 459, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 527, 546, 547, 548, 549, 599, 623, 688, 689, 690, 693, 694, 704, 705, 706, 768, 769, 772, 774, 776, 777, 779, 783, 791], "return": [1, 2, 5, 7, 9, 12, 13, 14, 15, 16, 17, 21, 22, 25, 26, 27, 29, 30, 33, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 119, 120, 121, 122, 126, 127, 130, 139, 140, 142, 153, 155, 161, 162, 163, 166, 168, 169, 173, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 219, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 266, 267, 268, 269, 270, 272, 280, 281, 282, 286, 289, 292, 293, 294, 295, 300, 301, 302, 303, 304, 307, 314, 315, 316, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 362, 363, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 531, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 571, 572, 573, 574, 575, 576, 578, 580, 582, 584, 585, 589, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 607, 608, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 653, 654, 656, 657, 658, 659, 660, 661, 662, 667, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 687, 688, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 704, 706, 709, 711, 712, 713, 714, 716, 717, 719, 720, 721, 722, 723, 724, 726, 727, 728, 733, 734, 744], "return_point": 219, "return_points_onli": 517, "reus": [215, 755, 758], "revert": 79, "review": 758, "rf": [630, 748], "rgb": 116, "right": [14, 260, 293, 340, 341, 525, 539, 731, 756], "rlc": [11, 15, 26, 29, 48, 49, 61, 66, 67, 70, 74, 76, 79, 80, 103, 106, 109, 150, 151, 373, 519, 569, 658, 736, 740, 770], "rlc_n": 740, "rlc_p": 740, "rlcboundari": [259, 292], "rot": 619, "rotat": [87, 201, 538, 539, 611, 634, 637, 695, 696, 697, 698, 735], "rough": 674, "round": [369, 438, 540], "rout": 735, "route_lay": 735, "rpc": 760, "rst4000": 767, "rtree": 622, "rule": 759, "run": [369, 376, 700, 725, 726, 731, 732, 733, 734, 735, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 758, 780], "runner": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "runtim": 758, "rvalu": [518, 519, 657, 768], "s2p": [60, 736], "salder": [72, 95], "same": [369, 442, 514, 593, 691], "sarkar": 574, "save": [174, 369, 606, 685, 699, 709, 727, 745, 755, 765, 783, 786, 789, 790, 791], "save_edb": [73, 76, 103, 733, 734, 735, 736, 737, 738, 739, 743, 744, 748, 749, 765, 767, 768, 769, 774, 775, 776, 777, 778], "save_edb_a": [743, 751], "save_edb_fpath": 751, "save_field": [733, 735, 791], "save_plot": [174, 606, 699], "save_project": [709, 733, 734, 736, 737, 740], "save_rad_field_onli": 791, "sball_diam": [107, 746], "sball_height": [107, 746], "sball_mid_diam": 107, "sballlayer_nam": 638, "scale": [642, 699, 737, 740, 791], "scale_elev": [699, 747], "scan": 652, "scan_typ": 652, "schedul": 755, "scratch": 785, "script": [733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751, 755, 758, 762], "search": [225, 595, 624, 730, 762], "search_radiu": [225, 624], "second": [547, 733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 746, 747, 748, 749, 750, 751], "secondari": 566, "secondary_sweep": 734, "section": [0, 1, 3, 4, 427, 684, 730, 740, 744, 745, 746, 747, 750, 760, 780], "secur": 758, "see": [755, 757, 758, 760], "seen": 735, "segment": [330, 333, 547], "select": [369, 383, 390, 391, 413, 423, 439, 447, 621, 622, 746, 765, 766, 777, 783, 790], "selection_polygon": 553, "self": [72, 95, 567, 731, 733, 734, 755, 756], "sensit": 594, "sensor": 663, "sep": 740, "separ": [613, 630], "serd": 740, "seri": [11, 29, 70, 74, 658], "serial": [150, 595], "serv": [266, 267, 268, 269, 300, 301, 302, 303], "server": 760, "servic": [731, 756], "session": 598, "set": [24, 66, 73, 76, 97, 107, 109, 189, 250, 251, 369, 370, 373, 375, 377, 384, 428, 447, 464, 492, 501, 502, 531, 551, 635, 636, 637, 638, 641, 663, 666, 707, 744, 758, 760, 761, 780, 783, 787, 788, 790], "set_all_antipad_valu": 788, "set_dc_slid": 744, "set_differential_pair": [735, 740], "set_solder_bal": 746, "set_solderbal": [733, 734], "set_solution_broadband": 791, "set_solution_multi_frequ": 791, "set_solution_single_frequ": [737, 791], "set_triangles_wave_port": 791, "setispowerground": 171, "setnam": [135, 147, 158, 172], "setter": [733, 734, 736, 746, 774], "setup": [7, 382, 503, 504, 640, 641, 642, 643, 708, 711, 712, 714, 732, 752, 753, 758, 763, 780, 791], "setup1": [737, 740, 750, 791], "setup1a": 791, "setupnam": [733, 735], "sever": [73, 448], "sg_via_d": 737, "shape": [55, 72, 107, 535, 538, 562, 611, 630, 637, 735, 738, 748], "share": [755, 758, 760], "sharp": 540, "sheet": 759, "shell": 791, "shield": 630, "short": [66, 73, 76, 108, 168, 565], "should": [369, 393, 514, 761], "show": [174, 258, 291, 369, 489, 606, 699, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 758, 759, 762, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 780, 781, 783, 785, 786, 788, 789, 790, 791, 793], "show_legend": [174, 606], "shown": [84, 174, 212, 606], "shunt": 151, "shutil": 750, "si": [369, 642, 736, 744, 745, 747, 755], "side": [479, 480, 748], "sig": [737, 749, 777], "sig1": 781, "sig3": 781, "sig_1": 735, "sig_2": 735, "sig_c": 737, "sig_l": 737, "sig_w": 737, "signal": [7, 72, 88, 174, 189, 369, 452, 520, 589, 595, 598, 606, 673, 674, 675, 676, 677, 678, 691, 693, 704, 705, 755, 765, 766, 783, 790], "signal_lay": [737, 738, 748, 783], "signal_list": [740, 745, 765], "signal_net": [8, 369, 447, 589, 736, 738, 739, 746, 764, 765], "signal_net_nam": 751, "signal_path": 737, "signal_trac": 737, "signal_via_padstack": 735, "silkscreen": 674, "sim_setup": [8, 369, 371, 373, 374, 736, 738, 764, 790], "simpl": [762, 776], "simple_check": 228, "simpler": [733, 734, 755, 762], "simpli": 761, "simplifi": [393, 630, 755], "simul": [369, 376, 382, 435, 666, 711, 713, 725, 726, 730, 733, 734, 736, 744, 755, 762, 765, 780], "simulatio": 739, "simulation_configur": [369, 370, 375, 377, 378, 380, 384, 428, 464, 739], "simulation_nam": [711, 712, 714], "simulation_setup": [387, 504, 505, 529, 531, 533, 643], "simulationconfigur": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 428, 464, 504, 505, 529, 531, 533, 643, 730, 790], "simulationconfigurationac": [369, 370, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 730], "simulationconfigurationbatch": [375, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 730], "simulationconfigurationdc": [377, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 730], "simulationdc": 369, "sin": [737, 748], "sinc": 74, "singl": [73, 79, 228, 369, 390, 550, 630, 758, 791], "singlefrequencydatalist": [733, 735], "sink_po": 776, "site": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "siw": [7, 744], "siw_fil": 744, "siwav": [1, 5, 9, 369, 372, 373, 383, 397, 398, 406, 407, 408, 415, 427, 465, 466, 477, 490, 593, 640, 641, 642, 643, 644, 645, 647, 648, 650, 652, 657, 660, 661, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 740, 752, 753, 755, 758, 763, 767, 774, 776, 778, 780, 792], "siwave_fil": 744, "siwave_simulation_setup_data": [641, 642], "siwavedcsimulationsetup": 641, "siwavesyz": [8, 736], "siwavesyzsimulationsetup": 642, "size": [72, 107, 174, 189, 192, 250, 251, 404, 454, 533, 606, 642, 699, 751, 773], "skin": 791, "skin_depth": 791, "skip": [72, 429, 444], "sky130_fictitious_dtc_exampl": 750, "sky130_fictitious_dtc_example_control_no_map": 750, "sl_space": 735, "sl_width": 735, "sleep": 740, "slide": [369, 490], "slider": 642, "slow": 215, "slowest": 566, "sma_rf_surface_mount": 737, "small_void_area": 791, "smaller": 369, "smallest": 169, "snap": 416, "snap_via_group": 750, "so": [72, 369, 448, 613, 699], "softwar": 758, "solder": [52, 53, 54, 55, 72, 87, 95, 107, 369, 434, 445, 613, 638, 680, 697, 698, 740], "solder_ball_height": [87, 696], "solder_balls_height": 72, "solder_balls_mid_s": 72, "solder_balls_s": 72, "solder_diamet": 750, "solder_height": [697, 698], "solder_mask": [674, 783], "solder_past": 674, "solderbal": 638, "solderlay": 634, "soldermask": [21, 682, 783], "soldermask_thick": [682, 738, 748], "solut": [477, 733, 734, 735, 736, 791], "solution_typ": 734, "solutions_custom": 734, "solv": [7, 735, 736, 755], "solve_siwav": 744, "solver": [369, 383, 426, 427, 465, 755, 791], "solver_typ": [8, 369, 736, 738], "solvertyp": [369, 383], "some": [731, 732, 756, 757, 760, 762], "soon": 761, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 743, 745, 746, 747, 748, 749, 750, 751, 760, 780], "source_nam": [369, 372, 510, 511, 521, 522, 647, 648, 650, 660, 661], "sourcetyp": 72, "space": 109, "sparamet": 736, "sparametermodel": 736, "special": 7, "specif": [369, 538, 554, 585, 635, 731, 748, 756, 765, 776, 777], "specifi": [72, 174, 219, 369, 427, 448, 507, 537, 563, 566, 572, 598, 606, 610, 613, 644, 651, 699, 751, 791], "specified_vers": [708, 733, 734, 735, 736, 737, 738, 739, 740], "speed": [7, 369, 490, 765, 766], "spheroid": [72, 107], "sphinx": [732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "spice": [13, 56, 105, 736], "spicemodel": 736, "spicemodelnam": 105, "squar": [566, 637], "stabl": [731, 756], "stack": [268, 302, 636, 680, 738, 780], "stackup": [1, 119, 554, 638, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 730, 737, 738, 780, 786, 790], "stackup_lay": 2, "stackup_thick": 783, "stackupsimpl": 748, "standalon": [713, 755, 759], "start": [209, 252, 369, 417, 418, 540, 547, 594, 611, 612, 642, 699, 743, 744, 759, 760, 762, 777, 785], "start_azimuth": 791, "start_cap_styl": [540, 748, 749], "start_coordin": 336, "start_freq": [8, 369, 642, 736, 738, 739, 764, 789], "start_lay": [611, 735, 748, 786], "start_with": 594, "startlay": 612, "stat": 771, "statist": 773, "step": [369, 419, 642, 736], "step_freq": [8, 369, 642, 736, 738, 739, 764, 789], "stop": [210, 250, 251, 253, 369, 420, 611, 642], "stop_freq": [8, 369, 642, 736, 738, 739, 764, 789], "stop_lay": [611, 735, 748, 786], "store": [215, 734, 736], "str": [12, 13, 15, 22, 26, 42, 43, 45, 46, 47, 48, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 111, 113, 121, 126, 139, 153, 163, 168, 174, 176, 180, 181, 186, 188, 193, 194, 200, 201, 204, 209, 210, 212, 218, 219, 225, 226, 229, 234, 240, 242, 243, 247, 250, 251, 252, 253, 256, 259, 267, 268, 269, 280, 282, 292, 301, 302, 303, 314, 316, 359, 363, 366, 371, 372, 373, 374, 378, 379, 380, 382, 385, 386, 422, 435, 436, 443, 448, 449, 450, 451, 452, 466, 469, 470, 472, 478, 481, 488, 491, 494, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 537, 538, 539, 540, 543, 548, 550, 551, 553, 554, 563, 565, 566, 567, 571, 572, 573, 574, 575, 576, 578, 579, 580, 582, 584, 585, 589, 592, 594, 595, 598, 599, 600, 602, 604, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 630, 633, 634, 635, 636, 637, 638, 639, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 668, 673, 674, 675, 676, 677, 678, 682, 683, 684, 688, 691, 692, 695, 699, 701, 704, 708, 711, 712, 713, 714, 716, 717, 719, 720, 721, 722, 724, 726, 727, 728, 749], "straight": 330, "string": [72, 113, 184, 191, 369, 520, 594, 598, 746], "striplin": 735, "structur": 71, "stub": [250, 251], "student": 758, "style": 540, "sub_circuit_nam": 13, "submiss": 755, "submit": [731, 756], "substrat": [733, 734], "succe": [103, 685, 696, 697, 698], "succeed": [22, 378, 380, 504, 505, 531, 533, 630], "success": [60, 66, 67, 70, 75, 76, 78, 80, 85, 105, 106, 107, 108, 189, 219, 228, 250, 251, 344, 371, 373, 374, 496, 509, 516, 517, 519, 529, 537, 538, 539, 542, 543, 544, 553, 563, 589, 602, 610, 611, 612, 616, 623, 635, 636, 637, 643, 679, 690, 691, 695, 709, 711, 712, 713, 714, 717, 723, 726, 727], "suffix": 746, "suit": 755, "support": [66, 67, 73, 74, 76, 103, 369, 383, 390, 423, 611, 696, 697, 698, 699, 731, 755, 756, 760, 761], "sure": [448, 760], "surfac": [369, 393, 402, 406, 409, 478, 529, 542, 545], "surface_triangle_length": 791, "surpport": 369, "svia": [4, 748], "sw": [371, 373, 374], "sweep": [369, 391, 395, 396, 400, 410, 414, 418, 419, 420, 421, 422, 423, 429, 642, 750, 790, 791], "sweep1": [733, 734, 735, 737, 750, 791], "sweep_nam": 369, "sweep_typ": [369, 733, 735], "sweepnam": [733, 735], "sweeptyp": [369, 423, 642], "switch": [72, 731, 756], "swz": 792, "sy": 586, "symbol": 674, "symmetr": [682, 749], "syntax": [238, 759], "syslib": 585, "system": [7, 758], "syz": [369, 651, 732, 741, 742, 763, 789], "t": [369, 514, 734, 748, 755], "t1": 735, "t2": 735, "take": [72, 73, 369, 514, 545], "taken": [563, 635, 637], "talk": 427, "tan": 189, "tangent": [572, 573, 574, 576], "target": [506, 512, 513, 515, 523, 698], "target_aedb": [736, 739], "target_fil": [371, 373, 374], "target_padstack_nam": 617, "target_path": [225, 624], "targetfil": [685, 740, 744, 745, 746, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "targetfile1": [87, 695, 696, 697, 698, 702], "targetfile2": [696, 697, 698], "targetfold": 747, "task": 771, "team": [731, 756, 760], "technologi": 755, "technology_fil": 750, "temp": [369, 378, 380, 470, 736, 739, 740, 744, 745, 750], "temp_fold": [740, 744, 745, 746, 747, 759, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 783, 785, 788, 789, 791, 793], "tempfil": [733, 734, 750], "temporari": [369, 736, 740, 745, 747, 750], "temppath": [750, 751], "termin": [73, 218, 220, 226, 258, 267, 268, 269, 270, 276, 277, 278, 284, 289, 291, 301, 302, 303, 304, 311, 312, 313, 318, 321, 372, 491, 506, 512, 513, 514, 515, 520, 523, 533, 613, 650, 655, 656, 668, 731, 734, 756, 758], "terminal_point": [514, 777], "test": [328, 380, 574, 758, 774], "test2": 786, "test_0rlc": 769, "test_dc": 789, "test_isrc": 369, "test_layout": 734, "test_port": 774, "test_renam": 774, "test_sweep": 369, "test_vsrc": 369, "text": [81, 97, 109], "than": [72, 79, 250, 251, 566, 595, 630, 731, 756], "thei": [79, 695], "them": [79, 369, 630, 732, 744, 762], "therefor": [547, 755], "thermal": [369, 471, 755], "theta": 734, "thi": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 17, 23, 66, 72, 73, 76, 103, 109, 119, 120, 159, 174, 189, 215, 222, 229, 230, 231, 250, 251, 258, 260, 261, 264, 275, 286, 291, 293, 294, 298, 310, 320, 341, 343, 345, 352, 355, 356, 369, 376, 390, 393, 409, 427, 448, 496, 497, 498, 499, 500, 501, 502, 514, 517, 520, 545, 606, 610, 611, 613, 630, 642, 680, 684, 695, 697, 698, 699, 700, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 758, 759, 760, 764, 765, 767, 768, 769, 771, 772, 774, 775, 776, 777, 778, 780, 781, 783, 785, 786, 788, 789, 790, 791, 793], "thick": [189, 198, 635, 674, 680, 682, 686, 699, 733, 734, 735, 737, 743, 781, 783, 786, 790], "thoroughli": [731, 756], "those": 533, "three": 735, "threshold": [96, 416, 427, 593, 595], "through": [7, 96, 200, 596, 611, 740, 755, 758], "thu": [755, 765], "ti": 369, "time": [369, 545, 652, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 765, 785], "time_xtalk": 652, "titl": [731, 756], "tm": [733, 734], "tmpfold": [733, 734], "tolay": [634, 733, 734, 738], "toler": [410, 542], "too": 369, "tool": [7, 731, 756], "top": [2, 6, 30, 57, 176, 214, 219, 251, 255, 598, 606, 612, 638, 678, 680, 691, 695, 696, 697, 698, 699, 733, 734, 735, 737, 738, 743, 744, 748, 749, 777, 783], "top_lay": 783, "top_layer_obj": [6, 749], "topic": 758, "total": [192, 339, 526, 733, 734, 735, 736, 737, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 763, 783], "touch": 163, "touchston": [105, 651], "touchstone_file_path": 651, "trace": [108, 169, 517, 520, 527, 540, 554, 630, 734, 735, 738, 739, 777, 779, 786, 790, 793], "trace_in_lay": [738, 748], "trace_in_width": [738, 748], "trace_n": 735, "trace_out_lay": [738, 748], "trace_out_width": [738, 748], "trace_p": 735, "trace_path": 749, "trace_seg": 751, "trace_w": 734, "trace_w2": 734, "trace_width": [554, 738], "trace_with_via_f": 786, "traceback": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "transform": [696, 697, 698], "translat": 755, "treat": 369, "tree": 599, "tri": 517, "trigger": 638, "trim": [454, 533], "trim_to_termin": 533, "troubleshoot": [757, 762], "true": [0, 8, 22, 27, 29, 30, 60, 66, 67, 70, 72, 73, 74, 75, 76, 78, 80, 85, 103, 105, 106, 107, 108, 109, 119, 120, 168, 174, 189, 219, 225, 226, 228, 231, 250, 251, 339, 355, 369, 371, 373, 374, 378, 380, 393, 394, 395, 396, 398, 411, 416, 421, 424, 426, 429, 438, 441, 442, 444, 445, 446, 447, 455, 456, 457, 458, 459, 461, 463, 465, 468, 471, 474, 475, 484, 485, 486, 487, 489, 492, 496, 504, 505, 509, 516, 517, 519, 529, 531, 533, 542, 543, 544, 545, 553, 563, 565, 589, 595, 598, 600, 601, 602, 606, 610, 611, 613, 616, 624, 630, 635, 636, 637, 638, 643, 651, 658, 663, 666, 679, 682, 684, 685, 690, 691, 695, 696, 697, 698, 699, 709, 711, 712, 713, 714, 717, 723, 726, 727, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 747, 748, 750, 751, 764, 777, 786, 790, 791], "truncat": 455, "try": [563, 735], "tupl": [71, 87, 116, 174, 213, 214, 506, 512, 523, 547, 606, 619, 621, 699], "tutori": [762, 772], "two": [66, 73, 76, 506, 512, 513, 514, 515, 518, 523, 547, 630, 646, 649, 657, 659, 662, 668, 697, 698, 735, 740, 748], "txt": [7, 731, 756], "type": [15, 26, 29, 35, 48, 61, 67, 72, 79, 97, 103, 105, 109, 176, 177, 202, 231, 255, 259, 271, 289, 292, 305, 321, 352, 369, 387, 413, 515, 539, 551, 562, 619, 642, 652, 673, 674, 675, 676, 677, 678, 687, 692, 699, 712, 736, 740, 751, 762, 780, 791], "typic": 369, "u": 758, "u1": [73, 736, 739, 744, 764, 767, 768, 769, 774, 775, 776, 778], "u100": [87, 696, 697, 698], "u15": 764, "u1_pcie_gen4_tx3_cap_n": 740, "u1_pcie_gen4_tx3_cap_p": 740, "u2": 744, "u2a5": [0, 8, 72, 73, 507, 508, 510, 511, 518, 521, 522, 644, 645, 647, 648, 650, 657, 660, 661], "u7": 778, "u7_gnd": 778, "u9": 771, "u9_gnd_pin": 771, "ui": 755, "um": 750, "uncom": [735, 739], "undefin": [57, 115, 200, 255, 352], "undefinedlayertyp": 673, "under": 761, "understand": [757, 762], "union": 791, "union_polygon": 791, "uniqu": [72, 613], "unit": [237, 554, 563, 611, 612, 733, 735, 736, 744, 745, 747, 750], "unitless": 369, "unless": 369, "unspecifi": [372, 491], "unwant": 514, "up": [369, 680, 699, 740, 744, 758, 760, 765, 766, 780], "updat": [106, 109, 587, 734, 760, 783], "upgrad": [731, 756, 758], "upper": [14, 59, 257, 260, 293, 340, 341, 513, 525, 539, 731, 756], "upper_pad_to_lower_pad": [200, 611], "upper_right_point": [6, 539, 749], "us": [0, 1, 3, 4, 60, 67, 70, 72, 73, 74, 81, 84, 97, 108, 109, 212, 219, 225, 369, 371, 373, 374, 393, 410, 414, 426, 431, 432, 433, 437, 438, 440, 447, 448, 454, 456, 457, 458, 459, 460, 461, 462, 463, 468, 479, 480, 482, 492, 493, 514, 517, 520, 545, 553, 554, 574, 593, 598, 610, 611, 613, 618, 620, 624, 625, 630, 642, 651, 658, 684, 696, 697, 698, 708, 713, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 752, 756, 757, 758, 759, 761, 762, 780, 785, 790, 793], "usag": [369, 760, 791], "usb3_d_n": 776, "use_airbox_horizontal_extent_multipl": 790, "use_airbox_negative_vertical_extent_multipl": 790, "use_airbox_positive_vertical_extent_multipl": 790, "use_arc_to_chord_error": 791, "use_dc_custom_set": 744, "use_default_coax_port_radial_extens": [369, 764], "use_default_cutout": [8, 369], "use_defeatur": 791, "use_defeature_abs_length": 791, "use_dielectric_extent_multipl": 790, "use_dot_separ": 613, "use_pyaedt_cutout": 736, "use_pyaedt_extent_comput": 745, "use_q3d_for_dc": [369, 733, 735], "use_radiation_boundari": 369, "use_round_corn": 745, "use_shell_el": 791, "user": [369, 446, 674, 734, 736, 739, 740, 744, 745, 750, 755, 760, 762], "user_defined_component_nam": 734, "user_defined_ext": 520, "usual": [369, 630, 740], "util": 495, "v": [751, 758], "v1": [371, 373, 374, 744], "v1p0_s0": [326, 327, 336], "v1p5_s3": [507, 510, 521, 644, 647, 650, 660], "v222": 758, "v231": 760, "val": [178, 179, 628, 629], "vale": [72, 95], "valid": [514, 564, 674, 691], "valu": [15, 21, 26, 48, 49, 67, 70, 72, 73, 74, 81, 91, 96, 97, 106, 109, 110, 178, 179, 184, 186, 193, 194, 196, 199, 200, 201, 219, 225, 249, 250, 251, 263, 288, 339, 369, 371, 372, 373, 374, 379, 388, 389, 391, 392, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 425, 426, 427, 429, 431, 432, 433, 434, 437, 440, 444, 447, 454, 456, 457, 458, 459, 461, 466, 467, 468, 471, 472, 474, 475, 477, 478, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 501, 502, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 547, 554, 569, 572, 595, 598, 606, 610, 619, 621, 622, 624, 628, 629, 630, 634, 636, 638, 642, 644, 647, 648, 652, 654, 657, 658, 660, 661, 663, 686, 695, 696, 697, 698, 699, 737, 738, 744, 761, 771, 783, 787, 788], "value_col": [97, 736], "valuefield": 109, "variabl": [111, 112, 113, 114, 215, 243, 496, 497, 498, 499, 500, 501, 502, 730, 734, 737, 758, 761, 780], "variable_valu": [554, 745], "variableserv": 495, "variat": 734, "variou": [758, 780], "vcc": 369, "vdd": 738, "vector": [87, 553, 696], "venv": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "veri": 369, "version": [84, 86, 89, 90, 91, 93, 94, 96, 212, 507, 508, 510, 511, 518, 521, 522, 644, 645, 647, 648, 650, 657, 660, 661, 708, 710, 729, 731, 734, 735, 736, 737, 738, 743, 749, 756, 757, 762, 764, 765, 775, 777, 778, 788, 791], "vertic": [219, 323, 369, 432, 433, 506, 512, 514, 515, 517, 523], "vertical_extent_factor": [506, 512, 515, 523], "via": [120, 189, 196, 206, 237, 369, 475, 487, 494, 610, 615, 625, 626, 627, 630, 634, 695, 712, 730, 732, 738, 750, 752, 753, 763], "via_0": 786, "via_ap_d": 737, "via_dens": 791, "via_diam": 735, "via_hol": 739, "via_hole_s": [4, 738, 748], "via_materi": 791, "via_nam": [634, 733, 734, 735], "via_num_sid": 791, "via_opt": 748, "via_pitch": 748, "via_report_fil": 369, "via_set": 791, "via_spac": [734, 735], "via_styl": 791, "view": [730, 755, 759, 762], "virt_gnd": [733, 734], "virtual": [758, 760], "visibl": 695, "visual": 755, "vname": 751, "void": [229, 232, 339, 357, 369, 408, 409, 478, 535, 538, 544, 735, 751, 791], "void_poli": 735, "void_shap": [535, 735], "volt": [371, 374], "voltag": [75, 369, 371, 373, 374, 485, 521, 522, 659, 660, 661, 662, 663, 668, 671, 779], "voltage_valu": [371, 373, 374, 521, 522, 660, 661], "voltagesourc": 655, "volum": 237, "vp_neg": 776, "vp_po": 776, "vprobe": 776, "vrm": 744, "vrm_current_sourc": 776, "vrm_po": 776, "vrm_voltage_sourc": 776, "vss": 738, "w1": 734, "w1_name": 734, "w2": 734, "wai": [731, 744, 755, 756], "wall": 630, "want": [369, 448, 517, 765], "warn": [731, 756], "wave": [262, 266, 268, 291, 295, 300, 302, 506, 512, 515, 523, 777], "wave_port_1": 735, "wave_port_2": 735, "waveguid": 749, "waveport": [262, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 730], "we": [369, 734, 750], "websit": [755, 758], "well": 755, "were": [544, 592], "what": 757, "wheelhous": 760, "when": [60, 66, 67, 70, 72, 73, 74, 75, 76, 78, 80, 85, 90, 95, 103, 105, 106, 107, 108, 189, 219, 225, 226, 228, 344, 369, 371, 373, 374, 378, 380, 393, 395, 396, 410, 411, 421, 424, 426, 429, 431, 432, 433, 434, 438, 440, 441, 444, 445, 447, 448, 454, 456, 457, 458, 459, 461, 468, 471, 474, 475, 484, 485, 486, 487, 489, 492, 496, 504, 505, 509, 514, 516, 517, 519, 529, 531, 533, 537, 538, 539, 542, 543, 544, 545, 553, 589, 595, 601, 602, 610, 616, 624, 630, 636, 643, 651, 658, 684, 685, 690, 691, 696, 697, 698, 709, 711, 712, 713, 714, 717, 723, 726, 727, 736], "where": [57, 72, 73, 514, 634, 638, 674, 692, 760], "whether": [11, 66, 70, 73, 76, 79, 106, 107, 119, 120, 174, 189, 218, 221, 225, 226, 228, 231, 265, 274, 276, 287, 296, 299, 309, 311, 328, 355, 456, 458, 460, 461, 462, 498, 563, 566, 595, 606, 611, 613, 624, 634, 642, 651, 674, 682, 684, 690, 695, 699, 709], "which": [71, 72, 73, 79, 81, 93, 97, 109, 218, 219, 225, 235, 267, 285, 301, 319, 369, 450, 460, 507, 510, 514, 521, 537, 538, 539, 540, 553, 554, 563, 566, 567, 595, 612, 613, 619, 624, 630, 635, 642, 644, 647, 660, 684, 696, 697, 698, 708, 734, 735, 736, 740, 745, 746, 747, 750, 755, 758, 765], "while": [547, 733, 734, 755, 761], "white": [711, 714], "who": 758, "why": 757, "width": [108, 169, 174, 317, 506, 512, 515, 523, 527, 539, 540, 554, 606, 699, 733, 734, 735, 743, 748, 749, 751, 790, 793], "window": [7, 731, 755, 756, 758], "winx64": 760, "wire": [369, 486], "wirebond": [369, 674], "within": 730, "without": 758, "won": 369, "work": [514, 641, 758, 759, 760, 780], "workflow": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755], "would": 757, "write": [1, 731, 756, 760], "write_xml": 750, "written": 755, "writtent": 691, "x": [14, 91, 107, 180, 193, 248, 260, 293, 326, 333, 336, 340, 341, 342, 520, 525, 537, 538, 546, 547, 550, 553, 611, 634, 637, 695, 696, 697, 698, 744], "x1": [538, 621, 736, 739, 750], "x1_pcie_gen4_tx3_n": 740, "x1_pcie_gen4_tx3_p": 740, "x2": [538, 621, 750], "x_size": [611, 735, 786], "x_valu": 336, "xc": 538, "xloc": 748, "xlsx": 684, "xml": [684, 691, 737, 743, 745], "xn": 538, "xy": 32, "y": [14, 91, 107, 181, 194, 248, 260, 293, 326, 333, 336, 340, 341, 342, 520, 525, 537, 538, 546, 547, 550, 553, 611, 634, 637, 695, 696, 697, 698, 744], "y1": [538, 621, 750], "y2": [538, 621, 750], "y_size": [611, 735, 786], "y_valu": 336, "yc": 538, "yield": 579, "yloc": 748, "yloc_l": 749, "yloc_u": 749, "yn": 538, "you": [109, 369, 448, 517, 730, 731, 732, 733, 734, 735, 736, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 765, 771, 780, 785], "your": [369, 732, 758, 760, 780], "z": [695, 698], "z0": [288, 425], "zero": [189, 369, 390, 788], "zip": 758}, "titles": ["Components", "EDB manager", "Stackup &amp; layers", "Nets", "vias and padstacks", "Ports", "Modeler &amp; primitives", "Siwave manager", "Simulation configuration", "Sources and excitations", "EDBComponent", "assign_rlc_model", "assign_s_param_model", "assign_spice_model", "bounding_box", "cap_value", "center", "component", "component_def", "component_instance", "component_property", "create_clearance_on_component", "create_package_def", "delete", "enabled", "id", "ind_value", "is_enabled", "is_null", "is_parallel_rlc", "is_top_mounted", "layout_instance", "location", "lower_elevation", "model", "model_type", "name", "net", "netlist_model", "nets", "numpins", "package_def", "part_name", "partname", "pinlist", "pins", "placement_layer", "refdes", "res_value", "rlc_values", "rotation", "s_param_model", "solder_ball_diameter", "solder_ball_height", "solder_ball_placement", "solder_ball_shape", "spice_model", "top_bottom_association", "type", "upper_elevation", "use_s_parameter_model", "value", "Components", "ICs", "IOs", "Others", "add_port_on_rlc_component", "add_rlc_boundary", "capacitors", "components_by_partname", "create", "create_pingroup_from_pins", "create_port_on_component", "create_port_on_pins", "create_rlc_component", "create_source_on_component", "deactivate_rlc_component", "definitions", "delete", "delete_single_pin_rlc", "disable_rlc_component", "export_bom", "export_definition", "find_by_reference_designator", "get_aedt_pin_name", "get_component_by_name", "get_component_net_connection_info", "get_component_placement_vector", "get_components_from_nets", "get_nets_from_pin_list", "get_pin_from_component", "get_pin_position", "get_pins", "get_pins_name_from_net", "get_rats", "get_solder_ball_height", "get_through_resistor_list", "import_bom", "import_definition", "inductors", "instances", "nport_comp_definition", "refresh_components", "replace_rlc_by_gap_boundaries", "resistors", "set_component_model", "set_component_rlc", "set_solder_ball", "short_component_pins", "update_rlc_from_bom", "EdbValue", "name", "tofloat", "tostring", "value", "LayerEdbClass", "color", "fill_material", "id", "is_stackup_layer", "is_via_layer", "name", "transparency", "type", "update", "EDBDifferentialPairData", "add_net", "api_class", "api_create", "api_negative_net", "api_nets", "api_positive_net", "delete", "find_by_name", "is_null", "name", "negative_net", "positive_net", "EDBExtendedNetData", "add_net", "api_class", "api_create", "api_nets", "components", "delete", "find_by_name", "is_null", "name", "nets", "rlc", "serial_rlc", "shunt_rlc", "EDBNetClassData", "add_net", "api_create", "api_nets", "delete", "is_null", "name", "nets", "EDBNetsData", "api_class", "api_object", "components", "create", "delete", "extended_net", "find_by_name", "find_dc_short", "get_smallest_trace_width", "is_null", "is_power_ground", "name", "padstack_instances", "plot", "primitives", "EDBPadProperties", "geometry_type", "int_to_geometry_type", "int_to_pad_type", "offset_x", "offset_y", "parameters", "parameters_values", "parameters_values_string", "polygon_data", "rotation", "shape", "EDBPadstack", "convert_to_3d_microvias", "hole_diameter", "hole_diameter_string", "hole_finished_size", "hole_offset_x", "hole_offset_y", "hole_parameters", "hole_params", "hole_plating_ratio", "hole_plating_thickness", "hole_properties", "hole_range", "hole_rotation", "hole_type", "instances", "material", "name", "padstack_instances", "split_to_microvias", "via_layers", "via_start_layer", "via_stop_layer", "EDBPadstackInstance", "aedt_name", "backdrill_bottom", "backdrill_top", "bounding_box", "component", "create_coax_port", "create_port", "create_rectangle_in_pad", "create_terminal", "dcir_equipotential_region", "delete", "get_connected_object_id_set", "get_connected_objects", "get_reference_pins", "get_terminal", "id", "in_polygon", "in_voids", "is_null", "is_pin", "is_void", "layer", "layer_name", "layer_range_names", "lower_elevation", "metal_volume", "name", "net", "net_name", "object_instance", "padstack_definition", "parametrize_position", "pin", "pin_number", "pingroups", "placement_layer", "position", "rotation", "set_backdrill_bottom", "set_backdrill_top", "start_layer", "stop_layer", "terminal", "top_bottom_association", "type", "upper_elevation", "GapPort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "id", "impedance", "is_circuit_port", "is_null", "is_reference_terminal", "layer", "location", "magnitude", "name", "net", "net_name", "phase", "ref_terminal", "reference_net_name", "reference_object", "renormalize", "renormalize_z0", "terminal_type", "type", "WavePort", "boundary_type", "bounding_box", "component", "couple_ports", "deembed", "deembed_length", "delete", "do_renormalize", "get_edge_terminal_reference_primitive", "get_pad_edge_terminal_reference_pin", "get_padstack_terminal_reference_pin", "get_pin_group_terminal_reference_pin", "get_point_terminal_reference_primitive", "hfss_type", "horizontal_extent_factor", "id", "impedance", "is_circuit_port", "is_null", "is_reference_terminal", "layer", "location", "name", "net", "net_name", "pec_launch_width", "ref_terminal", "reference_net_name", "reference_object", "terminal_type", "type", "vertical_extent_factor", "EDBArcs", "center", "end", "height", "is_ccw", "is_point", "is_segment", "length", "mid_point", "points", "points_raw", "radius", "start", "EDBPrimitives", "arcs", "area", "bbox", "bounding_box", "center", "component", "convert_to_polygon", "delete", "get_closest_arc_midpoint", "get_closest_point", "get_connected_object_id_set", "get_connected_objects", "id", "intersect", "intersection_type", "is_arc", "is_intersecting", "is_negative", "is_null", "is_void", "layer", "layer_name", "longest_arc", "name", "net", "net_name", "shortest_arc", "subtract", "type", "unite", "voids", "SimulationConfiguration", "ac_settings", "add_current_source", "add_dc_ground_source_term", "add_rlc", "add_voltage_source", "batch_solve_settings", "build_simulation_project", "dc_settings", "export_json", "filename", "import_json", "open_edb_after_build", "setup_name", "solver_type", "SimulationConfigurationAc", "adaptive_high_freq", "adaptive_low_freq", "adaptive_type", "arc_angle", "arc_to_chord_error", "basis_order", "decade_count", "defeature_abs_length", "defeature_layout", "do_lambda_refinement", "enforce_causality", "enforce_passivity", "ignore_non_functional_pads", "include_inter_plane_coupling", "max_arc_points", "max_mag_delta_s", "max_num_passes", "max_suf_dev", "mesh_freq", "mesh_sizefactor", "min_num_passes", "min_pad_area_to_mesh", "min_plane_area_to_mesh", "min_void_area", "minimum_void_surface", "passivity_tolerance", "percentage_error_z0", "process_padstack_definitions", "radiation_box", "relative_error", "return_current_distribution", "snap_length_threshold", "start_azimuth", "start_freq", "step_freq", "stop_freq", "sweep_interpolating", "sweep_name", "sweep_type", "use_arc_to_chord_error", "use_error_z0", "use_q3d_for_dc", "xtalk_threshold", "SimulationConfigurationBatch", "add_frequency_sweep", "add_source", "airbox_horizontal_extent", "airbox_negative_vertical_extent", "airbox_positive_vertical_extent", "coax_solder_ball_diameter", "components", "coplanar_instances", "cutout_subdesign_expansion", "cutout_subdesign_round_corner", "cutout_subdesign_type", "dielectric_extent", "do_cutout_subdesign", "do_pingroup", "etching_factor_instances", "generate_excitations", "generate_solder_balls", "honor_user_dielectric", "include_only_selected_nets", "output_aedb", "power_nets", "signal_layer_etching_instances", "signal_layers_properties", "signal_nets", "sources", "trim_reference_size", "truncate_airbox_at_ground", "use_airbox_horizontal_extent_multiple", "use_airbox_negative_vertical_extent_multiple", "use_airbox_positive_vertical_extent_multiple", "use_default_coax_port_radial_extension", "use_default_cutout", "use_dielectric_extent_multiple", "use_pyaedt_cutout", "use_radiation_boundary", "SimulationConfigurationDc", "dc_compute_inductance", "dc_contact_radius", "dc_error_energy", "dc_export_thermal_data", "dc_full_report_path", "dc_icepak_temp_file", "dc_import_thermal_data", "dc_max_init_mesh_edge_length", "dc_max_num_pass", "dc_mesh_bondwires", "dc_mesh_vias", "dc_min_num_pass", "dc_min_plane_area_to_mesh", "dc_min_void_area_to_mesh", "dc_num_bondwire_sides", "dc_num_via_sides", "dc_per_pin_res_path", "dc_per_pin_use_pin_format", "dc_percent_local_refinement", "dc_perform_adaptive_refinement", "dc_plot_jv", "dc_refine_bondwires", "dc_refine_vias", "dc_report_config_file", "dc_report_show_Active_devices", "dc_slide_position", "dc_source_terms_to_ground", "dc_use_dc_custom_settings", "dc_use_loop_res_for_per_pin", "dc_via_report_path", "Variable", "delete", "description", "is_parameter", "name", "value", "value_object", "value_string", "EdbHfss", "configure_hfss_analysis_setup", "configure_hfss_extents", "create_bundle_wave_port", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_coax_port_on_component", "create_current_source_on_net", "create_current_source_on_pin", "create_differential_wave_port", "create_edge_port_horizontal", "create_edge_port_on_polygon", "create_edge_port_vertical", "create_hfss_ports_on_padstack", "create_lumped_port_on_net", "create_resistor_on_pin", "create_rlc_boundary_on_pins", "create_vertical_circuit_port_on_clipped_traces", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_wave_port", "excitations", "get_layout_bounding_box", "get_ports_number", "get_trace_width_for_traces_with_ports", "hfss_extent_info", "layout_defeaturing", "probes", "set_coax_port_attributes", "sources", "trim_component_reference_size", "EdbLayout", "add_void", "circles", "create_circle", "create_polygon", "create_rectangle", "create_trace", "db", "defeature_polygon", "delete_primitives", "fix_circle_void_for_clipping", "get_layout_statistics", "get_polygon_bounding_box", "get_polygon_points", "get_polygons_by_layer", "get_primitive", "get_primitive_by_layer_and_point", "get_primitives", "layers", "parametrize_polygon", "parametrize_trace_width", "paths", "polygons", "polygons_by_layer", "primitives", "primitives_by_layer", "primitives_by_net", "rectangles", "shape_to_polygon_data", "unite_polygons_on_layer", "LayoutValidation", "dc_shorts", "disjoint_nets", "fix_self_intersections", "illegal_net_names", "illegal_rlc_values", "Materials", "add_conductor_material", "add_debye_material", "add_dielectric_material", "add_djordjevicsarkar_dielectric", "add_material", "add_multipole_debye_material", "delete_material", "duplicate", "iterate_materials_in_amat", "load_amat", "load_material", "material_property_to_id", "materials", "read_materials", "read_syslib_material", "syslib", "update_material", "EdbNets", "classify_nets", "components_by_nets", "db", "delete", "eligible_power_nets", "find_or_create_net", "generate_extended_nets", "get_dcconnected_net_list", "get_net_by_name", "get_plot_data", "get_powertree", "is_net_in_component", "is_power_gound_net", "merge_nets_polygons", "netlist", "nets", "nets_by_components", "plot", "power", "signal", "EdbPadstacks", "check_and_fix_via_plating", "create", "create_circular_padstack", "create_coax_port", "db", "definitions", "delete_padstack_instances", "duplicate", "get_instances", "get_pad_parameters", "get_padstack_instance_by_net_name", "get_padstack_instances_intersecting_bounding_box", "get_padstack_instances_rtree_index", "get_pinlist_from_component_and_net", "get_reference_pins", "get_via_instance_from_net", "instances", "instances_by_name", "int_to_geometry_type", "int_to_pad_type", "merge_via_along_lines", "pad_type", "pingroups", "pins", "place", "remove_pads_from_padstack", "set_all_antipad_value", "set_pad_property", "set_solderball", "vias", "EdbSiwave", "add_siwave_dc_analysis", "add_siwave_syz_analysis", "configure_siw_analysis_setup", "create_circuit_port_on_net", "create_circuit_port_on_pin", "create_circuit_port_on_pin_group", "create_current_source_on_net", "create_current_source_on_pin", "create_current_source_on_pin_group", "create_dc_terminal", "create_exec_file", "create_impedance_crosstalk_scan", "create_pin_group", "create_pin_group_on_net", "create_pin_group_terminal", "create_port_between_pin_and_layer", "create_resistor_on_pin", "create_rlc_component", "create_voltage_probe_on_pin_group", "create_voltage_source_on_net", "create_voltage_source_on_pin", "create_voltage_source_on_pin_group", "create_vrm_module", "excitations", "icepak_component_file", "icepak_use_minimal_comp_defaults", "pin_groups", "place_voltage_probe", "probes", "sources", "voltage_regulator_modules", "Stackup", "add_document_layer", "add_layer", "add_layer_above", "add_layer_below", "add_layer_bottom", "add_layer_top", "add_outline_layer", "adjust_solder_dielectrics", "all_layers", "create_symmetric_stackup", "dielectric_layers", "export", "flip_design", "get_layout_thickness", "layer_types", "layers", "layers_by_id", "limits", "load", "mode", "non_stackup_layers", "num_layers", "place_a3dcomp_3d_placement", "place_in_layout", "place_in_layout_3d_placement", "place_instance", "plot", "refresh_layer_collection", "remove_layer", "residual_copper_area_per_layer", "set_layer_clone", "signal_layers", "stackup_layers", "thickness", "update_layout", "Siwave", "close_project", "current_version", "export_dc_simulation_report", "export_element_data", "export_icepak_project", "export_siwave_report", "icepak", "lock_file", "open_project", "oproject", "project_file", "project_name", "project_path", "pyaedt_dir", "quit_application", "results_directory", "run_dc_simulation", "run_icepak_simulation", "save_project", "src_dir", "version_keys", "API reference", "Contribute", "Examples", "EDB: 5G linear array antenna", "EDB: Layout Components", "EDB: fully parametrized design", "EDB: Pin to Pin project", "EDB: geometry creation", "EDB: geometry creation", "EDB: parameterized design", "EDB: SYZ analysis", "AEDT integration", "Computation times", "EDB: geometry creation", "EDB: Siwave analysis from EDB setup", "EDB: IPC2581 export", "EDB: Rename nets and ports", "EDB: plot nets with Matplotlib", "EDB: parametric via creation", "EDB: fully parametrized CPWG design", "EDB: Edit Control File and import gds", "EDB: post-layout parameterization", "Standalone", "Computation times", "Computation times", "About PyEDB", "Contribute", "Getting started", "Installation", "Quick code", "Troubleshooting", "Versions and interfaces", "PyEDB documentation 0.18.0", "Computation times", "Build a signal integrity project", "Clip a design", "Build simulation projects", "Create a resistor boundary on pins", "Create an RLC boundary on pins", "Create an RLC component between pins", "Working with a component", "Get layout statistics", "Get layout size", "Run layout queries", "Create a circuit port", "Create a coaxial port", "Create current and voltage sources", "Create an edge port", "Create port between a pin and layer", "Create sources", "User guide", "Add a layer in a layout stackup", "Work with a layer stackup", "Edit a layer stackup in a layout stackup", "Load a layout file", "Load a layout", "Create a padstack instance", "Work with a padstack", "Edit a padstack definition", "Set up a SIwave analysis", "Define an HFSS extent", "Set up an HFSS simulation", "Set up simulations", "Define design variables"], "titleterms": {"0": 762, "1": 738, "18": 762, "2": 738, "3d": [733, 734, 737], "5g": 733, "about": 755, "ac_set": 370, "ad": 738, "adaptive_high_freq": 385, "adaptive_low_freq": 386, "adaptive_typ": 387, "add": [733, 734, 735, 737, 738, 743, 781], "add_conductor_materi": 571, "add_current_sourc": 371, "add_dc_ground_source_term": 372, "add_debye_materi": 572, "add_dielectric_materi": 573, "add_djordjevicsarkar_dielectr": 574, "add_document_lay": 673, "add_frequency_sweep": 429, "add_lay": 674, "add_layer_abov": 675, "add_layer_below": 676, "add_layer_bottom": 677, "add_layer_top": 678, "add_materi": 575, "add_multipole_debye_materi": 576, "add_net": [126, 139, 153], "add_outline_lay": 679, "add_port_on_rlc_compon": 66, "add_rlc": 373, "add_rlc_boundari": 67, "add_siwave_dc_analysi": 641, "add_siwave_syz_analysi": 642, "add_sourc": 430, "add_void": 535, "add_voltage_sourc": 374, "addit": 750, "adher": [731, 756], "adjust_solder_dielectr": 680, "aedb": 759, "aedt": [732, 733, 734, 735, 736, 738, 739, 740, 741], "aedt_nam": 212, "airbox_horizontal_ext": 431, "airbox_negative_vertical_ext": 432, "airbox_positive_vertical_ext": 433, "all": [744, 746, 747, 751, 771], "all_lay": 681, "along": 737, "an": [759, 768, 769, 777, 790, 791], "analysi": [740, 744, 789], "analyz": 736, "ansi": 746, "antenna": 733, "api": 730, "api_class": [127, 140, 161], "api_cr": [128, 141, 154], "api_negative_net": 129, "api_net": [130, 142, 155], "api_object": 162, "api_positive_net": 131, "arc": 338, "arc_angl": 388, "arc_to_chord_error": 389, "area": 339, "around": 737, "arrai": [733, 734], "assign": [735, 751], "assign_rlc_model": 11, "assign_s_param_model": 12, "assign_spice_model": 13, "backdrill_bottom": 213, "backdrill_top": 214, "base": 744, "basis_ord": 390, "batch_solve_set": 375, "bbox": 340, "between": [769, 778], "bom": 736, "boundari": [734, 750, 767, 768], "boundary_typ": [259, 292], "bounding_box": [14, 215, 260, 293, 341], "build": [739, 764, 766], "build_simulation_project": 376, "cap_valu": 15, "capacitor": 68, "center": [16, 325, 342], "check": 736, "check_and_fix_via_pl": 610, "circl": 536, "circuit": 774, "class": [734, 738], "classify_net": 589, "clearanc": [749, 751], "clip": 765, "clone": [731, 756], "close": [733, 734, 736, 737, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751], "close_project": 709, "coax_solder_ball_diamet": 434, "coaxial": [746, 775], "code": [731, 756, 759], "color": [116, 747], "compat": 760, "compon": [0, 17, 62, 143, 163, 216, 261, 294, 343, 435, 734, 736, 737, 738, 744, 746, 769, 770, 771], "component_def": 18, "component_inst": 19, "component_properti": 20, "components_by_net": 590, "components_by_partnam": 69, "comput": [742, 744, 753, 754, 763], "conda": 760, "configur": [8, 736, 740], "configure_hfss_analysis_setup": 504, "configure_hfss_ext": 505, "configure_siw_analysis_setup": 643, "connect": [744, 759, 771], "connector": [733, 734, 738], "contribut": [731, 756], "control": 750, "convert_to_3d_microvia": 189, "convert_to_polygon": 344, "coplanar_inst": 436, "couple_port": [262, 295], "cpwg": 749, "cpython": 758, "creat": [70, 164, 611, 733, 734, 735, 737, 738, 739, 740, 743, 744, 745, 746, 748, 749, 751, 767, 768, 769, 774, 775, 776, 777, 778, 779, 786], "create_bundle_wave_port": 506, "create_circl": 537, "create_circuit_port_on_net": [507, 644], "create_circuit_port_on_pin": [508, 645], "create_circuit_port_on_pin_group": 646, "create_circular_padstack": 612, "create_clearance_on_compon": 21, "create_coax_port": [217, 613], "create_coax_port_on_compon": 509, "create_current_source_on_net": [510, 647], "create_current_source_on_pin": [511, 648], "create_current_source_on_pin_group": 649, "create_dc_termin": 650, "create_differential_wave_port": 512, "create_edge_port_horizont": 513, "create_edge_port_on_polygon": 514, "create_edge_port_vert": 515, "create_exec_fil": 651, "create_hfss_ports_on_padstack": 516, "create_impedance_crosstalk_scan": 652, "create_lumped_port_on_net": 517, "create_package_def": 22, "create_pin_group": 653, "create_pin_group_on_net": 654, "create_pin_group_termin": 655, "create_pingroup_from_pin": 71, "create_polygon": 538, "create_port": 218, "create_port_between_pin_and_lay": 656, "create_port_on_compon": 72, "create_port_on_pin": 73, "create_rectangl": 539, "create_rectangle_in_pad": 219, "create_resistor_on_pin": [518, 657], "create_rlc_boundary_on_pin": 519, "create_rlc_compon": [74, 658], "create_source_on_compon": 75, "create_symmetric_stackup": 682, "create_termin": 220, "create_trac": 540, "create_vertical_circuit_port_on_clipped_trac": 520, "create_voltage_probe_on_pin_group": 659, "create_voltage_source_on_net": [521, 660], "create_voltage_source_on_pin": [522, 661], "create_voltage_source_on_pin_group": 662, "create_vrm_modul": 663, "create_wave_port": 523, "creation": [737, 738, 740, 743, 748], "current": 776, "current_vers": 710, "custom": 747, "cutout": [736, 740, 745, 751], "cutout_subdesign_expans": 437, "cutout_subdesign_round_corn": 438, "cutout_subdesign_typ": 439, "data": [734, 740], "db": [541, 591, 614], "dc": 744, "dc_compute_induct": 465, "dc_contact_radiu": 466, "dc_error_energi": 467, "dc_export_thermal_data": 468, "dc_full_report_path": 469, "dc_icepak_temp_fil": 470, "dc_import_thermal_data": 471, "dc_max_init_mesh_edge_length": 472, "dc_max_num_pass": 473, "dc_mesh_bondwir": 474, "dc_mesh_via": 475, "dc_min_num_pass": 476, "dc_min_plane_area_to_mesh": 477, "dc_min_void_area_to_mesh": 478, "dc_num_bondwire_sid": 479, "dc_num_via_sid": 480, "dc_per_pin_res_path": 481, "dc_per_pin_use_pin_format": 482, "dc_percent_local_refin": 483, "dc_perform_adaptive_refin": 484, "dc_plot_jv": 485, "dc_refine_bondwir": 486, "dc_refine_via": 487, "dc_report_config_fil": 488, "dc_report_show_active_devic": 489, "dc_set": 377, "dc_short": 565, "dc_slide_posit": 490, "dc_source_terms_to_ground": 491, "dc_use_dc_custom_set": 492, "dc_use_loop_res_for_per_pin": 493, "dc_via_report_path": 494, "dcir": 744, "dcir_equipotential_region": 221, "ddr4_dq": 746, "deactivate_rlc_compon": 76, "decade_count": 391, "declar": 759, "deemb": [263, 296], "deembed_length": 297, "defeature_abs_length": 392, "defeature_layout": 393, "defeature_polygon": 542, "defin": [735, 739, 749, 751, 790, 793], "definit": [0, 4, 77, 615, 736, 738, 747, 748, 788], "delet": [23, 78, 132, 144, 156, 165, 222, 264, 298, 345, 496, 592, 744, 751], "delete_materi": 577, "delete_padstack_inst": 616, "delete_primit": 543, "delete_single_pin_rlc": 79, "delta": 751, "descript": 497, "design": [735, 738, 739, 749, 765, 793], "desktop": [733, 734], "dielectric_ext": 440, "dielectric_lay": 683, "differenti": [735, 740], "disable_rlc_compon": 80, "discuss": 760, "disjoint_net": 566, "do_cutout_subdesign": 441, "do_lambda_refin": 394, "do_pingroup": 442, "do_renorm": [265, 299], "document": [731, 756, 762], "download": [736, 740, 745, 746, 747, 750, 751], "draw": [735, 749], "duplic": [578, 617], "e": 734, "edb": [1, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 759], "edbarc": 324, "edbcompon": 10, "edbdifferentialpairdata": 125, "edbextendednetdata": 138, "edbhfss": 503, "edblayout": 534, "edbnet": 588, "edbnetclassdata": 152, "edbnetsdata": 160, "edbpadproperti": 176, "edbpadstack": [188, 609], "edbpadstackinst": 211, "edbprimit": 337, "edbsiwav": 640, "edbvalu": 110, "edg": 777, "edit": [734, 750, 783, 788], "electron": [733, 734], "eligible_power_net": 593, "enabl": 24, "end": [326, 737], "enforce_caus": 395, "enforce_pass": 396, "error": [731, 756, 759, 760], "etching_factor_inst": 443, "exampl": [732, 751], "excit": [9, 524, 664, 733, 734], "exist": 751, "explicit": 759, "export": [684, 744, 745], "export_bom": 81, "export_dc_simulation_report": 711, "export_definit": 82, "export_element_data": 712, "export_icepak_project": 713, "export_json": 378, "export_siwave_report": 714, "extend": 740, "extended_net": 166, "extent": 790, "far": 734, "field": 734, "file": [736, 740, 745, 747, 750, 751, 758, 759, 784], "filenam": 379, "fill_materi": 117, "find_by_nam": [133, 145, 167], "find_by_reference_design": 83, "find_dc_short": 168, "find_or_create_net": 594, "fix_circle_void_for_clip": 544, "fix_self_intersect": 567, "flip_design": 685, "format": 751, "fr4": 737, "frequenc": 737, "from": [738, 744, 751, 758, 759, 771], "fulli": [735, 749], "gapport": 258, "gd": 750, "gener": [735, 739, 740, 748], "generate_excit": 444, "generate_extended_net": 595, "generate_solder_bal": 445, "geometri": [733, 734, 737, 738, 743], "geometry_typ": 177, "get": [736, 744, 751, 757, 771, 772], "get_aedt_pin_nam": 84, "get_closest_arc_midpoint": 346, "get_closest_point": 347, "get_component_by_nam": 85, "get_component_net_connection_info": 86, "get_component_placement_vector": 87, "get_components_from_net": 88, "get_connected_object": [224, 349], "get_connected_object_id_set": [223, 348], "get_dcconnected_net_list": 596, "get_edge_terminal_reference_primit": [266, 300], "get_inst": 618, "get_layout_bounding_box": 525, "get_layout_statist": 545, "get_layout_thick": 686, "get_net_by_nam": 597, "get_nets_from_pin_list": 89, "get_pad_edge_terminal_reference_pin": [267, 301], "get_pad_paramet": 619, "get_padstack_instance_by_net_nam": 620, "get_padstack_instances_intersecting_bounding_box": 621, "get_padstack_instances_rtree_index": 622, "get_padstack_terminal_reference_pin": [268, 302], "get_pin": 92, "get_pin_from_compon": 90, "get_pin_group_terminal_reference_pin": [269, 303], "get_pin_posit": 91, "get_pinlist_from_component_and_net": 623, "get_pins_name_from_net": 93, "get_plot_data": 598, "get_point_terminal_reference_primit": [270, 304], "get_polygon_bounding_box": 546, "get_polygon_point": 547, "get_polygons_by_lay": 548, "get_ports_numb": 526, "get_powertre": 599, "get_primit": [549, 551], "get_primitive_by_layer_and_point": 550, "get_rat": 94, "get_reference_pin": [225, 624], "get_smallest_trace_width": 169, "get_solder_ball_height": 95, "get_termin": 226, "get_through_resistor_list": 96, "get_trace_width_for_traces_with_port": 527, "get_via_instance_from_net": 625, "graphic": [733, 734, 735, 736, 737, 738, 739, 749], "ground": [733, 734, 735, 737, 738, 743, 748, 749], "grpc": [760, 761], "guid": 780, "hard": [731, 756], "height": 327, "hfss": [733, 734, 735, 790, 791], "hfss3dlayout": [737, 740], "hfss_extent_info": 528, "hfss_type": [271, 305], "hole_diamet": 190, "hole_diameter_str": 191, "hole_finished_s": 192, "hole_offset_i": 194, "hole_offset_x": 193, "hole_param": 196, "hole_paramet": 195, "hole_plating_ratio": 197, "hole_plating_thick": 198, "hole_properti": 199, "hole_rang": 200, "hole_rot": 201, "hole_typ": 202, "honor_user_dielectr": 446, "horizontal_extent_factor": 306, "i": 755, "ic": 63, "icepak": 715, "icepak_component_fil": 665, "icepak_use_minimal_comp_default": 666, "id": [25, 118, 227, 272, 307, 350, 759], "ignore_non_functional_pad": 397, "illegal_net_nam": 568, "illegal_rlc_valu": 569, "imped": [273, 308], "import": [733, 734, 735, 736, 740, 744, 745, 746, 747, 748, 749, 750, 751], "import_bom": 97, "import_definit": 98, "import_json": 380, "in_polygon": 228, "in_void": 229, "include_inter_plane_coupl": 398, "include_only_selected_net": 447, "ind_valu": 26, "indic": 762, "induct": 744, "inductor": 99, "initi": 738, "input": [740, 751], "instal": [758, 760], "instanc": [0, 4, 100, 203, 626, 733, 734, 786], "instances_by_nam": 627, "int_to_geometry_typ": [178, 628], "int_to_pad_typ": [179, 629], "integr": [732, 741, 764], "interfac": 761, "intersect": 351, "intersection_typ": 352, "io": 64, "ipc2581": 745, "is_arc": 353, "is_ccw": 328, "is_circuit_port": [274, 309], "is_en": 27, "is_intersect": 354, "is_neg": 355, "is_net_in_compon": 600, "is_nul": [28, 134, 146, 157, 170, 230, 275, 310, 356], "is_parallel_rlc": 29, "is_paramet": 498, "is_pin": 231, "is_point": 329, "is_power_gound_net": 601, "is_power_ground": 171, "is_reference_termin": [276, 311], "is_seg": 330, "is_stackup_lay": 119, "is_top_mount": 30, "is_via_lay": 120, "is_void": [232, 357], "issu": [731, 756, 760], "iterate_materials_in_amat": 579, "latest": 758, "launch": [733, 734, 735, 736, 737, 738, 739, 740, 744, 745, 747, 749], "layer": [2, 233, 277, 312, 358, 552, 688, 733, 734, 735, 743, 747, 748, 751, 778, 781, 782, 783], "layer_nam": [234, 359], "layer_range_nam": 235, "layer_typ": 687, "layeredbclass": 115, "layers_by_id": 689, "layout": [733, 734, 738, 748, 751, 771, 772, 773, 781, 783, 784, 785], "layout_defeatur": 529, "layout_inst": 31, "layoutvalid": 564, "legaci": 761, "length": [331, 731, 756], "limit": [690, 744], "line": [731, 756], "linear": [733, 734], "linux": 758, "list": 744, "load": [691, 759, 771, 784, 785], "load_amat": 580, "load_materi": 581, "locat": [32, 278, 313], "lock_fil": 716, "log": [731, 756], "longest_arc": 360, "loss": 737, "lower_elev": [33, 236], "magnitud": 279, "manag": [1, 7, 759], "materi": [204, 570, 583, 737], "material_property_to_id": 582, "matplotlib": [747, 771], "max_arc_point": 399, "max_mag_delta_": 400, "max_num_pass": 401, "max_suf_dev": 402, "maximum": [731, 756], "memori": 759, "merge_nets_polygon": 602, "merge_via_along_lin": 630, "mesh": 737, "mesh_freq": 403, "mesh_sizefactor": 404, "metal_volum": 237, "mid_point": 332, "min_num_pass": 405, "min_pad_area_to_mesh": 406, "min_plane_area_to_mesh": 407, "min_void_area": 408, "minimum_void_surfac": 409, "mode": [692, 733, 734, 735, 736, 737, 738, 739, 749], "model": [6, 34], "model_typ": 35, "modif": 744, "modul": 1, "name": [36, 111, 121, 135, 147, 158, 172, 205, 238, 280, 314, 361, 499, 735], "negative_net": 136, "net": [3, 37, 39, 148, 159, 239, 281, 315, 362, 604, 734, 735, 740, 743, 744, 745, 746, 747, 751, 771], "net_nam": [240, 282, 316, 363], "netlist": 603, "netlist_model": 38, "nets_by_compon": 605, "non": [733, 734, 735, 736, 737, 738, 739, 749], "non_stackup_lay": 693, "nport_comp_definit": 101, "num_lay": 694, "numpin": 40, "object": 739, "object_inst": 241, "offlin": 758, "offset_i": 181, "offset_x": 180, "one": 744, "onli": 744, "open": [733, 734, 735, 736, 738, 739, 746, 750, 751], "open_edb_after_build": 381, "open_project": 717, "oper": 737, "oproject": 718, "other": 65, "output_aedb": 448, "outsid": [733, 734, 740], "package_def": 41, "pad_typ": 631, "padstack": [4, 735, 738, 747, 748, 749, 786, 787, 788], "padstack_definit": 242, "padstack_inst": [173, 206], "pair": [735, 740], "paramet": [182, 734, 735, 739, 749, 751], "parameter": [739, 751], "parameters_valu": 183, "parameters_values_str": 184, "parametr": [735, 743, 745, 748, 749], "parametrize_polygon": 553, "parametrize_posit": 243, "parametrize_trace_width": 554, "part_nam": 42, "partnam": 43, "passivity_toler": 410, "patch": [733, 734], "path": 555, "pec_launch_width": 317, "per": 751, "percentage_error_z0": 411, "perform": [733, 734, 735, 736, 740, 744, 745, 746, 747, 748, 749, 750, 751], "phase": 283, "pin": [45, 244, 633, 733, 734, 736, 738, 744, 767, 768, 769, 771, 778], "pin_group": 667, "pin_numb": 245, "pingroup": [246, 632], "pinlist": 44, "pip": 760, "place": [634, 735, 737, 748, 749], "place_a3dcomp_3d_plac": 695, "place_in_layout": 696, "place_in_layout_3d_plac": 697, "place_inst": 698, "place_voltage_prob": 668, "placement_lay": [46, 247], "plane": [737, 738, 743, 748, 749], "plot": [174, 606, 699, 733, 734, 735, 736, 737, 738, 739, 740, 743, 745, 747, 748, 750, 751, 771], "point": 333, "points_raw": 334, "polygon": [556, 735], "polygon_data": 185, "polygons_by_lay": 557, "port": [5, 733, 734, 735, 737, 738, 740, 746, 774, 775, 777, 778], "posit": [248, 743, 744], "positive_net": 137, "post": [731, 751, 756], "power": [607, 744], "power_net": 449, "prepar": 740, "primit": [6, 175, 558], "primitives_by_lay": 559, "primitives_by_net": 560, "prior": [733, 734], "probe": [530, 669], "process_padstack_definit": 412, "project": [736, 737, 739, 764, 766], "project_fil": 719, "project_nam": 720, "project_path": 721, "properti": [3, 6, 740], "pyaedt_dir": 722, "pyedb": [731, 755, 756, 758, 759, 760, 762], "pypi": 758, "python": [758, 759, 760], "queri": 773, "quick": 759, "quit_appl": 723, "radiation_box": 413, "radiu": 335, "rat": 744, "read_materi": 584, "read_syslib_materi": 585, "rectangl": 561, "ref_termin": [284, 318], "refd": 47, "refer": 730, "reference_net_nam": [285, 319], "reference_object": [286, 320], "refresh_compon": 102, "refresh_layer_collect": 700, "relative_error": 414, "remove_lay": 701, "remove_pads_from_padstack": 635, "renam": 746, "renorm": 287, "renormalize_z0": 288, "replace_rlc_by_gap_boundari": 103, "report": [733, 734, 740, 744], "repositori": [731, 756], "requir": [733, 734, 735, 736, 740, 744, 745, 746, 747, 748, 749, 750, 751, 758], "res_valu": 48, "residual_copper_area_per_lay": 702, "resistor": [104, 767], "result": [733, 734, 736, 740], "results_directori": 724, "return": 737, "return_current_distribut": 415, "review": 740, "rlc": [149, 744, 768, 769], "rlc_valu": 49, "rotat": [50, 186, 249], "run": [736, 760, 773], "run_dc_simul": 725, "run_icepak_simul": 726, "s_param_model": 51, "save": [733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 746, 748, 749, 751], "save_project": 727, "segment": 751, "serial_rlc": 150, "set": [733, 734, 735, 736, 737, 738, 739, 740, 747, 749, 750, 789, 791, 792], "set_all_antipad_valu": 636, "set_backdrill_bottom": 250, "set_backdrill_top": 251, "set_coax_port_attribut": 531, "set_component_model": 105, "set_component_rlc": 106, "set_layer_clon": 703, "set_pad_properti": 637, "set_solder_bal": 107, "set_solderbal": 638, "setup": [733, 734, 735, 736, 737, 738, 740, 744, 750], "setup_nam": 382, "shape": 187, "shape_to_polygon_data": 562, "short_component_pin": 108, "shortest_arc": 364, "shunt_rlc": 151, "signal": [608, 735, 737, 743, 746, 748, 751, 764], "signal_lay": 704, "signal_layer_etching_inst": 450, "signal_layers_properti": 451, "signal_net": 452, "simul": [8, 735, 738, 739, 750, 766, 791, 792], "simulationconfigur": [369, 738, 739], "simulationconfigurationac": 384, "simulationconfigurationbatch": 428, "simulationconfigurationdc": 464, "siwav": [7, 708, 744, 789], "size": 772, "snap_length_threshold": 416, "solder_ball_diamet": 52, "solder_ball_height": 53, "solder_ball_plac": 54, "solder_ball_shap": 55, "solv": [733, 734, 740], "solver": 735, "solver_typ": 383, "some": 747, "sourc": [9, 453, 532, 670, 744, 776, 779], "specif": 744, "spice_model": 56, "split_to_microvia": 207, "src_dir": 728, "stackup": [2, 672, 733, 734, 735, 743, 744, 747, 748, 749, 750, 781, 782, 783], "stackup_lay": 705, "standalon": [732, 752], "start": [336, 735, 757], "start_azimuth": 417, "start_freq": 418, "start_lay": 252, "statist": 771, "step_freq": 419, "stitch": 749, "stop_freq": 420, "stop_lay": 253, "style": [731, 756], "subtract": 365, "support": 758, "sweep": [733, 734, 737], "sweep_interpol": 421, "sweep_nam": 422, "sweep_typ": 423, "syslib": 586, "syz": 740, "tabl": 762, "termin": 254, "terminal_typ": [289, 321], "them": 771, "thick": 706, "through": 744, "time": [742, 753, 754, 763], "tofloat": 112, "top_bottom_associ": [57, 255], "tostr": 113, "trace": [737, 748, 749, 751], "transpar": 122, "tree": 744, "trim_component_reference_s": 533, "trim_reference_s": 454, "troubleshoot": 760, "truncate_airbox_at_ground": 455, "type": [58, 123, 256, 290, 322, 366], "u1": 746, "unit": 367, "unite_polygons_on_lay": 563, "up": [789, 791, 792], "updat": [124, 758], "update_layout": 707, "update_materi": 587, "update_rlc_from_bom": 109, "upper_elev": [59, 257], "us": [738, 755, 760], "use_airbox_horizontal_extent_multipl": 456, "use_airbox_negative_vertical_extent_multipl": 457, "use_airbox_positive_vertical_extent_multipl": 458, "use_arc_to_chord_error": 424, "use_default_coax_port_radial_extens": 459, "use_default_cutout": 460, "use_dielectric_extent_multipl": 461, "use_error_z0": 425, "use_pyaedt_cutout": 462, "use_q3d_for_dc": 426, "use_radiation_boundari": 463, "use_s_parameter_model": 60, "user": 780, "valu": [61, 114, 500, 731, 736, 756], "value_object": 501, "value_str": 502, "variabl": [495, 738, 748, 751, 759, 793], "version": [758, 761], "version_kei": 729, "vertical_extent_factor": 323, "via": [4, 639, 735, 737, 743, 748, 749], "via_lay": 208, "via_start_lay": 209, "via_stop_lay": 210, "view": [731, 756], "void": 368, "voltag": [744, 776], "voltage_regulator_modul": 671, "w": 751, "wave": [735, 737], "waveport": 291, "what": 755, "wheelhous": 758, "why": 755, "work": [770, 782, 787], "write": 750, "xml": 750, "xtalk_threshold": 427}})