
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\legacy_standalone\11_post_layout_parameterization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_legacy_standalone_11_post_layout_parameterization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_legacy_standalone_11_post_layout_parameterization.py:


EDB: post-layout parameterization
---------------------------------
This example shows you how to parameterize the signal net in post-layout.

.. GENERATED FROM PYTHON SOURCE LINES 30-32

Define input parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: Python

    signal_net_name = "DDR4_ALERT3"
    coplanar_plane_net_name = "1V0"  # Specify coplanar plane net name for adding clearance
    layers = ["16_Bottom"]  # Specify layers to be parameterized








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 39-50

.. code-block:: Python

    import os

    import pyedb
    from pyedb.generic.general_methods import (
        generate_unique_folder_name,
        generate_unique_name,
    )
    from pyedb.misc.downloads import download_file

    temppath = generate_unique_folder_name()








.. GENERATED FROM PYTHON SOURCE LINES 51-53

Download and open example layout file in edb format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: Python

    edb_fpath = download_file("edb/ANSYS-HSD_V1.aedb", destination=temppath)
    appedb = pyedb.Edb(edb_fpath, edbversion="2024.1")



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\actions-runner\_work\pyedb\pyedb\examples\legacy_standalone\11_post_layout_parameterization.py", line 54, in <module>
        appedb = pyedb.Edb(edb_fpath, edbversion="2024.1")
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\generic\design_types.py", line 108, in Edb
        from pyedb.dotnet.edb import Edb as app
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\dotnet\edb.py", line 115, in <module>
        from pyedb.workflow import Workflow
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\workflow.py", line 4, in <module>
        import pandas as pd
    ModuleNotFoundError: No module named 'pandas'




.. GENERATED FROM PYTHON SOURCE LINES 57-59

Cutout
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: Python

    appedb.cutout([signal_net_name], [coplanar_plane_net_name, "GND"], remove_single_pin_components=True)


.. GENERATED FROM PYTHON SOURCE LINES 62-64

Get all trace segments from the signal net
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 64-73

.. code-block:: Python

    net = appedb.nets[signal_net_name]
    trace_segments = []
    for p in net.primitives:
        if p.layer_name not in layers:
            continue
        if not p.type == "Path":
            continue
        trace_segments.append(p)


.. GENERATED FROM PYTHON SOURCE LINES 74-76

Create and assign delta w variable per layer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 76-83

.. code-block:: Python

    for p in trace_segments:
        vname = f"{p.net_name}_{p.layer_name}_dw"
        if vname not in appedb.variables:
            appedb[vname] = "0mm"
        new_w = f"{p.width}+{vname}"
        p.width = new_w


.. GENERATED FROM PYTHON SOURCE LINES 84-86

Delete existing clearance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 86-92

.. code-block:: Python

    for p in trace_segments:
        for g in appedb.modeler.get_polygons_by_layer(p.layer_name, coplanar_plane_net_name):
            for v in g.voids:
                if p.is_intersecting(v):
                    v.delete()


.. GENERATED FROM PYTHON SOURCE LINES 93-95

Create and assign clearance variable per layer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 95-104

.. code-block:: Python

    for p in trace_segments:
        clr = f"{p.net_name}_{p.layer_name}_clr"
        if clr not in appedb.variables:
            appedb[clr] = "0.5mm"
        path = p.get_center_line()
        for g in appedb.modeler.get_polygons_by_layer(p.layer_name, coplanar_plane_net_name):
            void = appedb.modeler.create_trace(path, p.layer_name, f"{p.width}+{clr}*2")
            g.add_void(void)


.. GENERATED FROM PYTHON SOURCE LINES 105-107

Plot
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: Python

    appedb.nets.plot(layers=layers[0], size=2000)


.. GENERATED FROM PYTHON SOURCE LINES 110-112

Save and close Edb
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 112-117

.. code-block:: Python


    save_edb_fpath = os.path.join(temppath, generate_unique_name("post_layout_parameterization") + ".aedb")
    appedb.save_edb_as(save_edb_fpath)
    print("Edb is saved to ", save_edb_fpath)
    appedb.close_edb()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.422 seconds)


.. _sphx_glr_download_examples_legacy_standalone_11_post_layout_parameterization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 11_post_layout_parameterization.ipynb <11_post_layout_parameterization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 11_post_layout_parameterization.py <11_post_layout_parameterization.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
