
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\legacy_standalone\00_EDB_Create_VIA.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_legacy_standalone_00_EDB_Create_VIA.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_legacy_standalone_00_EDB_Create_VIA.py:


EDB: geometry creation
----------------------
This example shows how you can use EDB to create a layout.

.. GENERATED FROM PYTHON SOURCE LINES 29-36

Final expected project
 ~~~~~~~~~~~~~~~~~~~~~~

 .. image:: ../../_static/diff_via.png
  :width: 600
  :alt: Differential Vias.
#####################################################################

.. GENERATED FROM PYTHON SOURCE LINES 38-42

Import EDB layout object
 ~~~~~~~~~~~~~~~~~~~~~~~~
 Import the EDB layout object and initialize it on version 2023 R2.
#####################################################################

.. GENERATED FROM PYTHON SOURCE LINES 42-59

.. code-block:: Python


    import os
    import time

    import pyedb
    from pyedb.generic.general_methods import (
        generate_unique_folder_name,
        generate_unique_name,
    )

    start = time.time()

    aedb_path = os.path.join(generate_unique_folder_name(), generate_unique_name("pcb") + ".aedb")
    edb = pyedb.Edb()
    edb.save_edb_as(aedb_path)




.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\actions-runner\_work\pyedb\pyedb\examples\legacy_standalone\00_EDB_Create_VIA.py", line 55, in <module>
        edb = pyedb.Edb()
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\generic\design_types.py", line 108, in Edb
        from pyedb.dotnet.edb import Edb as app
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\dotnet\edb.py", line 115, in <module>
        from pyedb.workflow import Workflow
      File "C:\actions-runner\_work\pyedb\pyedb\.venv\lib\site-packages\pyedb\workflow.py", line 4, in <module>
        import pandas as pd
    ModuleNotFoundError: No module named 'pandas'




.. GENERATED FROM PYTHON SOURCE LINES 60-65

Add stackup layers
~~~~~~~~~~~~~~~~~~
Add stackup layers.
A stackup can be created layer by layer or imported from a csv file or xml file.


.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: Python


    edb.stackup.add_layer("GND")
    edb.stackup.add_layer("Diel", "GND", layer_type="dielectric", thickness="0.1mm", material="FR4_epoxy")
    edb.stackup.add_layer("TOP", "Diel", thickness="0.05mm")


.. GENERATED FROM PYTHON SOURCE LINES 71-74

Create signal net and ground planes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a signal net and ground planes.

.. GENERATED FROM PYTHON SOURCE LINES 74-86

.. code-block:: Python


    points = [
        [0.0, 0],
        [100e-3, 0.0],
    ]
    edb.modeler.create_trace(points, "TOP", width=1e-3)
    points = [[0.0, 1e-3], [0.0, 10e-3], [100e-3, 10e-3], [100e-3, 1e-3], [0.0, 1e-3]]
    edb.modeler.create_polygon(points, "TOP")

    points = [[0.0, -1e-3], [0.0, -10e-3], [100e-3, -10e-3], [100e-3, -1e-3], [0.0, -1e-3]]
    edb.modeler.create_polygon(points, "TOP")


.. GENERATED FROM PYTHON SOURCE LINES 87-90

Create vias with parametric positions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create vias with parametric positions.

.. GENERATED FROM PYTHON SOURCE LINES 90-102

.. code-block:: Python


    edb.padstacks.create("MyVia")
    edb.padstacks.place([5e-3, 5e-3], "MyVia")
    edb.padstacks.place([15e-3, 5e-3], "MyVia")
    edb.padstacks.place([35e-3, 5e-3], "MyVia")
    edb.padstacks.place([45e-3, 5e-3], "MyVia")
    edb.padstacks.place([5e-3, -5e-3], "MyVia")
    edb.padstacks.place([15e-3, -5e-3], "MyVia")
    edb.padstacks.place([35e-3, -5e-3], "MyVia")
    edb.padstacks.place([45e-3, -5e-3], "MyVia")



.. GENERATED FROM PYTHON SOURCE LINES 103-106

Geometry Plot
~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 106-108

.. code-block:: Python

    edb.nets.plot(None, color_by_net=True)


.. GENERATED FROM PYTHON SOURCE LINES 109-112

Stackup Plot
~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 112-115

.. code-block:: Python

    edb.stackup.plot(plot_definitions="MyVia")



.. GENERATED FROM PYTHON SOURCE LINES 116-119

Save and close EDB
~~~~~~~~~~~~~~~~~~
Save and close EDB.

.. GENERATED FROM PYTHON SOURCE LINES 119-126

.. code-block:: Python


    if edb:
        edb.save_edb()
        edb.close_edb()
    print("EDB saved correctly to {}. You can import in AEDT.".format(aedb_path))
    end = time.time() - start
    print(end)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.016 seconds)


.. _sphx_glr_download_examples_legacy_standalone_00_EDB_Create_VIA.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 00_EDB_Create_VIA.ipynb <00_EDB_Create_VIA.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 00_EDB_Create_VIA.py <00_EDB_Create_VIA.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
